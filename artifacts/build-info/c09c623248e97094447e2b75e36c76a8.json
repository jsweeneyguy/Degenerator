{
	"id": "c09c623248e97094447e2b75e36c76a8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"StakingContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// Import Ownable contract from OpenZeppelin\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n//ERC20 Interface \nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n//Guard against reentrant vunerabilities \nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"./IFairLaunchFactory.sol\";\n\ncontract DegeneratorStaking is Context, ReentrancyGuard {\n    address public factoryAddress;\n    address public multiSigAddress;\n    address public tokenAddress;\n    uint256 public minimumStakeAmount;\n    uint256 public rewardBlackoutPeriod;\n    IFairLaunchFactoryV1 public factory;\n\n    uint256 public degeneratorStakingPool;\n    uint256 public degeneratorStakers;\n    \n    modifier onlyStaker() {\n        require(addressStake[msg.sender].activeDeposit);\n        _;\n    }\n\n    modifier launchpadOnly() {\n        require(factory.isAddressLaunchpad(msg.sender) == true);\n        _; // Continue execution of the function\n    }\n\n    modifier multiSigOnly() {\n        require(msg.sender == multiSigAddress, \"Only multiSig address can call this function\");\n        _; // Continue execution of the function\n    }\n\n    struct Stake {\n        uint256 amount;\n        uint256 blockStaked;\n        bool withdrawn;\n        bool activeDeposit;\n    }\n\n    struct ERC20Supply {\n        uint256 poolSupply;\n        uint256 blockSupplied;\n        uint256 remainingPoolSupply;\n        uint256 degeneratorPoolSizeAtTime; \n        bool registered;\n    }\n\n    mapping(address => Stake) private addressStake;\n    mapping(address => ERC20Supply) public erc20Supplies;\n    mapping(address => mapping(address => bool)) public addressWithdrewERC20Reward;\n\n    event degeneratorStaked(address indexed staker, uint256 amount, uint256 blockStaked);\n    event degeneratorWithdrawn(address indexed staker, uint256 amount);\n\n    constructor(address _factoryAddress, address _multiSigAddress , address _tokenAddress, uint256 _minimumStakeAmount, uint256 _rewardBlackoutPeriod) {\n        factoryAddress = _factoryAddress;\n        multiSigAddress = _multiSigAddress;\n        tokenAddress = _tokenAddress;\n        rewardBlackoutPeriod = _rewardBlackoutPeriod;\n        minimumStakeAmount = _minimumStakeAmount;\n        degeneratorStakingPool = 0;\n        degeneratorStakers = 0;\n    }\n\n    function stakeDegnerator(uint256 _amount) public nonReentrant {\n        IERC20 token = IERC20(tokenAddress);\n        require(_amount > minimumStakeAmount, \"Amount must be greater than zero\");\n        require(token.transferFrom(_msgSender(), address(this), _amount), \"Transfer failed\");\n        require(!addressStake[_msgSender()].activeDeposit);\n\n        addressStake[_msgSender()].amount += _amount;\n        addressStake[_msgSender()].blockStaked = block.number;\n        degeneratorStakingPool += _amount;\n        degeneratorStakers += 1;\n\n        emit degeneratorStaked(_msgSender(), _amount, block.number);\n\n    }\n\n    function withdrawDegenerator() public nonReentrant {\n        require(addressStake[_msgSender()].amount > 0, \"No stake found\");\n        require(!addressStake[_msgSender()].withdrawn, \"Stake already withdrawn\");\n        IERC20 token = IERC20(tokenAddress);\n        uint256 amount = addressStake[_msgSender()].amount;\n        addressStake[_msgSender()].withdrawn = true;\n        addressStake[_msgSender()].activeDeposit = false;\n\n        require(token.transfer(_msgSender(), amount), \"Transfer failed\");\n        degeneratorStakingPool -= amount;\n        degeneratorStakers -= 1;\n        addressStake[msg.sender].amount = 0;\n        addressStake[_msgSender()].blockStaked = 0;\n        emit degeneratorWithdrawn(_msgSender(), amount);\n    }\n\n    function registerERC20Supply(address _tokenAddress, uint256 _poolSupply) public nonReentrant {\n        require(IERC20(_tokenAddress).balanceOf(address(this)) == _poolSupply);\n        require(!erc20Supplies[_tokenAddress].registered);\n        erc20Supplies[_tokenAddress].blockSupplied = block.number;\n        erc20Supplies[_tokenAddress].poolSupply = _poolSupply; \n        erc20Supplies[_tokenAddress].remainingPoolSupply = _poolSupply; \n        erc20Supplies[_tokenAddress].degeneratorPoolSizeAtTime = degeneratorStakingPool;\n    }\n\n    \n    function withdrawRewards(address[] calldata _tokenAddresses) public onlyStaker nonReentrant {\n        for (uint256 i = 0; i < _tokenAddresses.length; i++) {\n            require(getTokenEligibility(_tokenAddresses[i], msg.sender));\n            require(!addressWithdrewERC20Reward[_tokenAddresses[i]][msg.sender]);\n            uint256 tokenReward = getTokenReward(_tokenAddresses[i], msg.sender);\n            addressWithdrewERC20Reward[_tokenAddresses[i]][msg.sender] = true;\n            IERC20(_tokenAddresses[i]).transfer(msg.sender, tokenReward);\n        }\n    }\n\n    function getTokenEligibility(address _tokenAddress, address _account) public view returns(bool) {\n        require(erc20Supplies[_tokenAddress].registered);\n        return (addressStake[_account].blockStaked + rewardBlackoutPeriod) <= erc20Supplies[_tokenAddress].blockSupplied;\n    }\n\n    function getTokenReward(address _tokenAddress, address _account) public view returns(uint256) {\n        require(getTokenEligibility(_tokenAddress, _account));\n        uint256 poolSupply = erc20Supplies[_tokenAddress].poolSupply;\n        uint256 poolPortionAtTime = addressStake[_account].amount / erc20Supplies[_tokenAddress].degeneratorPoolSizeAtTime;\n        uint256 tokenReward = poolPortionAtTime * poolSupply;\n        return tokenReward;\n    }\n\n    function setMinimumStakeAmount(uint256 _amount) public multiSigOnly {\n        require(_amount > 0); \n        minimumStakeAmount = _amount;\n    }\n\n    function setRewardBlackoutPeriod(uint256 _length) public multiSigOnly {\n        require(_length > 0); \n        rewardBlackoutPeriod = _length;\n    }\n\n}\n\n"
			},
			"IFairLaunchFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\ninterface IFairLaunchFactoryV1 {\n    function factoryFee() external view returns (uint256);\n    function factoryBaseFee() external view returns (uint256);\n    function stakingContract() external view returns (address);\n    function multiSigAddress() external view returns (address);\n    function factoryToken() external view returns (address);\n    function launchpadsGenerated() external view returns (uint256);\n    function factoryOpen() external view returns (bool);\n    function isFactoryToken(address _address) external view returns (bool);\n    function stakingContractFactoryTokenAllocations(address _address) external view returns (uint256);\n    function addressIsLaunchpad(address _address) external view returns (bool);\n\n    event LaunchPadGenerated(address indexed LaunchpaddAddress, uint256 indexed launchpadNumber, uint256 hardcap, uint256 softcap, address founderAddres);\n    event multiSigWithdrawal(address withdrawSender, uint256 withdrawalAmount);\n    event FactoryTokenRegistered(address indexed tokenAddress);\n    event FactoryFeeSet(uint256 newFee);\n    event FactoryBaseFeeSet(uint256 newBaseFee);\n    event StakingContractSet(address indexed newStakingContract);\n    event FactoryClosed(bool factoryOpen);\n\n    function createFairLaunchpad( \n        string memory _name,\n        string memory _symbol,\n        uint256 _totalSupply,\n        bool _presaleLaunchpad, \n        uint256 _presaleHardcap,\n        uint256 _presaleSoftcap,\n        uint256 _presaleLengthBlocks,\n        uint256 _presaleMaxContribution,\n        uint256 _presaleMinContribution,\n        uint256 _founderSupplyAllocation\n    ) external payable;\n\n    function withdrawToMultiSig() external;\n\n    function registerFactoryToken(address _address, uint256 _stakingContractAllocation) external;\n\n    function setFactoryFee(uint256 _newFee) external;\n\n    function setFactoryBaseFee(uint256 _newFee) external;\n\n    function setStakingContract(address _newStakingContract) external;\n\n    function closeFactory(bool _factoryOpen) external;\n\n    function isAddressLaunchpad(address _address) external view returns(bool);\n\n    function isAddressFactoryToken(address _address) external view returns(bool);\n\n    function getTokenStakingContractAllocation(address _address) external view returns (uint256);\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IFairLaunchFactory.sol": {
				"IFairLaunchFactoryV1": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBaseFee",
									"type": "uint256"
								}
							],
							"name": "FactoryBaseFeeSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "factoryOpen",
									"type": "bool"
								}
							],
							"name": "FactoryClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newFee",
									"type": "uint256"
								}
							],
							"name": "FactoryFeeSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"name": "FactoryTokenRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "LaunchpaddAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "launchpadNumber",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "hardcap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "softcap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "founderAddres",
									"type": "address"
								}
							],
							"name": "LaunchPadGenerated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newStakingContract",
									"type": "address"
								}
							],
							"name": "StakingContractSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "withdrawSender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "withdrawalAmount",
									"type": "uint256"
								}
							],
							"name": "multiSigWithdrawal",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "addressIsLaunchpad",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_factoryOpen",
									"type": "bool"
								}
							],
							"name": "closeFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_totalSupply",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_presaleLaunchpad",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_presaleHardcap",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_presaleSoftcap",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_presaleLengthBlocks",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_presaleMaxContribution",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_presaleMinContribution",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_founderSupplyAllocation",
									"type": "uint256"
								}
							],
							"name": "createFairLaunchpad",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factoryBaseFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factoryFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factoryOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factoryToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getTokenStakingContractAllocation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isAddressFactoryToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isAddressLaunchpad",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isFactoryToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "launchpadsGenerated",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "multiSigAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_stakingContractAllocation",
									"type": "uint256"
								}
							],
							"name": "registerFactoryToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newFee",
									"type": "uint256"
								}
							],
							"name": "setFactoryBaseFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newFee",
									"type": "uint256"
								}
							],
							"name": "setFactoryFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newStakingContract",
									"type": "address"
								}
							],
							"name": "setStakingContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "stakingContractFactoryTokenAllocations",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawToMultiSig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addressIsLaunchpad(address)": "f06fafb6",
							"closeFactory(bool)": "82b3aa08",
							"createFairLaunchpad(string,string,uint256,bool,uint256,uint256,uint256,uint256,uint256,uint256)": "f1a74b55",
							"factoryBaseFee()": "18b7d5ed",
							"factoryFee()": "6286116a",
							"factoryOpen()": "d2c3bb3c",
							"factoryToken()": "97f6c25d",
							"getTokenStakingContractAllocation(address)": "22022de6",
							"isAddressFactoryToken(address)": "1d16aeae",
							"isAddressLaunchpad(address)": "53cbd07e",
							"isFactoryToken(address)": "a4b7914e",
							"launchpadsGenerated()": "e1ee981a",
							"multiSigAddress()": "1516def7",
							"registerFactoryToken(address,uint256)": "96b37277",
							"setFactoryBaseFee(uint256)": "3ee014a7",
							"setFactoryFee(uint256)": "03545f6a",
							"setStakingContract(address)": "9dd373b9",
							"stakingContract()": "ee99205c",
							"stakingContractFactoryTokenAllocations(address)": "d8eba892",
							"withdrawToMultiSig()": "25cd6921"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBaseFee\",\"type\":\"uint256\"}],\"name\":\"FactoryBaseFeeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"factoryOpen\",\"type\":\"bool\"}],\"name\":\"FactoryClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"FactoryFeeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"FactoryTokenRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"LaunchpaddAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"launchpadNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"hardcap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"softcap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"founderAddres\",\"type\":\"address\"}],\"name\":\"LaunchPadGenerated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newStakingContract\",\"type\":\"address\"}],\"name\":\"StakingContractSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawSender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"}],\"name\":\"multiSigWithdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addressIsLaunchpad\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_factoryOpen\",\"type\":\"bool\"}],\"name\":\"closeFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_presaleLaunchpad\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_presaleHardcap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_presaleSoftcap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_presaleLengthBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_presaleMaxContribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_presaleMinContribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_founderSupplyAllocation\",\"type\":\"uint256\"}],\"name\":\"createFairLaunchpad\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getTokenStakingContractAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAddressFactoryToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAddressLaunchpad\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isFactoryToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchpadsGenerated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multiSigAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stakingContractAllocation\",\"type\":\"uint256\"}],\"name\":\"registerFactoryToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"setFactoryBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"setFactoryFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newStakingContract\",\"type\":\"address\"}],\"name\":\"setStakingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"stakingContractFactoryTokenAllocations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawToMultiSig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IFairLaunchFactory.sol\":\"IFairLaunchFactoryV1\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IFairLaunchFactory.sol\":{\"keccak256\":\"0xaa6526fcf7fbe840528469d9c59a4b48db3338f88c0a23310bcd993ef911970c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db0e44973647b74fc0d55f183673dca975407230d7029e7ddb26d1b20111877d\",\"dweb:/ipfs/Qmd44sHN2LibRGUzAmtL4WrnE2bFhpyEge6BJ4SqBptthH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"StakingContract.sol": {
				"DegeneratorStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factoryAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_multiSigAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_minimumStakeAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_rewardBlackoutPeriod",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockStaked",
									"type": "uint256"
								}
							],
							"name": "degeneratorStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "degeneratorWithdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "addressWithdrewERC20Reward",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "degeneratorStakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "degeneratorStakingPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "erc20Supplies",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "poolSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "blockSupplied",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "remainingPoolSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "degeneratorPoolSizeAtTime",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "registered",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "contract IFairLaunchFactoryV1",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factoryAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "getTokenEligibility",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "getTokenReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minimumStakeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "multiSigAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_poolSupply",
									"type": "uint256"
								}
							],
							"name": "registerERC20Supply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardBlackoutPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "setMinimumStakeAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_length",
									"type": "uint256"
								}
							],
							"name": "setRewardBlackoutPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stakeDegnerator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawDegenerator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_tokenAddresses",
									"type": "address[]"
								}
							],
							"name": "withdrawRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"StakingContract.sol\":424:5897  contract DegeneratorStaking is Context, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"StakingContract.sol\":1922:2372  constructor(address _factoryAddress, address _multiSigAddress , address _tokenAddress, uint256 _minimumStakeAmount, uint256 _rewardBlackoutPeriod) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  dup2\n  sstore\n    /* \"StakingContract.sol\":2079:2111  factoryAddress = _factoryAddress */\n  dup2\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap8\n  dup9\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap3\n  sstore\n    /* \"StakingContract.sol\":2121:2136  multiSigAddress */\n  0x02\n    /* \"StakingContract.sol\":2121:2155  multiSigAddress = _multiSigAddress */\n  dup1\n  sload\n  swap7\n  dup9\n  and\n  swap7\n  dup4\n  and\n  swap7\n  swap1\n  swap7\n  or\n  swap1\n  swap6\n  sstore\n    /* \"StakingContract.sol\":2165:2177  tokenAddress */\n  0x03\n    /* \"StakingContract.sol\":2165:2193  tokenAddress = _tokenAddress */\n  dup1\n  sload\n  swap5\n  swap1\n  swap7\n  and\n  swap4\n  and\n  swap3\n  swap1\n  swap3\n  or\n  swap1\n  swap4\n  sstore\n    /* \"StakingContract.sol\":2203:2223  rewardBlackoutPeriod */\n  0x05\n    /* \"StakingContract.sol\":2203:2247  rewardBlackoutPeriod = _rewardBlackoutPeriod */\n  sstore\n    /* \"StakingContract.sol\":2257:2275  minimumStakeAmount */\n  0x04\n    /* \"StakingContract.sol\":2257:2297  minimumStakeAmount = _minimumStakeAmount */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"StakingContract.sol\":2307:2329  degeneratorStakingPool */\n  0x07\n    /* \"StakingContract.sol\":2307:2333  degeneratorStakingPool = 0 */\n  dup2\n  swap1\n  sstore\n    /* \"StakingContract.sol\":2343:2361  degeneratorStakers */\n  0x08\n    /* \"StakingContract.sol\":2343:2365  degeneratorStakers = 0 */\n  sstore\n    /* \"StakingContract.sol\":424:5897  contract DegeneratorStaking is Context, ReentrancyGuard {... */\n  jump(tag_10)\n    /* \"#utility.yul\":14:191   */\ntag_9:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_12\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_12:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:698   */\ntag_3:\n    /* \"#utility.yul\":302:308   */\n  0x00\n    /* \"#utility.yul\":310:316   */\n  dup1\n    /* \"#utility.yul\":318:324   */\n  0x00\n    /* \"#utility.yul\":326:332   */\n  dup1\n    /* \"#utility.yul\":334:340   */\n  0x00\n    /* \"#utility.yul\":387:390   */\n  0xa0\n    /* \"#utility.yul\":375:384   */\n  dup7\n    /* \"#utility.yul\":366:373   */\n  dup9\n    /* \"#utility.yul\":362:385   */\n  sub\n    /* \"#utility.yul\":358:391   */\n  slt\n    /* \"#utility.yul\":355:408   */\n  iszero\n  tag_14\n  jumpi\n    /* \"#utility.yul\":404:405   */\n  0x00\n    /* \"#utility.yul\":401:402   */\n  dup1\n    /* \"#utility.yul\":394:406   */\n  revert\n    /* \"#utility.yul\":355:408   */\ntag_14:\n    /* \"#utility.yul\":427:467   */\n  tag_15\n    /* \"#utility.yul\":457:466   */\n  dup7\n    /* \"#utility.yul\":427:467   */\n  tag_9\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":417:467   */\n  swap5\n  pop\n    /* \"#utility.yul\":486:535   */\n  tag_16\n    /* \"#utility.yul\":531:533   */\n  0x20\n    /* \"#utility.yul\":520:529   */\n  dup8\n    /* \"#utility.yul\":516:534   */\n  add\n    /* \"#utility.yul\":486:535   */\n  tag_9\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":476:535   */\n  swap4\n  pop\n    /* \"#utility.yul\":554:603   */\n  tag_17\n    /* \"#utility.yul\":599:601   */\n  0x40\n    /* \"#utility.yul\":588:597   */\n  dup8\n    /* \"#utility.yul\":584:602   */\n  add\n    /* \"#utility.yul\":554:603   */\n  tag_9\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":643:645   */\n  0x60\n    /* \"#utility.yul\":628:646   */\n  dup8\n  add\n    /* \"#utility.yul\":622:647   */\n  mload\n    /* \"#utility.yul\":687:690   */\n  0x80\n    /* \"#utility.yul\":672:691   */\n  swap1\n  swap8\n  add\n    /* \"#utility.yul\":666:692   */\n  mload\n    /* \"#utility.yul\":196:698   */\n  swap6\n  swap9\n  swap5\n  swap8\n  pop\n    /* \"#utility.yul\":544:603   */\n  swap6\n    /* \"#utility.yul\":622:647   */\n  swap5\n    /* \"#utility.yul\":666:692   */\n  swap4\n    /* \"#utility.yul\":196:698   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_10:\n    /* \"StakingContract.sol\":424:5897  contract DegeneratorStaking is Context, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"StakingContract.sol\":424:5897  contract DegeneratorStaking is Context, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9b29d215\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa164959d\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa164959d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xacde6597\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xad5a402b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xcaf10b57\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x9b29d215\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9d76ea58\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9f8932f4\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa163beea\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x62d76d06\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x62d76d06\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x6b036f45\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8167ee72\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95adb5ad\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x966dae0e\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x0d29fcd4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1516def7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x41fee557\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x609c878a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"StakingContract.sol\":5596:5740  function setMinimumStakeAmount(uint256 _amount) public multiSigOnly {... */\n    tag_3:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"StakingContract.sol\":521:551  address public multiSigAddress */\n    tag_4:\n      sload(0x02)\n      tag_28\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":363:395   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":345:396   */\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"StakingContract.sol\":521:551  address public multiSigAddress */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingContract.sol\":2378:2994  function stakeDegnerator(uint256 _amount) public nonReentrant {... */\n    tag_5:\n      tag_24\n      tag_33\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n        /* \"StakingContract.sol\":1674:1752  mapping(address => mapping(address => bool)) public addressWithdrewERC20Reward */\n    tag_6:\n      tag_35\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      0x0b\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":1015:1029   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1008:1030   */\n      iszero\n        /* \"#utility.yul\":990:1031   */\n      dup2\n      mstore\n        /* \"#utility.yul\":978:980   */\n      0x20\n        /* \"#utility.yul\":963:981   */\n      add\n        /* \"StakingContract.sol\":1674:1752  mapping(address => mapping(address => bool)) public addressWithdrewERC20Reward */\n      tag_30\n        /* \"#utility.yul\":850:1037   */\n      jump\n        /* \"StakingContract.sol\":4284:4847  function withdrawRewards(address[] calldata _tokenAddresses) public onlyStaker nonReentrant {... */\n    tag_7:\n      tag_24\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n        /* \"StakingContract.sol\":590:623  uint256 public minimumStakeAmount */\n    tag_8:\n      tag_45\n      sload(0x04)\n      dup2\n      jump\n    tag_45:\n      mload(0x40)\n        /* \"#utility.yul\":1808:1833   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1796:1798   */\n      0x20\n        /* \"#utility.yul\":1781:1799   */\n      add\n        /* \"StakingContract.sol\":590:623  uint256 public minimumStakeAmount */\n      tag_30\n        /* \"#utility.yul\":1662:1839   */\n      jump\n        /* \"StakingContract.sol\":3741:4273  function registerERC20Supply(address _tokenAddress, uint256 _poolSupply) public nonReentrant {... */\n    tag_9:\n      tag_24\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"StakingContract.sol\":3000:3735  function withdrawDegenerator() public nonReentrant {... */\n    tag_10:\n      tag_24\n      tag_54\n      jump\t// in\n        /* \"StakingContract.sol\":486:515  address public factoryAddress */\n    tag_11:\n      sload(0x01)\n      tag_28\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"StakingContract.sol\":5746:5894  function setRewardBlackoutPeriod(uint256 _length) public multiSigOnly {... */\n    tag_12:\n      tag_24\n      tag_59\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"StakingContract.sol\":557:584  address public tokenAddress */\n    tag_13:\n      sload(0x03)\n      tag_28\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"StakingContract.sol\":629:664  uint256 public rewardBlackoutPeriod */\n    tag_14:\n      tag_45\n      sload(0x05)\n      dup2\n      jump\n        /* \"StakingContract.sol\":755:788  uint256 public degeneratorStakers */\n    tag_15:\n      tag_45\n      sload(0x08)\n      dup2\n      jump\n        /* \"StakingContract.sol\":5142:5590  function getTokenReward(address _tokenAddress, address _account) public view returns(uint256) {... */\n    tag_16:\n      tag_45\n      tag_71\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n        /* \"StakingContract.sol\":4853:5136  function getTokenEligibility(address _tokenAddress, address _account) public view returns(bool) {... */\n    tag_17:\n      tag_35\n      tag_75\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"StakingContract.sol\":712:749  uint256 public degeneratorStakingPool */\n    tag_18:\n      tag_45\n      sload(0x07)\n      dup2\n      jump\n        /* \"StakingContract.sol\":670:705  IFairLaunchFactoryV1 public factory */\n    tag_19:\n      sload(0x06)\n      tag_28\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"StakingContract.sol\":1616:1668  mapping(address => ERC20Supply) public erc20Supplies */\n    tag_20:\n      tag_85\n      tag_86\n      calldatasize\n      0x04\n      tag_87\n      jump\t// in\n    tag_86:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      swap1\n      swap5\n      add\n      sload\n      swap3\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      0xff\n      and\n      dup6\n      jump\n    tag_85:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2783:2808   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":2839:2841   */\n      0x20\n        /* \"#utility.yul\":2824:2842   */\n      dup7\n      add\n        /* \"#utility.yul\":2817:2851   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":2867:2885   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":2860:2894   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2925:2927   */\n      0x60\n        /* \"#utility.yul\":2910:2928   */\n      dup4\n      add\n        /* \"#utility.yul\":2903:2937   */\n      mstore\n        /* \"#utility.yul\":2981:2995   */\n      iszero\n        /* \"#utility.yul\":2974:2996   */\n      iszero\n        /* \"#utility.yul\":2968:2971   */\n      0x80\n        /* \"#utility.yul\":2953:2972   */\n      dup3\n      add\n        /* \"#utility.yul\":2946:2997   */\n      mstore\n        /* \"#utility.yul\":2770:2773   */\n      0xa0\n        /* \"#utility.yul\":2755:2774   */\n      add\n        /* \"StakingContract.sol\":1616:1668  mapping(address => ERC20Supply) public erc20Supplies */\n      tag_30\n        /* \"#utility.yul\":2530:3003   */\n      jump\n        /* \"StakingContract.sol\":5596:5740  function setMinimumStakeAmount(uint256 _amount) public multiSigOnly {... */\n    tag_27:\n        /* \"StakingContract.sol\":1110:1125  multiSigAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"StakingContract.sol\":1096:1106  msg.sender */\n      caller\n        /* \"StakingContract.sol\":1096:1125  msg.sender == multiSigAddress */\n      eq\n        /* \"StakingContract.sol\":1088:1174  require(msg.sender == multiSigAddress, \"Only multiSig address can call this function\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"StakingContract.sol\":5692:5693  0 */\n      0x00\n        /* \"StakingContract.sol\":5682:5689  _amount */\n      dup2\n        /* \"StakingContract.sol\":5682:5693  _amount > 0 */\n      gt\n        /* \"StakingContract.sol\":5674:5694  require(_amount > 0) */\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n        /* \"StakingContract.sol\":5705:5723  minimumStakeAmount */\n      0x04\n        /* \"StakingContract.sol\":5705:5733  minimumStakeAmount = _amount */\n      sstore\n        /* \"StakingContract.sol\":5596:5740  function setMinimumStakeAmount(uint256 _amount) public multiSigOnly {... */\n      jump\t// out\n        /* \"StakingContract.sol\":2378:2994  function stakeDegnerator(uint256 _amount) public nonReentrant {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_98\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_99\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_98:\n        /* \"StakingContract.sol\":2472:2484  tokenAddress */\n      sload(0x03)\n        /* \"StakingContract.sol\":2513:2531  minimumStakeAmount */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StakingContract.sol\":2472:2484  tokenAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"StakingContract.sol\":2503:2531  _amount > minimumStakeAmount */\n      dup3\n      gt\n        /* \"StakingContract.sol\":2495:2568  require(_amount > minimumStakeAmount, \"Amount must be greater than zero\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3623:3625   */\n      0x20\n        /* \"StakingContract.sol\":2495:2568  require(_amount > minimumStakeAmount, \"Amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3605:3626   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3642:3660   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3635:3665   */\n      mstore\n        /* \"#utility.yul\":3701:3735   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":3681:3699   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3674:3736   */\n      mstore\n        /* \"#utility.yul\":3753:3771   */\n      0x64\n      add\n        /* \"StakingContract.sol\":2495:2568  require(_amount > minimumStakeAmount, \"Amount must be greater than zero\") */\n      tag_93\n        /* \"#utility.yul\":3421:3777   */\n      jump\n        /* \"StakingContract.sol\":2495:2568  require(_amount > minimumStakeAmount, \"Amount must be greater than zero\") */\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StakingContract.sol\":2586:2604  token.transferFrom */\n      dup2\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"StakingContract.sol\":2586:2642  token.transferFrom(_msgSender(), address(this), _amount) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4040:4055   */\n      swap1\n      swap2\n      and\n        /* \"StakingContract.sol\":2586:2642  token.transferFrom(_msgSender(), address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4022:4056   */\n      mstore\n        /* \"StakingContract.sol\":2627:2631  this */\n      address\n        /* \"#utility.yul\":4072:4090   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4065:4108   */\n      mstore\n        /* \"#utility.yul\":4124:4142   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4117:4151   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":3957:3975   */\n      0x64\n      add\n        /* \"StakingContract.sol\":2586:2642  token.transferFrom(_msgSender(), address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"StakingContract.sol\":2578:2662  require(token.transferFrom(_msgSender(), address(this), _amount), \"Transfer failed\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4646:4648   */\n      0x20\n        /* \"StakingContract.sol\":2578:2662  require(token.transferFrom(_msgSender(), address(this), _amount), \"Transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4628:4649   */\n      mstore\n        /* \"#utility.yul\":4685:4687   */\n      0x0f\n        /* \"#utility.yul\":4665:4683   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4658:4688   */\n      mstore\n      shl(0x8a, 0x151c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":4704:4722   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4697:4742   */\n      mstore\n        /* \"#utility.yul\":4759:4777   */\n      0x64\n      add\n        /* \"StakingContract.sol\":2578:2662  require(token.transferFrom(_msgSender(), address(this), _amount), \"Transfer failed\") */\n      tag_93\n        /* \"#utility.yul\":4444:4783   */\n      jump\n        /* \"StakingContract.sol\":2578:2662  require(token.transferFrom(_msgSender(), address(this), _amount), \"Transfer failed\") */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"StakingContract.sol\":2681:2707  addressStake[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StakingContract.sol\":2681:2693  addressStake */\n      0x09\n        /* \"StakingContract.sol\":2681:2707  addressStake[_msgSender()] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"StakingContract.sol\":2681:2721  addressStake[_msgSender()].activeDeposit */\n      0x02\n      add\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"StakingContract.sol\":2680:2721  !addressStake[_msgSender()].activeDeposit */\n      iszero\n        /* \"StakingContract.sol\":2672:2722  require(!addressStake[_msgSender()].activeDeposit) */\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"StakingContract.sol\":2733:2759  addressStake[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StakingContract.sol\":2733:2745  addressStake */\n      0x09\n        /* \"StakingContract.sol\":2733:2759  addressStake[_msgSender()] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"StakingContract.sol\":2733:2777  addressStake[_msgSender()].amount += _amount */\n      dup1\n      sload\n        /* \"StakingContract.sol\":2770:2777  _amount */\n      dup5\n      swap3\n        /* \"StakingContract.sol\":2733:2759  addressStake[_msgSender()] */\n      swap1\n        /* \"StakingContract.sol\":2733:2777  addressStake[_msgSender()].amount += _amount */\n      tag_118\n      swap1\n        /* \"StakingContract.sol\":2770:2777  _amount */\n      dup5\n      swap1\n        /* \"StakingContract.sol\":2733:2777  addressStake[_msgSender()].amount += _amount */\n      tag_119\n      jump\t// in\n    tag_118:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"StakingContract.sol\":2787:2813  addressStake[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StakingContract.sol\":2787:2799  addressStake */\n      0x09\n        /* \"StakingContract.sol\":2787:2813  addressStake[_msgSender()] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"StakingContract.sol\":2828:2840  block.number */\n      number\n        /* \"StakingContract.sol\":2787:2825  addressStake[_msgSender()].blockStaked */\n      0x01\n      swap1\n      swap2\n      add\n        /* \"StakingContract.sol\":2787:2840  addressStake[_msgSender()].blockStaked = block.number */\n      sstore\n        /* \"StakingContract.sol\":2850:2872  degeneratorStakingPool */\n      0x07\n        /* \"StakingContract.sol\":2850:2883  degeneratorStakingPool += _amount */\n      dup1\n      sload\n        /* \"StakingContract.sol\":2876:2883  _amount */\n      dup5\n      swap3\n        /* \"StakingContract.sol\":2787:2813  addressStake[_msgSender()] */\n      swap1\n        /* \"StakingContract.sol\":2850:2883  degeneratorStakingPool += _amount */\n      tag_121\n      swap1\n        /* \"StakingContract.sol\":2876:2883  _amount */\n      dup5\n      swap1\n        /* \"StakingContract.sol\":2850:2883  degeneratorStakingPool += _amount */\n      tag_119\n      jump\t// in\n    tag_121:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingContract.sol\":2915:2916  1 */\n      0x01\n        /* \"StakingContract.sol\":2893:2911  degeneratorStakers */\n      0x08\n      0x00\n        /* \"StakingContract.sol\":2893:2916  degeneratorStakers += 1 */\n      dup3\n      dup3\n      sload\n      tag_122\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_122:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"StakingContract.sol\":2932:2986  degeneratorStaked(_msgSender(), _amount, block.number) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5224:5249   */\n      dup4\n      dup2\n      mstore\n        /* \"StakingContract.sol\":2973:2985  block.number */\n      number\n        /* \"#utility.yul\":5280:5282   */\n      0x20\n        /* \"#utility.yul\":5265:5283   */\n      dup3\n      add\n        /* \"#utility.yul\":5258:5292   */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap2\n        /* \"StakingContract.sol\":2932:2986  degeneratorStaked(_msgSender(), _amount, block.number) */\n      0x0ae860169ef88b6e5a084a54675af932ac7be23de4abd34a1d99a5a8402a17cc\n      swap2\n        /* \"#utility.yul\":5197:5215   */\n      add\n        /* \"StakingContract.sol\":2932:2986  degeneratorStaked(_msgSender(), _amount, block.number) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"StakingContract.sol\":2440:2994  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_126\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_126:\n        /* \"StakingContract.sol\":2378:2994  function stakeDegnerator(uint256 _amount) public nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"StakingContract.sol\":4284:4847  function withdrawRewards(address[] calldata _tokenAddresses) public onlyStaker nonReentrant {... */\n    tag_44:\n        /* \"StakingContract.sol\":852:862  msg.sender */\n      caller\n        /* \"StakingContract.sol\":839:863  addressStake[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StakingContract.sol\":839:851  addressStake */\n      0x09\n        /* \"StakingContract.sol\":839:863  addressStake[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"StakingContract.sol\":839:877  addressStake[msg.sender].activeDeposit */\n      0x02\n      add\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"StakingContract.sol\":831:878  require(addressStake[msg.sender].activeDeposit) */\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_131\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_99\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_131:\n        /* \"StakingContract.sol\":4391:4400  uint256 i */\n      0x00\n        /* \"StakingContract.sol\":4386:4841  for (uint256 i = 0; i < _tokenAddresses.length; i++) {... */\n    tag_133:\n        /* \"StakingContract.sol\":4406:4432  i < _tokenAddresses.length */\n      dup2\n      dup2\n      lt\n        /* \"StakingContract.sol\":4386:4841  for (uint256 i = 0; i < _tokenAddresses.length; i++) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"StakingContract.sol\":4461:4512  getTokenEligibility(_tokenAddresses[i], msg.sender) */\n      tag_136\n        /* \"StakingContract.sol\":4481:4496  _tokenAddresses */\n      dup4\n      dup4\n        /* \"StakingContract.sol\":4497:4498  i */\n      dup4\n        /* \"StakingContract.sol\":4481:4499  _tokenAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_138\n      jumpi\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_140:\n        /* \"StakingContract.sol\":4501:4511  msg.sender */\n      caller\n        /* \"StakingContract.sol\":4461:4480  getTokenEligibility */\n      tag_76\n        /* \"StakingContract.sol\":4461:4512  getTokenEligibility(_tokenAddresses[i], msg.sender) */\n      jump\t// in\n    tag_136:\n        /* \"StakingContract.sol\":4453:4513  require(getTokenEligibility(_tokenAddresses[i], msg.sender)) */\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n        /* \"StakingContract.sol\":4536:4562  addressWithdrewERC20Reward */\n      0x0b\n        /* \"StakingContract.sol\":4536:4582  addressWithdrewERC20Reward[_tokenAddresses[i]] */\n      0x00\n        /* \"StakingContract.sol\":4563:4578  _tokenAddresses */\n      dup5\n      dup5\n        /* \"StakingContract.sol\":4579:4580  i */\n      dup5\n        /* \"StakingContract.sol\":4563:4581  _tokenAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_143\n      jumpi\n      tag_143\n      tag_139\n      jump\t// in\n    tag_143:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StakingContract.sol\":4536:4582  addressWithdrewERC20Reward[_tokenAddresses[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"StakingContract.sol\":4583:4593  msg.sender */\n      caller\n        /* \"StakingContract.sol\":4536:4594  addressWithdrewERC20Reward[_tokenAddresses[i]][msg.sender] */\n      dup3\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"StakingContract.sol\":4535:4594  !addressWithdrewERC20Reward[_tokenAddresses[i]][msg.sender] */\n      iszero\n        /* \"StakingContract.sol\":4527:4595  require(!addressWithdrewERC20Reward[_tokenAddresses[i]][msg.sender]) */\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n        /* \"StakingContract.sol\":4609:4628  uint256 tokenReward */\n      0x00\n        /* \"StakingContract.sol\":4631:4677  getTokenReward(_tokenAddresses[i], msg.sender) */\n      tag_146\n        /* \"StakingContract.sol\":4646:4661  _tokenAddresses */\n      dup5\n      dup5\n        /* \"StakingContract.sol\":4662:4663  i */\n      dup5\n        /* \"StakingContract.sol\":4646:4664  _tokenAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_148\n      jumpi\n      tag_148\n      tag_139\n      jump\t// in\n    tag_148:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_149:\n        /* \"StakingContract.sol\":4666:4676  msg.sender */\n      caller\n        /* \"StakingContract.sol\":4631:4645  getTokenReward */\n      tag_72\n        /* \"StakingContract.sol\":4631:4677  getTokenReward(_tokenAddresses[i], msg.sender) */\n      jump\t// in\n    tag_146:\n        /* \"StakingContract.sol\":4609:4677  uint256 tokenReward = getTokenReward(_tokenAddresses[i], msg.sender) */\n      swap1\n      pop\n        /* \"StakingContract.sol\":4752:4756  true */\n      0x01\n        /* \"StakingContract.sol\":4691:4717  addressWithdrewERC20Reward */\n      0x0b\n        /* \"StakingContract.sol\":4691:4737  addressWithdrewERC20Reward[_tokenAddresses[i]] */\n      0x00\n        /* \"StakingContract.sol\":4718:4733  _tokenAddresses */\n      dup7\n      dup7\n        /* \"StakingContract.sol\":4734:4735  i */\n      dup7\n        /* \"StakingContract.sol\":4718:4736  _tokenAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_151\n      jumpi\n      tag_151\n      tag_139\n      jump\t// in\n    tag_151:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StakingContract.sol\":4691:4737  addressWithdrewERC20Reward[_tokenAddresses[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"StakingContract.sol\":4738:4748  msg.sender */\n      caller\n        /* \"StakingContract.sol\":4691:4749  addressWithdrewERC20Reward[_tokenAddresses[i]][msg.sender] */\n      dup3\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      keccak256\n        /* \"StakingContract.sol\":4691:4756  addressWithdrewERC20Reward[_tokenAddresses[i]][msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"StakingContract.sol\":4777:4792  _tokenAddresses */\n      dup4\n      dup4\n        /* \"StakingContract.sol\":4793:4794  i */\n      dup4\n        /* \"StakingContract.sol\":4777:4795  _tokenAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_154\n      jumpi\n      tag_154\n      tag_139\n      jump\t// in\n    tag_154:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_155:\n        /* \"StakingContract.sol\":4770:4830  IERC20(_tokenAddresses[i]).transfer(msg.sender, tokenReward) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"StakingContract.sol\":4806:4816  msg.sender */\n      caller\n        /* \"StakingContract.sol\":4770:4830  IERC20(_tokenAddresses[i]).transfer(msg.sender, tokenReward) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5609:5660   */\n      mstore\n        /* \"#utility.yul\":5676:5694   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5669:5703   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StakingContract.sol\":4770:4805  IERC20(_tokenAddresses[i]).transfer */\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":5582:5600   */\n      0x44\n      add\n        /* \"StakingContract.sol\":4770:4830  IERC20(_tokenAddresses[i]).transfer(msg.sender, tokenReward) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_160\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_160:\n      pop\n      pop\n        /* \"StakingContract.sol\":4434:4437  i++ */\n      0x01\n      add\n        /* \"StakingContract.sol\":4386:4841  for (uint256 i = 0; i < _tokenAddresses.length; i++) {... */\n      jump(tag_133)\n    tag_134:\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_161\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_161:\n        /* \"StakingContract.sol\":4284:4847  function withdrawRewards(address[] calldata _tokenAddresses) public onlyStaker nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"StakingContract.sol\":3741:4273  function registerERC20Supply(address _tokenAddress, uint256 _poolSupply) public nonReentrant {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_163\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_99\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_163:\n        /* \"StakingContract.sol\":3852:3898  IERC20(_tokenAddress).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"StakingContract.sol\":3892:3896  this */\n      address\n        /* \"StakingContract.sol\":3852:3898  IERC20(_tokenAddress).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":345:396   */\n      mstore\n        /* \"StakingContract.sol\":3902:3913  _poolSupply */\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StakingContract.sol\":3852:3883  IERC20(_tokenAddress).balanceOf */\n      dup5\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":318:336   */\n      0x24\n      add\n        /* \"StakingContract.sol\":3852:3898  IERC20(_tokenAddress).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"StakingContract.sol\":3852:3913  IERC20(_tokenAddress).balanceOf(address(this)) == _poolSupply */\n      eq\n        /* \"StakingContract.sol\":3844:3914  require(IERC20(_tokenAddress).balanceOf(address(this)) == _poolSupply) */\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StakingContract.sol\":3933:3961  erc20Supplies[_tokenAddress] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StakingContract.sol\":3933:3946  erc20Supplies */\n      0x0a\n        /* \"StakingContract.sol\":3933:3961  erc20Supplies[_tokenAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"StakingContract.sol\":3933:3972  erc20Supplies[_tokenAddress].registered */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"StakingContract.sol\":3932:3972  !erc20Supplies[_tokenAddress].registered */\n      iszero\n        /* \"StakingContract.sol\":3924:3973  require(!erc20Supplies[_tokenAddress].registered) */\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StakingContract.sol\":3983:4011  erc20Supplies[_tokenAddress] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StakingContract.sol\":3983:3996  erc20Supplies */\n      0x0a\n        /* \"StakingContract.sol\":3983:4011  erc20Supplies[_tokenAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"StakingContract.sol\":4028:4040  block.number */\n      number\n        /* \"StakingContract.sol\":3983:4025  erc20Supplies[_tokenAddress].blockSupplied */\n      0x01\n      dup3\n      add\n        /* \"StakingContract.sol\":3983:4040  erc20Supplies[_tokenAddress].blockSupplied = block.number */\n      sstore\n        /* \"StakingContract.sol\":4050:4103  erc20Supplies[_tokenAddress].poolSupply = _poolSupply */\n      dup2\n      dup2\n      sstore\n        /* \"StakingContract.sol\":4114:4162  erc20Supplies[_tokenAddress].remainingPoolSupply */\n      0x02\n      dup2\n      add\n        /* \"StakingContract.sol\":4114:4176  erc20Supplies[_tokenAddress].remainingPoolSupply = _poolSupply */\n      dup3\n      swap1\n      sstore\n        /* \"StakingContract.sol\":4244:4266  degeneratorStakingPool */\n      sload(0x07)\n        /* \"StakingContract.sol\":4187:4241  erc20Supplies[_tokenAddress].degeneratorPoolSizeAtTime */\n      0x03\n      swap1\n      swap2\n      add\n        /* \"StakingContract.sol\":4187:4266  erc20Supplies[_tokenAddress].degeneratorPoolSizeAtTime = degeneratorStakingPool */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_161\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"StakingContract.sol\":3000:3735  function withdrawDegenerator() public nonReentrant {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_174\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_99\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"StakingContract.sol\":3105:3106  0 */\n      0x00\n        /* \"StakingContract.sol\":3069:3095  addressStake[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"StakingContract.sol\":3069:3081  addressStake */\n      0x09\n        /* \"StakingContract.sol\":3069:3095  addressStake[_msgSender()] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"StakingContract.sol\":3069:3102  addressStake[_msgSender()].amount */\n      sload\n        /* \"StakingContract.sol\":3061:3125  require(addressStake[_msgSender()].amount > 0, \"No stake found\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"StakingContract.sol\":3061:3125  require(addressStake[_msgSender()].amount > 0, \"No stake found\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6087:6108   */\n      mstore\n        /* \"#utility.yul\":6144:6146   */\n      0x0e\n        /* \"#utility.yul\":6124:6142   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6117:6147   */\n      mstore\n      shl(0x92, 0x139bc81cdd185ad948199bdd5b99)\n        /* \"#utility.yul\":6163:6181   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6156:6200   */\n      mstore\n        /* \"#utility.yul\":6217:6235   */\n      0x64\n      add\n        /* \"StakingContract.sol\":3061:3125  require(addressStake[_msgSender()].amount > 0, \"No stake found\") */\n      tag_93\n        /* \"#utility.yul\":5903:6241   */\n      jump\n        /* \"StakingContract.sol\":3061:3125  require(addressStake[_msgSender()].amount > 0, \"No stake found\") */\n    tag_177:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"StakingContract.sol\":3144:3170  addressStake[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StakingContract.sol\":3144:3156  addressStake */\n      0x09\n        /* \"StakingContract.sol\":3144:3170  addressStake[_msgSender()] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"StakingContract.sol\":3144:3180  addressStake[_msgSender()].withdrawn */\n      0x02\n      add\n      sload\n      0xff\n      and\n        /* \"StakingContract.sol\":3143:3180  !addressStake[_msgSender()].withdrawn */\n      iszero\n        /* \"StakingContract.sol\":3135:3208  require(!addressStake[_msgSender()].withdrawn, \"Stake already withdrawn\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6448:6450   */\n      0x20\n        /* \"StakingContract.sol\":3135:3208  require(!addressStake[_msgSender()].withdrawn, \"Stake already withdrawn\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6430:6451   */\n      mstore\n        /* \"#utility.yul\":6487:6489   */\n      0x17\n        /* \"#utility.yul\":6467:6485   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6460:6490   */\n      mstore\n        /* \"#utility.yul\":6526:6551   */\n      0x5374616b6520616c72656164792077697468647261776e000000000000000000\n        /* \"#utility.yul\":6506:6524   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6499:6552   */\n      mstore\n        /* \"#utility.yul\":6569:6587   */\n      0x64\n      add\n        /* \"StakingContract.sol\":3135:3208  require(!addressStake[_msgSender()].withdrawn, \"Stake already withdrawn\") */\n      tag_93\n        /* \"#utility.yul\":6246:6593   */\n      jump\n        /* \"StakingContract.sol\":3135:3208  require(!addressStake[_msgSender()].withdrawn, \"Stake already withdrawn\") */\n    tag_181:\n        /* \"StakingContract.sol\":3240:3252  tokenAddress */\n      sload(0x03)\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"StakingContract.sol\":3218:3230  IERC20 token */\n      0x00\n        /* \"StakingContract.sol\":3280:3306  addressStake[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"StakingContract.sol\":3280:3292  addressStake */\n      0x09\n        /* \"StakingContract.sol\":3280:3306  addressStake[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"StakingContract.sol\":3280:3313  addressStake[_msgSender()].amount */\n      dup1\n      sload\n        /* \"StakingContract.sol\":3323:3359  addressStake[_msgSender()].withdrawn */\n      0x02\n      swap1\n      swap2\n      add\n        /* \"StakingContract.sol\":3323:3366  addressStake[_msgSender()].withdrawn = true */\n      dup1\n      sload\n      not(0xffff)\n        /* \"StakingContract.sol\":3376:3424  addressStake[_msgSender()].activeDeposit = false */\n      and\n        /* \"StakingContract.sol\":3362:3366  true */\n      0x01\n        /* \"StakingContract.sol\":3376:3424  addressStake[_msgSender()].activeDeposit = false */\n      or\n      swap1\n      sstore\n        /* \"StakingContract.sol\":3443:3479  token.transfer(_msgSender(), amount) */\n      dup2\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":5609:5660   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":5676:5694   */\n      0x24\n      dup6\n      add\n        /* \"#utility.yul\":5669:5703   */\n      dup2\n      swap1\n      mstore\n        /* \"StakingContract.sol\":3443:3479  token.transfer(_msgSender(), amount) */\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StakingContract.sol\":3240:3252  tokenAddress */\n      swap1\n      swap6\n      and\n      swap5\n        /* \"StakingContract.sol\":3280:3313  addressStake[_msgSender()].amount */\n      swap1\n      swap4\n        /* \"StakingContract.sol\":3240:3252  tokenAddress */\n      dup6\n      swap4\n        /* \"StakingContract.sol\":3443:3457  token.transfer */\n      0xa9059cbb\n      swap4\n        /* \"#utility.yul\":5582:5600   */\n      0x44\n      dup1\n      dup5\n      add\n      swap5\n        /* \"StakingContract.sol\":3280:3306  addressStake[_msgSender()] */\n      swap2\n      swap4\n        /* \"StakingContract.sol\":3443:3479  token.transfer(_msgSender(), amount) */\n      swap2\n      swap3\n      swap2\n      dup4\n      swap1\n      sub\n      add\n      swap1\n      dup3\n      swap1\n        /* \"StakingContract.sol\":3240:3252  tokenAddress */\n      dup8\n        /* \"StakingContract.sol\":3443:3479  token.transfer(_msgSender(), amount) */\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_190\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_191\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_191:\n        /* \"StakingContract.sol\":3435:3499  require(token.transfer(_msgSender(), amount), \"Transfer failed\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4646:4648   */\n      0x20\n        /* \"StakingContract.sol\":3435:3499  require(token.transfer(_msgSender(), amount), \"Transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4628:4649   */\n      mstore\n        /* \"#utility.yul\":4685:4687   */\n      0x0f\n        /* \"#utility.yul\":4665:4683   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4658:4688   */\n      mstore\n      shl(0x8a, 0x151c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":4704:4722   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4697:4742   */\n      mstore\n        /* \"#utility.yul\":4759:4777   */\n      0x64\n      add\n        /* \"StakingContract.sol\":3435:3499  require(token.transfer(_msgSender(), amount), \"Transfer failed\") */\n      tag_93\n        /* \"#utility.yul\":4444:4783   */\n      jump\n        /* \"StakingContract.sol\":3435:3499  require(token.transfer(_msgSender(), amount), \"Transfer failed\") */\n    tag_192:\n        /* \"StakingContract.sol\":3535:3541  amount */\n      dup1\n        /* \"StakingContract.sol\":3509:3531  degeneratorStakingPool */\n      0x07\n      0x00\n        /* \"StakingContract.sol\":3509:3541  degeneratorStakingPool -= amount */\n      dup3\n      dup3\n      sload\n      tag_194\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingContract.sol\":3573:3574  1 */\n      0x01\n        /* \"StakingContract.sol\":3551:3569  degeneratorStakers */\n      0x08\n      0x00\n        /* \"StakingContract.sol\":3551:3574  degeneratorStakers -= 1 */\n      dup3\n      dup3\n      sload\n      tag_196\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_196:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"StakingContract.sol\":3597:3607  msg.sender */\n      caller\n        /* \"StakingContract.sol\":3618:3619  0 */\n      0x00\n        /* \"StakingContract.sol\":3584:3608  addressStake[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"StakingContract.sol\":3584:3596  addressStake */\n      0x09\n        /* \"StakingContract.sol\":3584:3608  addressStake[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"StakingContract.sol\":3584:3619  addressStake[msg.sender].amount = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"StakingContract.sol\":3618:3619  0 */\n      dup2\n        /* \"StakingContract.sol\":3642:3654  _msgSender() */\n      tag_197\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"StakingContract.sol\":3642:3654  _msgSender() */\n    tag_197:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StakingContract.sol\":3629:3655  addressStake[_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"StakingContract.sol\":3629:3667  addressStake[_msgSender()].blockStaked */\n      0x01\n      add\n        /* \"StakingContract.sol\":3629:3671  addressStake[_msgSender()].blockStaked = 0 */\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StakingContract.sol\":3686:3728  degeneratorWithdrawn(_msgSender(), amount) */\n      and\n      0x14eed693e6d30152612ee94c12df593a490178621d3730e516b012e064eeef8f\n        /* \"StakingContract.sol\":3721:3727  amount */\n      dup3\n        /* \"StakingContract.sol\":3686:3728  degeneratorWithdrawn(_msgSender(), amount) */\n      mload(0x40)\n      tag_199\n      swap2\n        /* \"#utility.yul\":1808:1833   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1796:1798   */\n      0x20\n        /* \"#utility.yul\":1781:1799   */\n      add\n      swap1\n        /* \"#utility.yul\":1662:1839   */\n      jump\n        /* \"StakingContract.sol\":3686:3728  degeneratorWithdrawn(_msgSender(), amount) */\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"StakingContract.sol\":3051:3735  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_200\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_200:\n        /* \"StakingContract.sol\":3000:3735  function withdrawDegenerator() public nonReentrant {... */\n      jump\t// out\n        /* \"StakingContract.sol\":5746:5894  function setRewardBlackoutPeriod(uint256 _length) public multiSigOnly {... */\n    tag_60:\n        /* \"StakingContract.sol\":1110:1125  multiSigAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"StakingContract.sol\":1096:1106  msg.sender */\n      caller\n        /* \"StakingContract.sol\":1096:1125  msg.sender == multiSigAddress */\n      eq\n        /* \"StakingContract.sol\":1088:1174  require(msg.sender == multiSigAddress, \"Only multiSig address can call this function\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_202:\n        /* \"StakingContract.sol\":5844:5845  0 */\n      0x00\n        /* \"StakingContract.sol\":5834:5841  _length */\n      dup2\n        /* \"StakingContract.sol\":5834:5845  _length > 0 */\n      gt\n        /* \"StakingContract.sol\":5826:5846  require(_length > 0) */\n      tag_205\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_205:\n        /* \"StakingContract.sol\":5857:5877  rewardBlackoutPeriod */\n      0x05\n        /* \"StakingContract.sol\":5857:5887  rewardBlackoutPeriod = _length */\n      sstore\n        /* \"StakingContract.sol\":5746:5894  function setRewardBlackoutPeriod(uint256 _length) public multiSigOnly {... */\n      jump\t// out\n        /* \"StakingContract.sol\":5142:5590  function getTokenReward(address _tokenAddress, address _account) public view returns(uint256) {... */\n    tag_72:\n        /* \"StakingContract.sol\":5227:5234  uint256 */\n      0x00\n        /* \"StakingContract.sol\":5254:5298  getTokenEligibility(_tokenAddress, _account) */\n      tag_207\n        /* \"StakingContract.sol\":5274:5287  _tokenAddress */\n      dup4\n        /* \"StakingContract.sol\":5289:5297  _account */\n      dup4\n        /* \"StakingContract.sol\":5254:5273  getTokenEligibility */\n      tag_76\n        /* \"StakingContract.sol\":5254:5298  getTokenEligibility(_tokenAddress, _account) */\n      jump\t// in\n    tag_207:\n        /* \"StakingContract.sol\":5246:5299  require(getTokenEligibility(_tokenAddress, _account)) */\n      tag_208\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_208:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StakingContract.sol\":5330:5358  erc20Supplies[_tokenAddress] */\n      dup1\n      dup5\n      and\n        /* \"StakingContract.sol\":5309:5327  uint256 poolSupply */\n      0x00\n        /* \"StakingContract.sol\":5330:5358  erc20Supplies[_tokenAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"StakingContract.sol\":5330:5343  erc20Supplies */\n      0x0a\n        /* \"StakingContract.sol\":5330:5358  erc20Supplies[_tokenAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"StakingContract.sol\":5330:5369  erc20Supplies[_tokenAddress].poolSupply */\n      dup1\n      sload\n        /* \"StakingContract.sol\":5439:5493  erc20Supplies[_tokenAddress].degeneratorPoolSizeAtTime */\n      0x03\n      swap1\n      swap2\n      add\n      sload\n        /* \"StakingContract.sol\":5407:5429  addressStake[_account] */\n      swap5\n      dup8\n      and\n      dup5\n      mstore\n        /* \"StakingContract.sol\":5407:5419  addressStake */\n      0x09\n        /* \"StakingContract.sol\":5407:5429  addressStake[_account] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n        /* \"StakingContract.sol\":5407:5436  addressStake[_account].amount */\n      sload\n        /* \"StakingContract.sol\":5330:5369  erc20Supplies[_tokenAddress].poolSupply */\n      swap1\n      swap3\n        /* \"StakingContract.sol\":5407:5493  addressStake[_account].amount / erc20Supplies[_tokenAddress].degeneratorPoolSizeAtTime */\n      tag_209\n      swap2\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"StakingContract.sol\":5379:5493  uint256 poolPortionAtTime = addressStake[_account].amount / erc20Supplies[_tokenAddress].degeneratorPoolSizeAtTime */\n      swap1\n      pop\n        /* \"StakingContract.sol\":5503:5522  uint256 tokenReward */\n      0x00\n        /* \"StakingContract.sol\":5525:5555  poolPortionAtTime * poolSupply */\n      tag_211\n        /* \"StakingContract.sol\":5545:5555  poolSupply */\n      dup4\n        /* \"StakingContract.sol\":5379:5493  uint256 poolPortionAtTime = addressStake[_account].amount / erc20Supplies[_tokenAddress].degeneratorPoolSizeAtTime */\n      dup4\n        /* \"StakingContract.sol\":5525:5555  poolPortionAtTime * poolSupply */\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"StakingContract.sol\":5503:5555  uint256 tokenReward = poolPortionAtTime * poolSupply */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"StakingContract.sol\":5142:5590  function getTokenReward(address _tokenAddress, address _account) public view returns(uint256) {... */\n    tag_206:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"StakingContract.sol\":4853:5136  function getTokenEligibility(address _tokenAddress, address _account) public view returns(bool) {... */\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StakingContract.sol\":4967:4995  erc20Supplies[_tokenAddress] */\n      dup3\n      and\n        /* \"StakingContract.sol\":4943:4947  bool */\n      0x00\n        /* \"StakingContract.sol\":4967:4995  erc20Supplies[_tokenAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"StakingContract.sol\":4967:4980  erc20Supplies */\n      0x0a\n        /* \"StakingContract.sol\":4967:4995  erc20Supplies[_tokenAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"StakingContract.sol\":4967:5006  erc20Supplies[_tokenAddress].registered */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"StakingContract.sol\":4959:5007  require(erc20Supplies[_tokenAddress].registered) */\n      tag_214\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_214:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StakingContract.sol\":5087:5115  erc20Supplies[_tokenAddress] */\n      dup1\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StakingContract.sol\":5087:5100  erc20Supplies */\n      0x0a\n        /* \"StakingContract.sol\":5087:5115  erc20Supplies[_tokenAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"StakingContract.sol\":5087:5129  erc20Supplies[_tokenAddress].blockSupplied */\n      0x01\n      swap1\n      dup2\n      add\n      sload\n        /* \"StakingContract.sol\":5062:5082  rewardBlackoutPeriod */\n      sload(0x05)\n        /* \"StakingContract.sol\":5025:5047  addressStake[_account] */\n      swap6\n      dup9\n      and\n      dup6\n      mstore\n        /* \"StakingContract.sol\":5025:5037  addressStake */\n      0x09\n        /* \"StakingContract.sol\":5025:5047  addressStake[_account] */\n      swap1\n      swap4\n      mstore\n      swap3\n      keccak256\n        /* \"StakingContract.sol\":5025:5059  addressStake[_account].blockStaked */\n      swap1\n      swap2\n      add\n      sload\n        /* \"StakingContract.sol\":5087:5129  erc20Supplies[_tokenAddress].blockSupplied */\n      swap1\n      swap2\n        /* \"StakingContract.sol\":5025:5082  addressStake[_account].blockStaked + rewardBlackoutPeriod */\n      tag_215\n      swap2\n      tag_119\n      jump\t// in\n    tag_215:\n        /* \"StakingContract.sol\":5024:5129  (addressStake[_account].blockStaked + rewardBlackoutPeriod) <= erc20Supplies[_tokenAddress].blockSupplied */\n      gt\n      iszero\n      swap4\n        /* \"StakingContract.sol\":4853:5136  function getTokenEligibility(address _tokenAddress, address _account) public view returns(bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7328:7330   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7310:7331   */\n      mstore\n        /* \"#utility.yul\":7367:7369   */\n      0x1f\n        /* \"#utility.yul\":7347:7365   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7340:7370   */\n      mstore\n        /* \"#utility.yul\":7406:7439   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7386:7404   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7379:7440   */\n      mstore\n        /* \"#utility.yul\":7457:7475   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_93\n        /* \"#utility.yul\":7126:7481   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_217:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_26:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_226:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":407:580   */\n    tag_222:\n        /* \"#utility.yul\":475:495   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":524:555   */\n      dup2\n      and\n        /* \"#utility.yul\":514:556   */\n      dup2\n      eq\n        /* \"#utility.yul\":504:574   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":570:571   */\n      0x00\n        /* \"#utility.yul\":567:568   */\n      dup1\n        /* \"#utility.yul\":560:572   */\n      revert\n        /* \"#utility.yul\":504:574   */\n    tag_229:\n        /* \"#utility.yul\":407:580   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":585:845   */\n    tag_37:\n        /* \"#utility.yul\":653:659   */\n      0x00\n        /* \"#utility.yul\":661:667   */\n      dup1\n        /* \"#utility.yul\":714:716   */\n      0x40\n        /* \"#utility.yul\":702:711   */\n      dup4\n        /* \"#utility.yul\":693:700   */\n      dup6\n        /* \"#utility.yul\":689:712   */\n      sub\n        /* \"#utility.yul\":685:717   */\n      slt\n        /* \"#utility.yul\":682:734   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":682:734   */\n    tag_231:\n        /* \"#utility.yul\":753:782   */\n      tag_232\n        /* \"#utility.yul\":772:781   */\n      dup4\n        /* \"#utility.yul\":753:782   */\n      tag_222\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":743:782   */\n      swap2\n      pop\n        /* \"#utility.yul\":801:839   */\n      tag_233\n        /* \"#utility.yul\":835:837   */\n      0x20\n        /* \"#utility.yul\":824:833   */\n      dup5\n        /* \"#utility.yul\":820:838   */\n      add\n        /* \"#utility.yul\":801:839   */\n      tag_222\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":791:839   */\n      swap1\n      pop\n        /* \"#utility.yul\":585:845   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1657   */\n    tag_43:\n        /* \"#utility.yul\":1128:1134   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup1\n        /* \"#utility.yul\":1189:1191   */\n      0x20\n        /* \"#utility.yul\":1177:1186   */\n      dup4\n        /* \"#utility.yul\":1168:1175   */\n      dup6\n        /* \"#utility.yul\":1164:1187   */\n      sub\n        /* \"#utility.yul\":1160:1192   */\n      slt\n        /* \"#utility.yul\":1157:1209   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":1205:1206   */\n      0x00\n        /* \"#utility.yul\":1202:1203   */\n      dup1\n        /* \"#utility.yul\":1195:1207   */\n      revert\n        /* \"#utility.yul\":1157:1209   */\n    tag_236:\n        /* \"#utility.yul\":1245:1254   */\n      dup3\n        /* \"#utility.yul\":1232:1255   */\n      calldataload\n        /* \"#utility.yul\":1274:1292   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1315:1317   */\n      dup1\n        /* \"#utility.yul\":1307:1313   */\n      dup3\n        /* \"#utility.yul\":1304:1318   */\n      gt\n        /* \"#utility.yul\":1301:1335   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":1331:1332   */\n      0x00\n        /* \"#utility.yul\":1328:1329   */\n      dup1\n        /* \"#utility.yul\":1321:1333   */\n      revert\n        /* \"#utility.yul\":1301:1335   */\n    tag_237:\n        /* \"#utility.yul\":1369:1375   */\n      dup2\n        /* \"#utility.yul\":1358:1367   */\n      dup6\n        /* \"#utility.yul\":1354:1376   */\n      add\n        /* \"#utility.yul\":1344:1376   */\n      swap2\n      pop\n        /* \"#utility.yul\":1414:1421   */\n      dup6\n        /* \"#utility.yul\":1407:1411   */\n      0x1f\n        /* \"#utility.yul\":1403:1405   */\n      dup4\n        /* \"#utility.yul\":1399:1412   */\n      add\n        /* \"#utility.yul\":1395:1422   */\n      slt\n        /* \"#utility.yul\":1385:1440   */\n      tag_238\n      jumpi\n        /* \"#utility.yul\":1436:1437   */\n      0x00\n        /* \"#utility.yul\":1433:1434   */\n      dup1\n        /* \"#utility.yul\":1426:1438   */\n      revert\n        /* \"#utility.yul\":1385:1440   */\n    tag_238:\n        /* \"#utility.yul\":1476:1478   */\n      dup2\n        /* \"#utility.yul\":1463:1479   */\n      calldataload\n        /* \"#utility.yul\":1502:1504   */\n      dup2\n        /* \"#utility.yul\":1494:1500   */\n      dup2\n        /* \"#utility.yul\":1491:1505   */\n      gt\n        /* \"#utility.yul\":1488:1522   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":1518:1519   */\n      0x00\n        /* \"#utility.yul\":1515:1516   */\n      dup1\n        /* \"#utility.yul\":1508:1520   */\n      revert\n        /* \"#utility.yul\":1488:1522   */\n    tag_239:\n        /* \"#utility.yul\":1571:1578   */\n      dup7\n        /* \"#utility.yul\":1566:1568   */\n      0x20\n        /* \"#utility.yul\":1556:1562   */\n      dup3\n        /* \"#utility.yul\":1553:1554   */\n      0x05\n        /* \"#utility.yul\":1549:1563   */\n      shl\n        /* \"#utility.yul\":1545:1547   */\n      dup6\n        /* \"#utility.yul\":1541:1564   */\n      add\n        /* \"#utility.yul\":1537:1569   */\n      add\n        /* \"#utility.yul\":1534:1579   */\n      gt\n        /* \"#utility.yul\":1531:1596   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":1592:1593   */\n      0x00\n        /* \"#utility.yul\":1589:1590   */\n      dup1\n        /* \"#utility.yul\":1582:1594   */\n      revert\n        /* \"#utility.yul\":1531:1596   */\n    tag_240:\n        /* \"#utility.yul\":1623:1625   */\n      0x20\n        /* \"#utility.yul\":1615:1626   */\n      swap3\n      swap1\n      swap3\n      add\n      swap7\n        /* \"#utility.yul\":1645:1651   */\n      swap2\n      swap6\n      pop\n        /* \"#utility.yul\":1042:1657   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1844:2098   */\n    tag_51:\n        /* \"#utility.yul\":1912:1918   */\n      0x00\n        /* \"#utility.yul\":1920:1926   */\n      dup1\n        /* \"#utility.yul\":1973:1975   */\n      0x40\n        /* \"#utility.yul\":1961:1970   */\n      dup4\n        /* \"#utility.yul\":1952:1959   */\n      dup6\n        /* \"#utility.yul\":1948:1971   */\n      sub\n        /* \"#utility.yul\":1944:1976   */\n      slt\n        /* \"#utility.yul\":1941:1993   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":1989:1990   */\n      0x00\n        /* \"#utility.yul\":1986:1987   */\n      dup1\n        /* \"#utility.yul\":1979:1991   */\n      revert\n        /* \"#utility.yul\":1941:1993   */\n    tag_243:\n        /* \"#utility.yul\":2012:2041   */\n      tag_244\n        /* \"#utility.yul\":2031:2040   */\n      dup4\n        /* \"#utility.yul\":2012:2041   */\n      tag_222\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":2002:2041   */\n      swap5\n        /* \"#utility.yul\":2088:2090   */\n      0x20\n        /* \"#utility.yul\":2073:2091   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2060:2092   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1844:2098   */\n      jump\t// out\n        /* \"#utility.yul\":2339:2525   */\n    tag_87:\n        /* \"#utility.yul\":2398:2404   */\n      0x00\n        /* \"#utility.yul\":2451:2453   */\n      0x20\n        /* \"#utility.yul\":2439:2448   */\n      dup3\n        /* \"#utility.yul\":2430:2437   */\n      dup5\n        /* \"#utility.yul\":2426:2449   */\n      sub\n        /* \"#utility.yul\":2422:2454   */\n      slt\n        /* \"#utility.yul\":2419:2471   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":2467:2468   */\n      0x00\n        /* \"#utility.yul\":2464:2465   */\n      dup1\n        /* \"#utility.yul\":2457:2469   */\n      revert\n        /* \"#utility.yul\":2419:2471   */\n    tag_247:\n        /* \"#utility.yul\":2490:2519   */\n      tag_248\n        /* \"#utility.yul\":2509:2518   */\n      dup3\n        /* \"#utility.yul\":2490:2519   */\n      tag_222\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":2480:2519   */\n      swap4\n        /* \"#utility.yul\":2339:2525   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3416   */\n    tag_94:\n        /* \"#utility.yul\":3210:3212   */\n      0x20\n        /* \"#utility.yul\":3192:3213   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3249:3251   */\n      0x2c\n        /* \"#utility.yul\":3229:3247   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3222:3252   */\n      mstore\n        /* \"#utility.yul\":3288:3322   */\n      0x4f6e6c79206d756c746953696720616464726573732063616e2063616c6c2074\n        /* \"#utility.yul\":3283:3285   */\n      0x40\n        /* \"#utility.yul\":3268:3286   */\n      dup3\n      add\n        /* \"#utility.yul\":3261:3323   */\n      mstore\n      shl(0xa1, 0x3434b990333ab731ba34b7b7)\n        /* \"#utility.yul\":3354:3356   */\n      0x60\n        /* \"#utility.yul\":3339:3357   */\n      dup3\n      add\n        /* \"#utility.yul\":3332:3374   */\n      mstore\n        /* \"#utility.yul\":3406:3409   */\n      0x80\n        /* \"#utility.yul\":3391:3410   */\n      add\n      swap1\n        /* \"#utility.yul\":3008:3416   */\n      jump\t// out\n        /* \"#utility.yul\":4162:4439   */\n    tag_111:\n        /* \"#utility.yul\":4229:4235   */\n      0x00\n        /* \"#utility.yul\":4282:4284   */\n      0x20\n        /* \"#utility.yul\":4270:4279   */\n      dup3\n        /* \"#utility.yul\":4261:4268   */\n      dup5\n        /* \"#utility.yul\":4257:4280   */\n      sub\n        /* \"#utility.yul\":4253:4285   */\n      slt\n        /* \"#utility.yul\":4250:4302   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":4298:4299   */\n      0x00\n        /* \"#utility.yul\":4295:4296   */\n      dup1\n        /* \"#utility.yul\":4288:4300   */\n      revert\n        /* \"#utility.yul\":4250:4302   */\n    tag_254:\n        /* \"#utility.yul\":4330:4339   */\n      dup2\n        /* \"#utility.yul\":4324:4340   */\n      mload\n        /* \"#utility.yul\":4383:4388   */\n      dup1\n        /* \"#utility.yul\":4376:4389   */\n      iszero\n        /* \"#utility.yul\":4369:4390   */\n      iszero\n        /* \"#utility.yul\":4362:4367   */\n      dup2\n        /* \"#utility.yul\":4359:4391   */\n      eq\n        /* \"#utility.yul\":4349:4409   */\n      tag_248\n      jumpi\n        /* \"#utility.yul\":4405:4406   */\n      0x00\n        /* \"#utility.yul\":4402:4403   */\n      dup1\n        /* \"#utility.yul\":4395:4407   */\n      revert\n        /* \"#utility.yul\":4788:4915   */\n    tag_223:\n        /* \"#utility.yul\":4849:4859   */\n      0x4e487b71\n        /* \"#utility.yul\":4844:4847   */\n      0xe0\n        /* \"#utility.yul\":4840:4860   */\n      shl\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4830:4861   */\n      mstore\n        /* \"#utility.yul\":4880:4884   */\n      0x11\n        /* \"#utility.yul\":4877:4878   */\n      0x04\n        /* \"#utility.yul\":4870:4885   */\n      mstore\n        /* \"#utility.yul\":4904:4908   */\n      0x24\n        /* \"#utility.yul\":4901:4902   */\n      0x00\n        /* \"#utility.yul\":4894:4909   */\n      revert\n        /* \"#utility.yul\":4920:5045   */\n    tag_119:\n        /* \"#utility.yul\":4985:4994   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5006:5016   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5003:5039   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":5019:5037   */\n      tag_206\n      tag_223\n      jump\t// in\n        /* \"#utility.yul\":5303:5430   */\n    tag_139:\n        /* \"#utility.yul\":5364:5374   */\n      0x4e487b71\n        /* \"#utility.yul\":5359:5362   */\n      0xe0\n        /* \"#utility.yul\":5355:5375   */\n      shl\n        /* \"#utility.yul\":5352:5353   */\n      0x00\n        /* \"#utility.yul\":5345:5376   */\n      mstore\n        /* \"#utility.yul\":5395:5399   */\n      0x32\n        /* \"#utility.yul\":5392:5393   */\n      0x04\n        /* \"#utility.yul\":5385:5400   */\n      mstore\n        /* \"#utility.yul\":5419:5423   */\n      0x24\n        /* \"#utility.yul\":5416:5417   */\n      0x00\n        /* \"#utility.yul\":5409:5424   */\n      revert\n        /* \"#utility.yul\":5714:5898   */\n    tag_169:\n        /* \"#utility.yul\":5784:5790   */\n      0x00\n        /* \"#utility.yul\":5837:5839   */\n      0x20\n        /* \"#utility.yul\":5825:5834   */\n      dup3\n        /* \"#utility.yul\":5816:5823   */\n      dup5\n        /* \"#utility.yul\":5812:5835   */\n      sub\n        /* \"#utility.yul\":5808:5840   */\n      slt\n        /* \"#utility.yul\":5805:5857   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":5853:5854   */\n      0x00\n        /* \"#utility.yul\":5850:5851   */\n      dup1\n        /* \"#utility.yul\":5843:5855   */\n      revert\n        /* \"#utility.yul\":5805:5857   */\n    tag_265:\n      pop\n        /* \"#utility.yul\":5876:5892   */\n      mload\n      swap2\n        /* \"#utility.yul\":5714:5898   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6598:6726   */\n    tag_195:\n        /* \"#utility.yul\":6665:6674   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6686:6697   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6683:6720   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":6700:6718   */\n      tag_206\n      tag_223\n      jump\t// in\n        /* \"#utility.yul\":6731:6948   */\n    tag_210:\n        /* \"#utility.yul\":6771:6772   */\n      0x00\n        /* \"#utility.yul\":6797:6798   */\n      dup3\n        /* \"#utility.yul\":6787:6919   */\n      tag_272\n      jumpi\n        /* \"#utility.yul\":6841:6851   */\n      0x4e487b71\n        /* \"#utility.yul\":6836:6839   */\n      0xe0\n        /* \"#utility.yul\":6832:6852   */\n      shl\n        /* \"#utility.yul\":6829:6830   */\n      0x00\n        /* \"#utility.yul\":6822:6853   */\n      mstore\n        /* \"#utility.yul\":6876:6880   */\n      0x12\n        /* \"#utility.yul\":6873:6874   */\n      0x04\n        /* \"#utility.yul\":6866:6881   */\n      mstore\n        /* \"#utility.yul\":6904:6908   */\n      0x24\n        /* \"#utility.yul\":6901:6902   */\n      0x00\n        /* \"#utility.yul\":6894:6909   */\n      revert\n        /* \"#utility.yul\":6787:6919   */\n    tag_272:\n      pop\n        /* \"#utility.yul\":6933:6942   */\n      div\n      swap1\n        /* \"#utility.yul\":6731:6948   */\n      jump\t// out\n        /* \"#utility.yul\":6953:7121   */\n    tag_212:\n        /* \"#utility.yul\":7026:7035   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":7057:7066   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7074:7089   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":7068:7090   */\n      dup5\n      eq\n        /* \"#utility.yul\":7054:7091   */\n      or\n        /* \"#utility.yul\":7044:7115   */\n      tag_206\n      jumpi\n        /* \"#utility.yul\":7095:7113   */\n      tag_206\n      tag_223\n      jump\t// in\n\n    auxdata: 0xa26469706673582212209478b1d835b6531e95195d1359e8cf14d69a3380c9ccaed61827f90fa5c086d564736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_649": {
									"entryPoint": null,
									"id": 649,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256_fromMemory": {
									"entryPoint": 164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:700:6",
										"nodeType": "YulBlock",
										"src": "0:700:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:6",
													"nodeType": "YulBlock",
													"src": "74:117:6",
													"statements": [
														{
															"nativeSrc": "84:22:6",
															"nodeType": "YulAssignment",
															"src": "84:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:6"
																},
																"nativeSrc": "93:13:6",
																"nodeType": "YulFunctionCall",
																"src": "93:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:6",
																"nodeType": "YulBlock",
																"src": "169:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:6",
																					"nodeType": "YulLiteral",
																					"src": "178:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:6",
																					"nodeType": "YulLiteral",
																					"src": "181:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:6"
																			},
																			"nativeSrc": "171:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:6"
																		},
																		"nativeSrc": "171:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:6",
																										"nodeType": "YulLiteral",
																										"src": "154:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:6",
																										"nodeType": "YulLiteral",
																										"src": "159:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:6"
																								},
																								"nativeSrc": "150:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:6",
																								"nodeType": "YulLiteral",
																								"src": "163:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:6"
																						},
																						"nativeSrc": "146:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:6"
																				},
																				"nativeSrc": "135:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:6"
																		},
																		"nativeSrc": "125:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:6"
																},
																"nativeSrc": "118:50:6",
																"nodeType": "YulFunctionCall",
																"src": "118:50:6"
															},
															"nativeSrc": "115:70:6",
															"nodeType": "YulIf",
															"src": "115:70:6"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:6",
														"nodeType": "YulTypedName",
														"src": "53:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:6",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "14:177:6"
											},
											{
												"body": {
													"nativeSrc": "345:353:6",
													"nodeType": "YulBlock",
													"src": "345:353:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "392:16:6",
																"nodeType": "YulBlock",
																"src": "392:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "401:1:6",
																					"nodeType": "YulLiteral",
																					"src": "401:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "404:1:6",
																					"nodeType": "YulLiteral",
																					"src": "404:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "394:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "394:6:6"
																			},
																			"nativeSrc": "394:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "394:12:6"
																		},
																		"nativeSrc": "394:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "394:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "366:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "366:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "375:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "375:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "362:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "362:3:6"
																		},
																		"nativeSrc": "362:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "362:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "387:3:6",
																		"nodeType": "YulLiteral",
																		"src": "387:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "358:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:6"
																},
																"nativeSrc": "358:33:6",
																"nodeType": "YulFunctionCall",
																"src": "358:33:6"
															},
															"nativeSrc": "355:53:6",
															"nodeType": "YulIf",
															"src": "355:53:6"
														},
														{
															"nativeSrc": "417:50:6",
															"nodeType": "YulAssignment",
															"src": "417:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "457:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "457:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "427:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "427:29:6"
																},
																"nativeSrc": "427:40:6",
																"nodeType": "YulFunctionCall",
																"src": "427:40:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "417:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:6"
																}
															]
														},
														{
															"nativeSrc": "476:59:6",
															"nodeType": "YulAssignment",
															"src": "476:59:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "520:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "520:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "531:2:6",
																				"nodeType": "YulLiteral",
																				"src": "531:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "516:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "516:3:6"
																		},
																		"nativeSrc": "516:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "516:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "486:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "486:29:6"
																},
																"nativeSrc": "486:49:6",
																"nodeType": "YulFunctionCall",
																"src": "486:49:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "476:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "476:6:6"
																}
															]
														},
														{
															"nativeSrc": "544:59:6",
															"nodeType": "YulAssignment",
															"src": "544:59:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "588:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "588:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "599:2:6",
																				"nodeType": "YulLiteral",
																				"src": "599:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "584:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:6"
																		},
																		"nativeSrc": "584:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "584:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "554:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "554:29:6"
																},
																"nativeSrc": "554:49:6",
																"nodeType": "YulFunctionCall",
																"src": "554:49:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "544:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:6"
																}
															]
														},
														{
															"nativeSrc": "612:35:6",
															"nodeType": "YulAssignment",
															"src": "612:35:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "632:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "632:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "643:2:6",
																				"nodeType": "YulLiteral",
																				"src": "643:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "628:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "628:3:6"
																		},
																		"nativeSrc": "628:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "628:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "622:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "622:5:6"
																},
																"nativeSrc": "622:25:6",
																"nodeType": "YulFunctionCall",
																"src": "622:25:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "612:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "612:6:6"
																}
															]
														},
														{
															"nativeSrc": "656:36:6",
															"nodeType": "YulAssignment",
															"src": "656:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "676:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "676:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "687:3:6",
																				"nodeType": "YulLiteral",
																				"src": "687:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "672:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:6"
																		},
																		"nativeSrc": "672:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "672:19:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "666:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "666:5:6"
																},
																"nativeSrc": "666:26:6",
																"nodeType": "YulFunctionCall",
																"src": "666:26:6"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "656:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "656:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256_fromMemory",
												"nativeSrc": "196:502:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "279:9:6",
														"nodeType": "YulTypedName",
														"src": "279:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "290:7:6",
														"nodeType": "YulTypedName",
														"src": "290:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "302:6:6",
														"nodeType": "YulTypedName",
														"src": "302:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "310:6:6",
														"nodeType": "YulTypedName",
														"src": "310:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "318:6:6",
														"nodeType": "YulTypedName",
														"src": "318:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "326:6:6",
														"nodeType": "YulTypedName",
														"src": "326:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "334:6:6",
														"nodeType": "YulTypedName",
														"src": "334:6:6",
														"type": ""
													}
												],
												"src": "196:502:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610f12380380610f1283398101604081905261002e916100a4565b60015f81815581546001600160a01b039788166001600160a01b0319918216179092556002805496881696831696909617909555600380549490961693169290921790935560055560049190915560078190556008556100f6565b80516001600160a01b038116811461009f575f80fd5b919050565b5f805f805f60a086880312156100b8575f80fd5b6100c186610089565b94506100cf60208701610089565b93506100dd60408701610089565b6060870151608090970151959894975095949392505050565b610e0f806101035f395ff3fe608060405234801561000f575f80fd5b5060043610610111575f3560e01c80639b29d2151161009e578063a164959d1161006e578063a164959d1461023a578063acde65971461024d578063ad5a402b14610260578063c45a015514610269578063caf10b571461027c575f80fd5b80639b29d215146102025780639d76ea58146102155780639f8932f414610228578063a163beea14610231575f80fd5b806362d76d06116100e457806362d76d06146101aa5780636b036f45146101bd5780638167ee72146101d457806395adb5ad146101e7578063966dae0e146101ef575f80fd5b80630d29fcd4146101155780631516def71461012a57806341fee5571461015a578063609c878a1461016d575b5f80fd5b610128610123366004610bb9565b6102e5565b005b60025461013d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610128610168366004610bb9565b610328565b61019a61017b366004610beb565b600b60209081525f928352604080842090915290825290205460ff1681565b6040519015158152602001610151565b6101286101b8366004610c1c565b610524565b6101c660045481565b604051908152602001610151565b6101286101e2366004610c8b565b61072e565b610128610807565b60015461013d906001600160a01b031681565b610128610210366004610bb9565b610a53565b60035461013d906001600160a01b031681565b6101c660055481565b6101c660085481565b6101c6610248366004610beb565b610a8d565b61019a61025b366004610beb565b610af4565b6101c660075481565b60065461013d906001600160a01b031681565b6102bb61028a366004610cb3565b600a6020525f9081526040902080546001820154600283015460038401546004909401549293919290919060ff1685565b6040805195865260208601949094529284019190915260608301521515608082015260a001610151565b6002546001600160a01b031633146103185760405162461bcd60e51b815260040161030f90610cd3565b60405180910390fd5b5f8111610323575f80fd5b600455565b610330610b62565b6003546004546001600160a01b039091169082116103905760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161030f565b6001600160a01b0381166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303815f875af11580156103f0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104149190610d1f565b6104525760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161030f565b335f90815260096020526040902060020154610100900460ff1615610475575f80fd5b335f9081526009602052604081208054849290610493908490610d52565b9091555050335f90815260096020526040812043600190910155600780548492906104bf908490610d52565b92505081905550600160085f8282546104d89190610d52565b90915550506040805183815243602082015233917f0ae860169ef88b6e5a084a54675af932ac7be23de4abd34a1d99a5a8402a17cc910160405180910390a25061052160015f55565b50565b335f90815260096020526040902060020154610100900460ff16610546575f80fd5b61054e610b62565b5f5b818110156107205761058883838381811061056d5761056d610d65565b90506020020160208101906105829190610cb3565b33610af4565b610590575f80fd5b600b5f8484848181106105a5576105a5610d65565b90506020020160208101906105ba9190610cb3565b6001600160a01b0316815260208082019290925260409081015f90812033825290925290205460ff16156105ec575f80fd5b5f61061d84848481811061060257610602610d65565b90506020020160208101906106179190610cb3565b33610a8d565b90506001600b5f86868681811061063657610636610d65565b905060200201602081019061064b9190610cb3565b6001600160a01b0316815260208082019290925260409081015f9081203382529092529020805460ff191691151591909117905583838381811061069157610691610d65565b90506020020160208101906106a69190610cb3565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044016020604051808303815f875af11580156106f2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107169190610d1f565b5050600101610550565b5061072a60015f55565b5050565b610736610b62565b6040516370a0823160e01b815230600482015281906001600160a01b038416906370a0823190602401602060405180830381865afa15801561077a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061079e9190610d79565b146107a7575f80fd5b6001600160a01b0382165f908152600a602052604090206004015460ff16156107ce575f80fd5b6001600160a01b0382165f908152600a602052604090204360018201558181556002810182905560075460039091015561072a60015f55565b61080f610b62565b335f9081526009602052604090205461085b5760405162461bcd60e51b815260206004820152600e60248201526d139bc81cdd185ad948199bdd5b9960921b604482015260640161030f565b335f9081526009602052604090206002015460ff16156108bd5760405162461bcd60e51b815260206004820152601760248201527f5374616b6520616c72656164792077697468647261776e000000000000000000604482015260640161030f565b600354335f81815260096020908152604080832080546002909101805461ffff19166001179055815163a9059cbb60e01b815260048101959095526024850181905290516001600160a01b03909516949093859363a9059cbb93604480840194919391929183900301908290875af115801561093b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061095f9190610d1f565b61099d5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161030f565b8060075f8282546109ae9190610d90565b92505081905550600160085f8282546109c79190610d90565b9091555050335f9081526009602081905260408220829055816109e73390565b6001600160a01b0316815260208101919091526040015f2060010155336001600160a01b03167f14eed693e6d30152612ee94c12df593a490178621d3730e516b012e064eeef8f82604051610a3e91815260200190565b60405180910390a25050610a5160015f55565b565b6002546001600160a01b03163314610a7d5760405162461bcd60e51b815260040161030f90610cd3565b5f8111610a88575f80fd5b600555565b5f610a988383610af4565b610aa0575f80fd5b6001600160a01b038084165f908152600a602090815260408083208054600390910154948716845260099092528220549092610adb91610da3565b90505f610ae88383610dc2565b93505050505b92915050565b6001600160a01b0382165f908152600a602052604081206004015460ff16610b1a575f80fd5b6001600160a01b038084165f908152600a60209081526040808320600190810154600554958816855260099093529220909101549091610b5991610d52565b11159392505050565b60025f5403610bb35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161030f565b60025f55565b5f60208284031215610bc9575f80fd5b5035919050565b80356001600160a01b0381168114610be6575f80fd5b919050565b5f8060408385031215610bfc575f80fd5b610c0583610bd0565b9150610c1360208401610bd0565b90509250929050565b5f8060208385031215610c2d575f80fd5b823567ffffffffffffffff80821115610c44575f80fd5b818501915085601f830112610c57575f80fd5b813581811115610c65575f80fd5b8660208260051b8501011115610c79575f80fd5b60209290920196919550909350505050565b5f8060408385031215610c9c575f80fd5b610ca583610bd0565b946020939093013593505050565b5f60208284031215610cc3575f80fd5b610ccc82610bd0565b9392505050565b6020808252602c908201527f4f6e6c79206d756c746953696720616464726573732063616e2063616c6c207460408201526b3434b990333ab731ba34b7b760a11b606082015260800190565b5f60208284031215610d2f575f80fd5b81518015158114610ccc575f80fd5b634e487b7160e01b5f52601160045260245ffd5b80820180821115610aee57610aee610d3e565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215610d89575f80fd5b5051919050565b81810381811115610aee57610aee610d3e565b5f82610dbd57634e487b7160e01b5f52601260045260245ffd5b500490565b8082028115828204841417610aee57610aee610d3e56fea26469706673582212209478b1d835b6531e95195d1359e8cf14d69a3380c9ccaed61827f90fa5c086d564736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xF12 CODESIZE SUB DUP1 PUSH2 0xF12 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xA4 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 DUP2 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP7 DUP9 AND SWAP7 DUP4 AND SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP5 SWAP1 SWAP7 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP4 SSTORE PUSH1 0x5 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x8 SSTORE PUSH2 0xF6 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC1 DUP7 PUSH2 0x89 JUMP JUMPDEST SWAP5 POP PUSH2 0xCF PUSH1 0x20 DUP8 ADD PUSH2 0x89 JUMP JUMPDEST SWAP4 POP PUSH2 0xDD PUSH1 0x40 DUP8 ADD PUSH2 0x89 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x80 SWAP1 SWAP8 ADD MLOAD SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xE0F DUP1 PUSH2 0x103 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x111 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B29D215 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xA164959D GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA164959D EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xACDE6597 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xAD5A402B EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xCAF10B57 EQ PUSH2 0x27C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B29D215 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x9F8932F4 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xA163BEEA EQ PUSH2 0x231 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x62D76D06 GT PUSH2 0xE4 JUMPI DUP1 PUSH4 0x62D76D06 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x6B036F45 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x8167EE72 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x95ADB5AD EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x966DAE0E EQ PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD29FCD4 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x1516DEF7 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x41FEE557 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x609C878A EQ PUSH2 0x16D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x128 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x2E5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x13D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0xBEB JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x524 JUMP JUMPDEST PUSH2 0x1C6 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST PUSH2 0x128 PUSH2 0x807 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x13D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x13D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C6 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C6 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0xBEB JUMP JUMPDEST PUSH2 0xA8D JUMP JUMPDEST PUSH2 0x19A PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0xBEB JUMP JUMPDEST PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x1C6 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x13D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x318 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30F SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x323 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH2 0x330 PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 GT PUSH2 0x390 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH4 0x23B872DD CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0xD1F JUMP JUMPDEST PUSH2 0x452 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30F JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x475 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x493 SWAP1 DUP5 SWAP1 PUSH2 0xD52 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 NUMBER PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x7 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4BF SWAP1 DUP5 SWAP1 PUSH2 0xD52 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0xD52 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE NUMBER PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0xAE860169EF88B6E5A084A54675AF932AC7BE23DE4ABD34A1D99A5A8402A17CC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x521 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x546 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x54E PUSH2 0xB62 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x720 JUMPI PUSH2 0x588 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x56D JUMPI PUSH2 0x56D PUSH2 0xD65 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x582 SWAP2 SWAP1 PUSH2 0xCB3 JUMP JUMPDEST CALLER PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x590 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xB PUSH0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x5A5 JUMPI PUSH2 0x5A5 PUSH2 0xD65 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5EC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x61D DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x602 JUMPI PUSH2 0x602 PUSH2 0xD65 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x617 SWAP2 SWAP1 PUSH2 0xCB3 JUMP JUMPDEST CALLER PUSH2 0xA8D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0xB PUSH0 DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x636 JUMPI PUSH2 0x636 PUSH2 0xD65 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x64B SWAP2 SWAP1 PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x691 JUMPI PUSH2 0x691 PUSH2 0xD65 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x716 SWAP2 SWAP1 PUSH2 0xD1F JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x550 JUMP JUMPDEST POP PUSH2 0x72A PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x736 PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x77A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x79E SWAP2 SWAP1 PUSH2 0xD79 JUMP JUMPDEST EQ PUSH2 0x7A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7CE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 NUMBER PUSH1 0x1 DUP3 ADD SSTORE DUP2 DUP2 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x7 SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH2 0x72A PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x80F PUSH2 0xB62 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BC81CDD185AD948199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30F JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B6520616C72656164792077697468647261776E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x3 SLOAD CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x24 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP4 DUP6 SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP5 ADD SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 SWAP2 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x93B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x95F SWAP2 SWAP1 PUSH2 0xD1F JUMP JUMPDEST PUSH2 0x99D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30F JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9AE SWAP2 SWAP1 PUSH2 0xD90 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9C7 SWAP2 SWAP1 PUSH2 0xD90 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP3 SWAP1 SSTORE DUP2 PUSH2 0x9E7 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SSTORE CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x14EED693E6D30152612EE94C12DF593A490178621D3730E516B012E064EEEF8F DUP3 PUSH1 0x40 MLOAD PUSH2 0xA3E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xA51 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30F SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xA88 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0xA98 DUP4 DUP4 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0xAA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD SWAP5 DUP8 AND DUP5 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP1 SWAP3 PUSH2 0xADB SWAP2 PUSH2 0xDA3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xAE8 DUP4 DUP4 PUSH2 0xDC2 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0xB1A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD PUSH1 0x5 SLOAD SWAP6 DUP9 AND DUP6 MSTORE PUSH1 0x9 SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 PUSH2 0xB59 SWAP2 PUSH2 0xD52 JUMP JUMPDEST GT ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xBB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBFC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC05 DUP4 PUSH2 0xBD0 JUMP JUMPDEST SWAP2 POP PUSH2 0xC13 PUSH1 0x20 DUP5 ADD PUSH2 0xBD0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC2D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC44 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC57 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xC65 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xC79 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC9C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCA5 DUP4 PUSH2 0xBD0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCCC DUP3 PUSH2 0xBD0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206D756C746953696720616464726573732063616E2063616C6C2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x3434B990333AB731BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD2F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCCC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAEE PUSH2 0xD3E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD89 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAEE PUSH2 0xD3E JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xDBD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xAEE JUMPI PUSH2 0xAEE PUSH2 0xD3E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 PUSH25 0xB1D835B6531E95195D1359E8CF14D69A3380C9CCAED61827F9 0xF 0xA5 0xC0 DUP7 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "424:5473:5:-:0;;;1922:450;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:1;1821:7;:22;;;2079:32:5;;-1:-1:-1;;;;;2079:32:5;;;-1:-1:-1;;;;;;2079:32:5;;;;;;;2121:15;:34;;;;;;;;;;;;;;;2165:12;:28;;;;;;;;;;;;;;;2203:20;:44;2257:18;:40;;;;2307:22;:26;;;2343:18;:22;424:5473;;14:177:6;93:13;;-1:-1:-1;;;;;135:31:6;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:502::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;427:40;457:9;427:40;:::i;:::-;417:50;;486:49;531:2;520:9;516:18;486:49;:::i;:::-;476:59;;554:49;599:2;588:9;584:18;554:49;:::i;:::-;643:2;628:18;;622:25;687:3;672:19;;;666:26;196:502;;;;-1:-1:-1;544:59:6;622:25;666:26;196:502;-1:-1:-1;;;196:502:6:o;:::-;424:5473:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_302": {
									"entryPoint": null,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": null,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 2914,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addressWithdrewERC20Reward_593": {
									"entryPoint": null,
									"id": 593,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@degeneratorStakers_519": {
									"entryPoint": null,
									"id": 519,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@degeneratorStakingPool_517": {
									"entryPoint": null,
									"id": 517,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc20Supplies_587": {
									"entryPoint": null,
									"id": 587,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@factoryAddress_504": {
									"entryPoint": null,
									"id": 504,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@factory_515": {
									"entryPoint": null,
									"id": 515,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getTokenEligibility_994": {
									"entryPoint": 2804,
									"id": 994,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getTokenReward_1038": {
									"entryPoint": 2701,
									"id": 1038,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@minimumStakeAmount_510": {
									"entryPoint": null,
									"id": 510,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@multiSigAddress_506": {
									"entryPoint": null,
									"id": 506,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@registerERC20Supply_886": {
									"entryPoint": 1838,
									"id": 886,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@rewardBlackoutPeriod_512": {
									"entryPoint": null,
									"id": 512,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMinimumStakeAmount_1056": {
									"entryPoint": 741,
									"id": 1056,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardBlackoutPeriod_1074": {
									"entryPoint": 2643,
									"id": 1074,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeDegnerator_727": {
									"entryPoint": 808,
									"id": 727,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tokenAddress_508": {
									"entryPoint": null,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawDegenerator_825": {
									"entryPoint": 2055,
									"id": 825,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawRewards_964": {
									"entryPoint": 1316,
									"id": 964,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 3100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IFairLaunchFactoryV1_$491__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_644e8db99e7c305cbaf9ab7cf4dfbbf8e9d24808e86a7c505456e21dd10275ce__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a89e8792d12ab2935107c47df3d6e37408b35c7947605d9909710024cead9a50__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3390,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3429,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7483:6",
										"nodeType": "YulBlock",
										"src": "0:7483:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:6",
													"nodeType": "YulBlock",
													"src": "84:110:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:6",
																"nodeType": "YulBlock",
																"src": "130:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:6",
																					"nodeType": "YulLiteral",
																					"src": "139:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:6",
																					"nodeType": "YulLiteral",
																					"src": "142:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:6"
																			},
																			"nativeSrc": "132:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:6"
																		},
																		"nativeSrc": "132:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:6"
																		},
																		"nativeSrc": "101:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:6",
																		"nodeType": "YulLiteral",
																		"src": "126:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:6"
																},
																"nativeSrc": "97:32:6",
																"nodeType": "YulFunctionCall",
																"src": "97:32:6"
															},
															"nativeSrc": "94:52:6",
															"nodeType": "YulIf",
															"src": "94:52:6"
														},
														{
															"nativeSrc": "155:33:6",
															"nodeType": "YulAssignment",
															"src": "155:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:6"
																},
																"nativeSrc": "165:23:6",
																"nodeType": "YulFunctionCall",
																"src": "165:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:180:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:6",
														"nodeType": "YulTypedName",
														"src": "50:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:6",
														"nodeType": "YulTypedName",
														"src": "61:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:6",
														"nodeType": "YulTypedName",
														"src": "73:6:6",
														"type": ""
													}
												],
												"src": "14:180:6"
											},
											{
												"body": {
													"nativeSrc": "300:102:6",
													"nodeType": "YulBlock",
													"src": "300:102:6",
													"statements": [
														{
															"nativeSrc": "310:26:6",
															"nodeType": "YulAssignment",
															"src": "310:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "322:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "333:2:6",
																		"nodeType": "YulLiteral",
																		"src": "333:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "318:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:6"
																},
																"nativeSrc": "318:18:6",
																"nodeType": "YulFunctionCall",
																"src": "318:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "310:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "352:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "367:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "367:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "383:3:6",
																								"nodeType": "YulLiteral",
																								"src": "383:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "388:1:6",
																								"nodeType": "YulLiteral",
																								"src": "388:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "379:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "379:3:6"
																						},
																						"nativeSrc": "379:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "379:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "392:1:6",
																						"nodeType": "YulLiteral",
																						"src": "392:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "375:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "375:3:6"
																				},
																				"nativeSrc": "375:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "375:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "363:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "363:3:6"
																		},
																		"nativeSrc": "363:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "363:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "345:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:6"
																},
																"nativeSrc": "345:51:6",
																"nodeType": "YulFunctionCall",
																"src": "345:51:6"
															},
															"nativeSrc": "345:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "345:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "199:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "269:9:6",
														"nodeType": "YulTypedName",
														"src": "269:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "280:6:6",
														"nodeType": "YulTypedName",
														"src": "280:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "291:4:6",
														"nodeType": "YulTypedName",
														"src": "291:4:6",
														"type": ""
													}
												],
												"src": "199:203:6"
											},
											{
												"body": {
													"nativeSrc": "456:124:6",
													"nodeType": "YulBlock",
													"src": "456:124:6",
													"statements": [
														{
															"nativeSrc": "466:29:6",
															"nodeType": "YulAssignment",
															"src": "466:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "488:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "488:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "475:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "475:12:6"
																},
																"nativeSrc": "475:20:6",
																"nodeType": "YulFunctionCall",
																"src": "475:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "466:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "466:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "558:16:6",
																"nodeType": "YulBlock",
																"src": "558:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "567:1:6",
																					"nodeType": "YulLiteral",
																					"src": "567:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "570:1:6",
																					"nodeType": "YulLiteral",
																					"src": "570:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "560:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "560:6:6"
																			},
																			"nativeSrc": "560:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "560:12:6"
																		},
																		"nativeSrc": "560:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "560:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "517:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "517:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "528:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "528:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "543:3:6",
																										"nodeType": "YulLiteral",
																										"src": "543:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "548:1:6",
																										"nodeType": "YulLiteral",
																										"src": "548:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "539:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "539:3:6"
																								},
																								"nativeSrc": "539:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "539:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "552:1:6",
																								"nodeType": "YulLiteral",
																								"src": "552:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "535:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "535:3:6"
																						},
																						"nativeSrc": "535:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "535:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "524:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "524:3:6"
																				},
																				"nativeSrc": "524:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "524:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "514:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "514:2:6"
																		},
																		"nativeSrc": "514:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "514:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "507:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "507:6:6"
																},
																"nativeSrc": "507:50:6",
																"nodeType": "YulFunctionCall",
																"src": "507:50:6"
															},
															"nativeSrc": "504:70:6",
															"nodeType": "YulIf",
															"src": "504:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "407:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "435:6:6",
														"nodeType": "YulTypedName",
														"src": "435:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "446:5:6",
														"nodeType": "YulTypedName",
														"src": "446:5:6",
														"type": ""
													}
												],
												"src": "407:173:6"
											},
											{
												"body": {
													"nativeSrc": "672:173:6",
													"nodeType": "YulBlock",
													"src": "672:173:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "718:16:6",
																"nodeType": "YulBlock",
																"src": "718:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:6",
																					"nodeType": "YulLiteral",
																					"src": "727:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:6",
																					"nodeType": "YulLiteral",
																					"src": "730:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:6"
																			},
																			"nativeSrc": "720:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:6"
																		},
																		"nativeSrc": "720:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "693:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "693:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "702:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "702:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "689:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "689:3:6"
																		},
																		"nativeSrc": "689:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "689:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "714:2:6",
																		"nodeType": "YulLiteral",
																		"src": "714:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "685:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "685:3:6"
																},
																"nativeSrc": "685:32:6",
																"nodeType": "YulFunctionCall",
																"src": "685:32:6"
															},
															"nativeSrc": "682:52:6",
															"nodeType": "YulIf",
															"src": "682:52:6"
														},
														{
															"nativeSrc": "743:39:6",
															"nodeType": "YulAssignment",
															"src": "743:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "772:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "772:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "753:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "753:18:6"
																},
																"nativeSrc": "753:29:6",
																"nodeType": "YulFunctionCall",
																"src": "753:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "743:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "743:6:6"
																}
															]
														},
														{
															"nativeSrc": "791:48:6",
															"nodeType": "YulAssignment",
															"src": "791:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "824:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "824:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "835:2:6",
																				"nodeType": "YulLiteral",
																				"src": "835:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "820:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "820:3:6"
																		},
																		"nativeSrc": "820:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "820:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "801:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "801:18:6"
																},
																"nativeSrc": "801:38:6",
																"nodeType": "YulFunctionCall",
																"src": "801:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "791:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "791:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "585:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "630:9:6",
														"nodeType": "YulTypedName",
														"src": "630:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "641:7:6",
														"nodeType": "YulTypedName",
														"src": "641:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "653:6:6",
														"nodeType": "YulTypedName",
														"src": "653:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "661:6:6",
														"nodeType": "YulTypedName",
														"src": "661:6:6",
														"type": ""
													}
												],
												"src": "585:260:6"
											},
											{
												"body": {
													"nativeSrc": "945:92:6",
													"nodeType": "YulBlock",
													"src": "945:92:6",
													"statements": [
														{
															"nativeSrc": "955:26:6",
															"nodeType": "YulAssignment",
															"src": "955:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "967:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "967:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "978:2:6",
																		"nodeType": "YulLiteral",
																		"src": "978:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "963:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "963:3:6"
																},
																"nativeSrc": "963:18:6",
																"nodeType": "YulFunctionCall",
																"src": "963:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "955:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "955:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "997:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "997:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1022:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1022:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1015:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1015:6:6"
																				},
																				"nativeSrc": "1015:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1015:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1008:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1008:6:6"
																		},
																		"nativeSrc": "1008:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1008:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "990:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "990:6:6"
																},
																"nativeSrc": "990:41:6",
																"nodeType": "YulFunctionCall",
																"src": "990:41:6"
															},
															"nativeSrc": "990:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "990:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "850:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "914:9:6",
														"nodeType": "YulTypedName",
														"src": "914:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "925:6:6",
														"nodeType": "YulTypedName",
														"src": "925:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "936:4:6",
														"nodeType": "YulTypedName",
														"src": "936:4:6",
														"type": ""
													}
												],
												"src": "850:187:6"
											},
											{
												"body": {
													"nativeSrc": "1147:510:6",
													"nodeType": "YulBlock",
													"src": "1147:510:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1193:16:6",
																"nodeType": "YulBlock",
																"src": "1193:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1202:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1202:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1205:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1205:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1195:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1195:6:6"
																			},
																			"nativeSrc": "1195:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1195:12:6"
																		},
																		"nativeSrc": "1195:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1195:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1168:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1168:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1177:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1177:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1164:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1164:3:6"
																		},
																		"nativeSrc": "1164:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1164:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1189:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1189:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1160:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1160:3:6"
																},
																"nativeSrc": "1160:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1160:32:6"
															},
															"nativeSrc": "1157:52:6",
															"nodeType": "YulIf",
															"src": "1157:52:6"
														},
														{
															"nativeSrc": "1218:37:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1218:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1245:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1232:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1232:12:6"
																},
																"nativeSrc": "1232:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1232:23:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1222:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1222:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1264:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1274:18:6",
																"nodeType": "YulLiteral",
																"src": "1274:18:6",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1268:2:6",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1319:16:6",
																"nodeType": "YulBlock",
																"src": "1319:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1328:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1331:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1321:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:6"
																			},
																			"nativeSrc": "1321:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:6"
																		},
																		"nativeSrc": "1321:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1307:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1315:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1304:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:6"
																},
																"nativeSrc": "1304:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1304:14:6"
															},
															"nativeSrc": "1301:34:6",
															"nodeType": "YulIf",
															"src": "1301:34:6"
														},
														{
															"nativeSrc": "1344:32:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1344:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1358:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1358:9:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1369:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1369:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1354:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:6"
																},
																"nativeSrc": "1354:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1354:22:6"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "1348:2:6",
																	"nodeType": "YulTypedName",
																	"src": "1348:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1424:16:6",
																"nodeType": "YulBlock",
																"src": "1424:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1433:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1433:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1436:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1436:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1426:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1426:6:6"
																			},
																			"nativeSrc": "1426:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1426:12:6"
																		},
																		"nativeSrc": "1426:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1426:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1403:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "1403:2:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1407:4:6",
																						"nodeType": "YulLiteral",
																						"src": "1407:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1399:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1399:3:6"
																				},
																				"nativeSrc": "1399:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1399:13:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1414:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1414:7:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1395:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1395:3:6"
																		},
																		"nativeSrc": "1395:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1395:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1388:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1388:6:6"
																},
																"nativeSrc": "1388:35:6",
																"nodeType": "YulFunctionCall",
																"src": "1388:35:6"
															},
															"nativeSrc": "1385:55:6",
															"nodeType": "YulIf",
															"src": "1385:55:6"
														},
														{
															"nativeSrc": "1449:30:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1449:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "1476:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1476:2:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1463:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1463:12:6"
																},
																"nativeSrc": "1463:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1463:16:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1453:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1453:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1506:16:6",
																"nodeType": "YulBlock",
																"src": "1506:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1515:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1515:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1518:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1518:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1508:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1508:6:6"
																			},
																			"nativeSrc": "1508:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1508:12:6"
																		},
																		"nativeSrc": "1508:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1508:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1494:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1494:6:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1502:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1502:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1491:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1491:2:6"
																},
																"nativeSrc": "1491:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1491:14:6"
															},
															"nativeSrc": "1488:34:6",
															"nodeType": "YulIf",
															"src": "1488:34:6"
														},
														{
															"body": {
																"nativeSrc": "1580:16:6",
																"nodeType": "YulBlock",
																"src": "1580:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1589:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1592:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1592:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1582:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1582:6:6"
																			},
																			"nativeSrc": "1582:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1582:12:6"
																		},
																		"nativeSrc": "1582:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1582:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1545:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "1545:2:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1553:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1553:1:6",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "1556:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "1556:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1549:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1549:3:6"
																						},
																						"nativeSrc": "1549:14:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1549:14:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:6"
																				},
																				"nativeSrc": "1541:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:23:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1566:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1566:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1537:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1537:3:6"
																		},
																		"nativeSrc": "1537:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1537:32:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1571:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1571:7:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1534:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1534:2:6"
																},
																"nativeSrc": "1534:45:6",
																"nodeType": "YulFunctionCall",
																"src": "1534:45:6"
															},
															"nativeSrc": "1531:65:6",
															"nodeType": "YulIf",
															"src": "1531:65:6"
														},
														{
															"nativeSrc": "1605:21:6",
															"nodeType": "YulAssignment",
															"src": "1605:21:6",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "1619:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1619:2:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1623:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1623:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1615:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1615:3:6"
																},
																"nativeSrc": "1615:11:6",
																"nodeType": "YulFunctionCall",
																"src": "1615:11:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1605:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1605:6:6"
																}
															]
														},
														{
															"nativeSrc": "1635:16:6",
															"nodeType": "YulAssignment",
															"src": "1635:16:6",
															"value": {
																"name": "length",
																"nativeSrc": "1645:6:6",
																"nodeType": "YulIdentifier",
																"src": "1645:6:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1635:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1635:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "1042:615:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1105:9:6",
														"nodeType": "YulTypedName",
														"src": "1105:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1116:7:6",
														"nodeType": "YulTypedName",
														"src": "1116:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1128:6:6",
														"nodeType": "YulTypedName",
														"src": "1128:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1136:6:6",
														"nodeType": "YulTypedName",
														"src": "1136:6:6",
														"type": ""
													}
												],
												"src": "1042:615:6"
											},
											{
												"body": {
													"nativeSrc": "1763:76:6",
													"nodeType": "YulBlock",
													"src": "1763:76:6",
													"statements": [
														{
															"nativeSrc": "1773:26:6",
															"nodeType": "YulAssignment",
															"src": "1773:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1785:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1785:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1796:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1796:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1781:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1781:3:6"
																},
																"nativeSrc": "1781:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1781:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1773:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1773:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1815:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1815:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1826:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1826:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1808:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:6"
																},
																"nativeSrc": "1808:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1808:25:6"
															},
															"nativeSrc": "1808:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "1808:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1662:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1732:9:6",
														"nodeType": "YulTypedName",
														"src": "1732:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1743:6:6",
														"nodeType": "YulTypedName",
														"src": "1743:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1754:4:6",
														"nodeType": "YulTypedName",
														"src": "1754:4:6",
														"type": ""
													}
												],
												"src": "1662:177:6"
											},
											{
												"body": {
													"nativeSrc": "1931:167:6",
													"nodeType": "YulBlock",
													"src": "1931:167:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1977:16:6",
																"nodeType": "YulBlock",
																"src": "1977:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1986:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1986:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1989:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1989:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1979:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1979:6:6"
																			},
																			"nativeSrc": "1979:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1979:12:6"
																		},
																		"nativeSrc": "1979:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1979:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1952:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1952:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1961:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1961:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1948:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1948:3:6"
																		},
																		"nativeSrc": "1948:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1948:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1973:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1973:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1944:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1944:3:6"
																},
																"nativeSrc": "1944:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1944:32:6"
															},
															"nativeSrc": "1941:52:6",
															"nodeType": "YulIf",
															"src": "1941:52:6"
														},
														{
															"nativeSrc": "2002:39:6",
															"nodeType": "YulAssignment",
															"src": "2002:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2031:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2031:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2012:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2012:18:6"
																},
																"nativeSrc": "2012:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2012:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2002:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2002:6:6"
																}
															]
														},
														{
															"nativeSrc": "2050:42:6",
															"nodeType": "YulAssignment",
															"src": "2050:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2077:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2077:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2088:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2088:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2073:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2073:3:6"
																		},
																		"nativeSrc": "2073:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2073:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2060:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2060:12:6"
																},
																"nativeSrc": "2060:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2060:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2050:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2050:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1844:254:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1889:9:6",
														"nodeType": "YulTypedName",
														"src": "1889:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1900:7:6",
														"nodeType": "YulTypedName",
														"src": "1900:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1912:6:6",
														"nodeType": "YulTypedName",
														"src": "1912:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1920:6:6",
														"nodeType": "YulTypedName",
														"src": "1920:6:6",
														"type": ""
													}
												],
												"src": "1844:254:6"
											},
											{
												"body": {
													"nativeSrc": "2232:102:6",
													"nodeType": "YulBlock",
													"src": "2232:102:6",
													"statements": [
														{
															"nativeSrc": "2242:26:6",
															"nodeType": "YulAssignment",
															"src": "2242:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2254:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2254:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2265:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2265:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2250:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2250:3:6"
																},
																"nativeSrc": "2250:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2250:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2242:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2242:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2284:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2284:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2299:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2299:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2315:3:6",
																								"nodeType": "YulLiteral",
																								"src": "2315:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2320:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2320:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2311:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2311:3:6"
																						},
																						"nativeSrc": "2311:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2311:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2324:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2324:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2307:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2307:3:6"
																				},
																				"nativeSrc": "2307:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2307:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2295:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2295:3:6"
																		},
																		"nativeSrc": "2295:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2295:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2277:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2277:6:6"
																},
																"nativeSrc": "2277:51:6",
																"nodeType": "YulFunctionCall",
																"src": "2277:51:6"
															},
															"nativeSrc": "2277:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "2277:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IFairLaunchFactoryV1_$491__to_t_address__fromStack_reversed",
												"nativeSrc": "2103:231:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2201:9:6",
														"nodeType": "YulTypedName",
														"src": "2201:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2212:6:6",
														"nodeType": "YulTypedName",
														"src": "2212:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2223:4:6",
														"nodeType": "YulTypedName",
														"src": "2223:4:6",
														"type": ""
													}
												],
												"src": "2103:231:6"
											},
											{
												"body": {
													"nativeSrc": "2409:116:6",
													"nodeType": "YulBlock",
													"src": "2409:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2455:16:6",
																"nodeType": "YulBlock",
																"src": "2455:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2464:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2464:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2467:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2467:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2457:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2457:6:6"
																			},
																			"nativeSrc": "2457:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2457:12:6"
																		},
																		"nativeSrc": "2457:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2457:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2430:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2430:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2439:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2439:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2426:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2426:3:6"
																		},
																		"nativeSrc": "2426:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2426:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2451:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2451:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2422:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2422:3:6"
																},
																"nativeSrc": "2422:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2422:32:6"
															},
															"nativeSrc": "2419:52:6",
															"nodeType": "YulIf",
															"src": "2419:52:6"
														},
														{
															"nativeSrc": "2480:39:6",
															"nodeType": "YulAssignment",
															"src": "2480:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2509:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2509:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2490:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2490:18:6"
																},
																"nativeSrc": "2490:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2490:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2480:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2480:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2339:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2375:9:6",
														"nodeType": "YulTypedName",
														"src": "2375:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2386:7:6",
														"nodeType": "YulTypedName",
														"src": "2386:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2398:6:6",
														"nodeType": "YulTypedName",
														"src": "2398:6:6",
														"type": ""
													}
												],
												"src": "2339:186:6"
											},
											{
												"body": {
													"nativeSrc": "2737:266:6",
													"nodeType": "YulBlock",
													"src": "2737:266:6",
													"statements": [
														{
															"nativeSrc": "2747:27:6",
															"nodeType": "YulAssignment",
															"src": "2747:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2759:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2759:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2770:3:6",
																		"nodeType": "YulLiteral",
																		"src": "2770:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2755:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2755:3:6"
																},
																"nativeSrc": "2755:19:6",
																"nodeType": "YulFunctionCall",
																"src": "2755:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2747:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2747:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2790:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2790:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2801:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2801:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2783:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2783:6:6"
																},
																"nativeSrc": "2783:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2783:25:6"
															},
															"nativeSrc": "2783:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "2783:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2828:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2828:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2839:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2839:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2824:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2824:3:6"
																		},
																		"nativeSrc": "2824:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2824:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2844:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2844:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2817:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2817:6:6"
																},
																"nativeSrc": "2817:34:6",
																"nodeType": "YulFunctionCall",
																"src": "2817:34:6"
															},
															"nativeSrc": "2817:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "2817:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2871:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2871:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2882:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2882:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2867:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2867:3:6"
																		},
																		"nativeSrc": "2867:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2867:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "2887:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2887:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2860:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:6"
																},
																"nativeSrc": "2860:34:6",
																"nodeType": "YulFunctionCall",
																"src": "2860:34:6"
															},
															"nativeSrc": "2860:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "2860:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2914:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2914:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2925:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2925:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2910:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2910:3:6"
																		},
																		"nativeSrc": "2910:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2910:18:6"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "2930:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2930:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2903:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2903:6:6"
																},
																"nativeSrc": "2903:34:6",
																"nodeType": "YulFunctionCall",
																"src": "2903:34:6"
															},
															"nativeSrc": "2903:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "2903:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2957:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2957:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2968:3:6",
																				"nodeType": "YulLiteral",
																				"src": "2968:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2953:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2953:3:6"
																		},
																		"nativeSrc": "2953:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2953:19:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nativeSrc": "2988:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2988:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2981:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2981:6:6"
																				},
																				"nativeSrc": "2981:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2981:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2974:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2974:6:6"
																		},
																		"nativeSrc": "2974:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2974:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2946:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2946:6:6"
																},
																"nativeSrc": "2946:51:6",
																"nodeType": "YulFunctionCall",
																"src": "2946:51:6"
															},
															"nativeSrc": "2946:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "2946:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "2530:473:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2674:9:6",
														"nodeType": "YulTypedName",
														"src": "2674:9:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2685:6:6",
														"nodeType": "YulTypedName",
														"src": "2685:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2693:6:6",
														"nodeType": "YulTypedName",
														"src": "2693:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2701:6:6",
														"nodeType": "YulTypedName",
														"src": "2701:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2709:6:6",
														"nodeType": "YulTypedName",
														"src": "2709:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2717:6:6",
														"nodeType": "YulTypedName",
														"src": "2717:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2728:4:6",
														"nodeType": "YulTypedName",
														"src": "2728:4:6",
														"type": ""
													}
												],
												"src": "2530:473:6"
											},
											{
												"body": {
													"nativeSrc": "3182:234:6",
													"nodeType": "YulBlock",
													"src": "3182:234:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3199:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3199:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3210:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3192:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3192:6:6"
																},
																"nativeSrc": "3192:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3192:21:6"
															},
															"nativeSrc": "3192:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3192:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3233:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3233:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3244:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3244:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3229:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3229:3:6"
																		},
																		"nativeSrc": "3229:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3229:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3249:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3249:2:6",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3222:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3222:6:6"
																},
																"nativeSrc": "3222:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3222:30:6"
															},
															"nativeSrc": "3222:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3222:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3272:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3272:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3283:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3283:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3268:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3268:3:6"
																		},
																		"nativeSrc": "3268:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3268:18:6"
																	},
																	{
																		"hexValue": "4f6e6c79206d756c746953696720616464726573732063616e2063616c6c2074",
																		"kind": "string",
																		"nativeSrc": "3288:34:6",
																		"nodeType": "YulLiteral",
																		"src": "3288:34:6",
																		"type": "",
																		"value": "Only multiSig address can call t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3261:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3261:6:6"
																},
																"nativeSrc": "3261:62:6",
																"nodeType": "YulFunctionCall",
																"src": "3261:62:6"
															},
															"nativeSrc": "3261:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "3261:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3343:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3343:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3354:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3354:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3339:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3339:3:6"
																		},
																		"nativeSrc": "3339:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3339:18:6"
																	},
																	{
																		"hexValue": "6869732066756e6374696f6e",
																		"kind": "string",
																		"nativeSrc": "3359:14:6",
																		"nodeType": "YulLiteral",
																		"src": "3359:14:6",
																		"type": "",
																		"value": "his function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3332:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3332:6:6"
																},
																"nativeSrc": "3332:42:6",
																"nodeType": "YulFunctionCall",
																"src": "3332:42:6"
															},
															"nativeSrc": "3332:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "3332:42:6"
														},
														{
															"nativeSrc": "3383:27:6",
															"nodeType": "YulAssignment",
															"src": "3383:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3395:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3395:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3406:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3406:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3391:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3391:3:6"
																},
																"nativeSrc": "3391:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3391:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3383:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3383:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a89e8792d12ab2935107c47df3d6e37408b35c7947605d9909710024cead9a50__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3008:408:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3159:9:6",
														"nodeType": "YulTypedName",
														"src": "3159:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3173:4:6",
														"nodeType": "YulTypedName",
														"src": "3173:4:6",
														"type": ""
													}
												],
												"src": "3008:408:6"
											},
											{
												"body": {
													"nativeSrc": "3595:182:6",
													"nodeType": "YulBlock",
													"src": "3595:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3612:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3612:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3623:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3623:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3605:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3605:6:6"
																},
																"nativeSrc": "3605:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3605:21:6"
															},
															"nativeSrc": "3605:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3605:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3646:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3646:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3657:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3657:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3642:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3642:3:6"
																		},
																		"nativeSrc": "3642:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3642:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3662:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3662:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3635:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3635:6:6"
																},
																"nativeSrc": "3635:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3635:30:6"
															},
															"nativeSrc": "3635:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3635:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3685:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3685:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3696:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3696:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3681:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3681:3:6"
																		},
																		"nativeSrc": "3681:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3681:18:6"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "3701:34:6",
																		"nodeType": "YulLiteral",
																		"src": "3701:34:6",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3674:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3674:6:6"
																},
																"nativeSrc": "3674:62:6",
																"nodeType": "YulFunctionCall",
																"src": "3674:62:6"
															},
															"nativeSrc": "3674:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "3674:62:6"
														},
														{
															"nativeSrc": "3745:26:6",
															"nodeType": "YulAssignment",
															"src": "3745:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3757:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3757:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3768:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3768:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3753:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3753:3:6"
																},
																"nativeSrc": "3753:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3753:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3745:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3745:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3421:356:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3572:9:6",
														"nodeType": "YulTypedName",
														"src": "3572:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3586:4:6",
														"nodeType": "YulTypedName",
														"src": "3586:4:6",
														"type": ""
													}
												],
												"src": "3421:356:6"
											},
											{
												"body": {
													"nativeSrc": "3939:218:6",
													"nodeType": "YulBlock",
													"src": "3939:218:6",
													"statements": [
														{
															"nativeSrc": "3949:26:6",
															"nodeType": "YulAssignment",
															"src": "3949:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3961:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3961:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3972:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3972:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3957:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3957:3:6"
																},
																"nativeSrc": "3957:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3957:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3949:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3949:4:6"
																}
															]
														},
														{
															"nativeSrc": "3984:29:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3984:29:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4002:3:6",
																				"nodeType": "YulLiteral",
																				"src": "4002:3:6",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4007:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4007:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3998:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:6"
																		},
																		"nativeSrc": "3998:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3998:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4011:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4011:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3994:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3994:3:6"
																},
																"nativeSrc": "3994:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3994:19:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3988:2:6",
																	"nodeType": "YulTypedName",
																	"src": "3988:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4044:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4044:6:6"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4052:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "4052:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4040:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4040:3:6"
																		},
																		"nativeSrc": "4040:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4040:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4022:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4022:6:6"
																},
																"nativeSrc": "4022:34:6",
																"nodeType": "YulFunctionCall",
																"src": "4022:34:6"
															},
															"nativeSrc": "4022:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "4022:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4076:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4076:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4087:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4087:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4072:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4072:3:6"
																		},
																		"nativeSrc": "4072:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4072:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "4096:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4096:6:6"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4104:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "4104:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4092:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4092:3:6"
																		},
																		"nativeSrc": "4092:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4092:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4065:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4065:6:6"
																},
																"nativeSrc": "4065:43:6",
																"nodeType": "YulFunctionCall",
																"src": "4065:43:6"
															},
															"nativeSrc": "4065:43:6",
															"nodeType": "YulExpressionStatement",
															"src": "4065:43:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4128:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4128:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4139:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4139:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4124:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4124:3:6"
																		},
																		"nativeSrc": "4124:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4124:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4144:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4144:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4117:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4117:6:6"
																},
																"nativeSrc": "4117:34:6",
																"nodeType": "YulFunctionCall",
																"src": "4117:34:6"
															},
															"nativeSrc": "4117:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "4117:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3782:375:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3892:9:6",
														"nodeType": "YulTypedName",
														"src": "3892:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3903:6:6",
														"nodeType": "YulTypedName",
														"src": "3903:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3911:6:6",
														"nodeType": "YulTypedName",
														"src": "3911:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3919:6:6",
														"nodeType": "YulTypedName",
														"src": "3919:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3930:4:6",
														"nodeType": "YulTypedName",
														"src": "3930:4:6",
														"type": ""
													}
												],
												"src": "3782:375:6"
											},
											{
												"body": {
													"nativeSrc": "4240:199:6",
													"nodeType": "YulBlock",
													"src": "4240:199:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4286:16:6",
																"nodeType": "YulBlock",
																"src": "4286:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4295:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4295:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4298:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4298:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4288:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4288:6:6"
																			},
																			"nativeSrc": "4288:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4288:12:6"
																		},
																		"nativeSrc": "4288:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4288:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4261:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4261:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4270:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4270:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4257:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4257:3:6"
																		},
																		"nativeSrc": "4257:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4257:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4282:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4282:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4253:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4253:3:6"
																},
																"nativeSrc": "4253:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4253:32:6"
															},
															"nativeSrc": "4250:52:6",
															"nodeType": "YulIf",
															"src": "4250:52:6"
														},
														{
															"nativeSrc": "4311:29:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4311:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4330:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4330:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4324:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4324:5:6"
																},
																"nativeSrc": "4324:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4324:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4315:5:6",
																	"nodeType": "YulTypedName",
																	"src": "4315:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4393:16:6",
																"nodeType": "YulBlock",
																"src": "4393:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4402:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4402:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4405:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4405:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4395:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4395:6:6"
																			},
																			"nativeSrc": "4395:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4395:12:6"
																		},
																		"nativeSrc": "4395:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4395:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4362:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4362:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "4383:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "4383:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "4376:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "4376:6:6"
																						},
																						"nativeSrc": "4376:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4376:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4369:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4369:6:6"
																				},
																				"nativeSrc": "4369:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4369:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4359:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4359:2:6"
																		},
																		"nativeSrc": "4359:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4359:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4352:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4352:6:6"
																},
																"nativeSrc": "4352:40:6",
																"nodeType": "YulFunctionCall",
																"src": "4352:40:6"
															},
															"nativeSrc": "4349:60:6",
															"nodeType": "YulIf",
															"src": "4349:60:6"
														},
														{
															"nativeSrc": "4418:15:6",
															"nodeType": "YulAssignment",
															"src": "4418:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "4428:5:6",
																"nodeType": "YulIdentifier",
																"src": "4428:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4418:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "4162:277:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4206:9:6",
														"nodeType": "YulTypedName",
														"src": "4206:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4217:7:6",
														"nodeType": "YulTypedName",
														"src": "4217:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4229:6:6",
														"nodeType": "YulTypedName",
														"src": "4229:6:6",
														"type": ""
													}
												],
												"src": "4162:277:6"
											},
											{
												"body": {
													"nativeSrc": "4618:165:6",
													"nodeType": "YulBlock",
													"src": "4618:165:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4635:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4635:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4646:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4646:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4628:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4628:6:6"
																},
																"nativeSrc": "4628:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4628:21:6"
															},
															"nativeSrc": "4628:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4628:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4669:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4669:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4680:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4680:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4665:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4665:3:6"
																		},
																		"nativeSrc": "4665:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4665:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4685:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4685:2:6",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4658:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4658:6:6"
																},
																"nativeSrc": "4658:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4658:30:6"
															},
															"nativeSrc": "4658:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4658:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4708:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4708:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4719:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4719:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4704:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4704:3:6"
																		},
																		"nativeSrc": "4704:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4704:18:6"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "4724:17:6",
																		"nodeType": "YulLiteral",
																		"src": "4724:17:6",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4697:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4697:6:6"
																},
																"nativeSrc": "4697:45:6",
																"nodeType": "YulFunctionCall",
																"src": "4697:45:6"
															},
															"nativeSrc": "4697:45:6",
															"nodeType": "YulExpressionStatement",
															"src": "4697:45:6"
														},
														{
															"nativeSrc": "4751:26:6",
															"nodeType": "YulAssignment",
															"src": "4751:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4763:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4763:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4774:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4774:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4759:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4759:3:6"
																},
																"nativeSrc": "4759:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4759:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4751:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4751:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4444:339:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4595:9:6",
														"nodeType": "YulTypedName",
														"src": "4595:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4609:4:6",
														"nodeType": "YulTypedName",
														"src": "4609:4:6",
														"type": ""
													}
												],
												"src": "4444:339:6"
											},
											{
												"body": {
													"nativeSrc": "4820:95:6",
													"nodeType": "YulBlock",
													"src": "4820:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4837:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4837:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4844:3:6",
																				"nodeType": "YulLiteral",
																				"src": "4844:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4849:10:6",
																				"nodeType": "YulLiteral",
																				"src": "4849:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4840:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:6"
																		},
																		"nativeSrc": "4840:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4840:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4830:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4830:6:6"
																},
																"nativeSrc": "4830:31:6",
																"nodeType": "YulFunctionCall",
																"src": "4830:31:6"
															},
															"nativeSrc": "4830:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "4830:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4877:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4877:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4880:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4880:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4870:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4870:6:6"
																},
																"nativeSrc": "4870:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4870:15:6"
															},
															"nativeSrc": "4870:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4870:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4901:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4901:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4904:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4904:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4894:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4894:6:6"
																},
																"nativeSrc": "4894:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4894:15:6"
															},
															"nativeSrc": "4894:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4894:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4788:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4788:127:6"
											},
											{
												"body": {
													"nativeSrc": "4968:77:6",
													"nodeType": "YulBlock",
													"src": "4968:77:6",
													"statements": [
														{
															"nativeSrc": "4978:16:6",
															"nodeType": "YulAssignment",
															"src": "4978:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4989:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4989:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4992:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4992:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4985:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4985:3:6"
																},
																"nativeSrc": "4985:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4985:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4978:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4978:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5017:22:6",
																"nodeType": "YulBlock",
																"src": "5017:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5019:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5019:16:6"
																			},
																			"nativeSrc": "5019:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5019:18:6"
																		},
																		"nativeSrc": "5019:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5019:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5009:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5009:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5012:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5012:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5006:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5006:2:6"
																},
																"nativeSrc": "5006:10:6",
																"nodeType": "YulFunctionCall",
																"src": "5006:10:6"
															},
															"nativeSrc": "5003:36:6",
															"nodeType": "YulIf",
															"src": "5003:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4920:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4951:1:6",
														"nodeType": "YulTypedName",
														"src": "4951:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4954:1:6",
														"nodeType": "YulTypedName",
														"src": "4954:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4960:3:6",
														"nodeType": "YulTypedName",
														"src": "4960:3:6",
														"type": ""
													}
												],
												"src": "4920:125:6"
											},
											{
												"body": {
													"nativeSrc": "5179:119:6",
													"nodeType": "YulBlock",
													"src": "5179:119:6",
													"statements": [
														{
															"nativeSrc": "5189:26:6",
															"nodeType": "YulAssignment",
															"src": "5189:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5201:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5201:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5212:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5212:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5197:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5197:3:6"
																},
																"nativeSrc": "5197:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5197:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5189:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5189:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5231:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5231:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5242:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5242:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5224:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5224:6:6"
																},
																"nativeSrc": "5224:25:6",
																"nodeType": "YulFunctionCall",
																"src": "5224:25:6"
															},
															"nativeSrc": "5224:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "5224:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5269:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5269:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5280:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5280:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5265:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5265:3:6"
																		},
																		"nativeSrc": "5265:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5265:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5285:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5285:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5258:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5258:6:6"
																},
																"nativeSrc": "5258:34:6",
																"nodeType": "YulFunctionCall",
																"src": "5258:34:6"
															},
															"nativeSrc": "5258:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "5258:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5050:248:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5140:9:6",
														"nodeType": "YulTypedName",
														"src": "5140:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5151:6:6",
														"nodeType": "YulTypedName",
														"src": "5151:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5159:6:6",
														"nodeType": "YulTypedName",
														"src": "5159:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5170:4:6",
														"nodeType": "YulTypedName",
														"src": "5170:4:6",
														"type": ""
													}
												],
												"src": "5050:248:6"
											},
											{
												"body": {
													"nativeSrc": "5335:95:6",
													"nodeType": "YulBlock",
													"src": "5335:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5352:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5352:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5359:3:6",
																				"nodeType": "YulLiteral",
																				"src": "5359:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5364:10:6",
																				"nodeType": "YulLiteral",
																				"src": "5364:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5355:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5355:3:6"
																		},
																		"nativeSrc": "5355:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5355:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5345:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5345:6:6"
																},
																"nativeSrc": "5345:31:6",
																"nodeType": "YulFunctionCall",
																"src": "5345:31:6"
															},
															"nativeSrc": "5345:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "5345:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5392:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5392:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5395:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5395:4:6",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5385:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5385:6:6"
																},
																"nativeSrc": "5385:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5385:15:6"
															},
															"nativeSrc": "5385:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5385:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5416:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5416:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5419:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5419:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5409:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5409:6:6"
																},
																"nativeSrc": "5409:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5409:15:6"
															},
															"nativeSrc": "5409:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5409:15:6"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "5303:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5303:127:6"
											},
											{
												"body": {
													"nativeSrc": "5564:145:6",
													"nodeType": "YulBlock",
													"src": "5564:145:6",
													"statements": [
														{
															"nativeSrc": "5574:26:6",
															"nodeType": "YulAssignment",
															"src": "5574:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5586:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5586:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5597:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5597:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5582:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5582:3:6"
																},
																"nativeSrc": "5582:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5582:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5574:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5574:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5616:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5616:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5631:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5631:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5647:3:6",
																								"nodeType": "YulLiteral",
																								"src": "5647:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5652:1:6",
																								"nodeType": "YulLiteral",
																								"src": "5652:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5643:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "5643:3:6"
																						},
																						"nativeSrc": "5643:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "5643:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5656:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5656:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5639:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5639:3:6"
																				},
																				"nativeSrc": "5639:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5639:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5627:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5627:3:6"
																		},
																		"nativeSrc": "5627:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5627:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5609:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5609:6:6"
																},
																"nativeSrc": "5609:51:6",
																"nodeType": "YulFunctionCall",
																"src": "5609:51:6"
															},
															"nativeSrc": "5609:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "5609:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5680:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5680:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5691:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5691:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5676:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5676:3:6"
																		},
																		"nativeSrc": "5676:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5676:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5696:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5696:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5669:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5669:6:6"
																},
																"nativeSrc": "5669:34:6",
																"nodeType": "YulFunctionCall",
																"src": "5669:34:6"
															},
															"nativeSrc": "5669:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "5669:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5435:274:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5525:9:6",
														"nodeType": "YulTypedName",
														"src": "5525:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5536:6:6",
														"nodeType": "YulTypedName",
														"src": "5536:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5544:6:6",
														"nodeType": "YulTypedName",
														"src": "5544:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5555:4:6",
														"nodeType": "YulTypedName",
														"src": "5555:4:6",
														"type": ""
													}
												],
												"src": "5435:274:6"
											},
											{
												"body": {
													"nativeSrc": "5795:103:6",
													"nodeType": "YulBlock",
													"src": "5795:103:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5841:16:6",
																"nodeType": "YulBlock",
																"src": "5841:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5850:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5850:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5853:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5853:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5843:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5843:6:6"
																			},
																			"nativeSrc": "5843:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5843:12:6"
																		},
																		"nativeSrc": "5843:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5843:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5816:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5816:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5825:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5825:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5812:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5812:3:6"
																		},
																		"nativeSrc": "5812:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5812:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5837:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5837:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5808:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5808:3:6"
																},
																"nativeSrc": "5808:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5808:32:6"
															},
															"nativeSrc": "5805:52:6",
															"nodeType": "YulIf",
															"src": "5805:52:6"
														},
														{
															"nativeSrc": "5866:26:6",
															"nodeType": "YulAssignment",
															"src": "5866:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5882:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5882:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5876:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5876:5:6"
																},
																"nativeSrc": "5876:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5876:16:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5866:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5866:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "5714:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5761:9:6",
														"nodeType": "YulTypedName",
														"src": "5761:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5772:7:6",
														"nodeType": "YulTypedName",
														"src": "5772:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5784:6:6",
														"nodeType": "YulTypedName",
														"src": "5784:6:6",
														"type": ""
													}
												],
												"src": "5714:184:6"
											},
											{
												"body": {
													"nativeSrc": "6077:164:6",
													"nodeType": "YulBlock",
													"src": "6077:164:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6094:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6105:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6087:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6087:6:6"
																},
																"nativeSrc": "6087:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6087:21:6"
															},
															"nativeSrc": "6087:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6087:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6128:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6128:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6139:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6139:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6124:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6124:3:6"
																		},
																		"nativeSrc": "6124:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6124:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6144:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6144:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6117:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6117:6:6"
																},
																"nativeSrc": "6117:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6117:30:6"
															},
															"nativeSrc": "6117:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6117:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6167:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6167:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6178:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6178:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6163:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6163:3:6"
																		},
																		"nativeSrc": "6163:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6163:18:6"
																	},
																	{
																		"hexValue": "4e6f207374616b6520666f756e64",
																		"kind": "string",
																		"nativeSrc": "6183:16:6",
																		"nodeType": "YulLiteral",
																		"src": "6183:16:6",
																		"type": "",
																		"value": "No stake found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6156:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6156:6:6"
																},
																"nativeSrc": "6156:44:6",
																"nodeType": "YulFunctionCall",
																"src": "6156:44:6"
															},
															"nativeSrc": "6156:44:6",
															"nodeType": "YulExpressionStatement",
															"src": "6156:44:6"
														},
														{
															"nativeSrc": "6209:26:6",
															"nodeType": "YulAssignment",
															"src": "6209:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6221:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6221:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6232:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6232:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6217:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:6"
																},
																"nativeSrc": "6217:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6217:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6209:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6209:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5903:338:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6054:9:6",
														"nodeType": "YulTypedName",
														"src": "6054:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6068:4:6",
														"nodeType": "YulTypedName",
														"src": "6068:4:6",
														"type": ""
													}
												],
												"src": "5903:338:6"
											},
											{
												"body": {
													"nativeSrc": "6420:173:6",
													"nodeType": "YulBlock",
													"src": "6420:173:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6437:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6437:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6448:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6448:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6430:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6430:6:6"
																},
																"nativeSrc": "6430:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6430:21:6"
															},
															"nativeSrc": "6430:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6430:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6471:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6471:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6482:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6482:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6467:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6467:3:6"
																		},
																		"nativeSrc": "6467:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6467:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6487:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6487:2:6",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6460:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6460:6:6"
																},
																"nativeSrc": "6460:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6460:30:6"
															},
															"nativeSrc": "6460:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6460:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6510:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6510:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6521:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6521:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6506:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6506:3:6"
																		},
																		"nativeSrc": "6506:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6506:18:6"
																	},
																	{
																		"hexValue": "5374616b6520616c72656164792077697468647261776e",
																		"kind": "string",
																		"nativeSrc": "6526:25:6",
																		"nodeType": "YulLiteral",
																		"src": "6526:25:6",
																		"type": "",
																		"value": "Stake already withdrawn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6499:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6499:6:6"
																},
																"nativeSrc": "6499:53:6",
																"nodeType": "YulFunctionCall",
																"src": "6499:53:6"
															},
															"nativeSrc": "6499:53:6",
															"nodeType": "YulExpressionStatement",
															"src": "6499:53:6"
														},
														{
															"nativeSrc": "6561:26:6",
															"nodeType": "YulAssignment",
															"src": "6561:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6573:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6573:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6584:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6584:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6569:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6569:3:6"
																},
																"nativeSrc": "6569:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6569:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6561:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6561:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_644e8db99e7c305cbaf9ab7cf4dfbbf8e9d24808e86a7c505456e21dd10275ce__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6246:347:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6397:9:6",
														"nodeType": "YulTypedName",
														"src": "6397:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6411:4:6",
														"nodeType": "YulTypedName",
														"src": "6411:4:6",
														"type": ""
													}
												],
												"src": "6246:347:6"
											},
											{
												"body": {
													"nativeSrc": "6647:79:6",
													"nodeType": "YulBlock",
													"src": "6647:79:6",
													"statements": [
														{
															"nativeSrc": "6657:17:6",
															"nodeType": "YulAssignment",
															"src": "6657:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6669:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6669:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6672:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6672:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6665:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6665:3:6"
																},
																"nativeSrc": "6665:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6665:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6657:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6657:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6698:22:6",
																"nodeType": "YulBlock",
																"src": "6698:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6700:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6700:16:6"
																			},
																			"nativeSrc": "6700:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6700:18:6"
																		},
																		"nativeSrc": "6700:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6700:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6689:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6689:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6695:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6695:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6686:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6686:2:6"
																},
																"nativeSrc": "6686:11:6",
																"nodeType": "YulFunctionCall",
																"src": "6686:11:6"
															},
															"nativeSrc": "6683:37:6",
															"nodeType": "YulIf",
															"src": "6683:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6598:128:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6629:1:6",
														"nodeType": "YulTypedName",
														"src": "6629:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6632:1:6",
														"nodeType": "YulTypedName",
														"src": "6632:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6638:4:6",
														"nodeType": "YulTypedName",
														"src": "6638:4:6",
														"type": ""
													}
												],
												"src": "6598:128:6"
											},
											{
												"body": {
													"nativeSrc": "6777:171:6",
													"nodeType": "YulBlock",
													"src": "6777:171:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6808:111:6",
																"nodeType": "YulBlock",
																"src": "6808:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6829:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6829:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6836:3:6",
																							"nodeType": "YulLiteral",
																							"src": "6836:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6841:10:6",
																							"nodeType": "YulLiteral",
																							"src": "6841:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6832:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6832:3:6"
																					},
																					"nativeSrc": "6832:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6832:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6822:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6822:6:6"
																			},
																			"nativeSrc": "6822:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6822:31:6"
																		},
																		"nativeSrc": "6822:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6822:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6873:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6873:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6876:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6876:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6866:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6866:6:6"
																			},
																			"nativeSrc": "6866:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6866:15:6"
																		},
																		"nativeSrc": "6866:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6866:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6901:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6901:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6904:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6904:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6894:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6894:6:6"
																			},
																			"nativeSrc": "6894:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6894:15:6"
																		},
																		"nativeSrc": "6894:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6894:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6797:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6797:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6790:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6790:6:6"
																},
																"nativeSrc": "6790:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6790:9:6"
															},
															"nativeSrc": "6787:132:6",
															"nodeType": "YulIf",
															"src": "6787:132:6"
														},
														{
															"nativeSrc": "6928:14:6",
															"nodeType": "YulAssignment",
															"src": "6928:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6937:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6937:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6940:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6940:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6933:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6933:3:6"
																},
																"nativeSrc": "6933:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6933:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6928:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6928:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6731:217:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6762:1:6",
														"nodeType": "YulTypedName",
														"src": "6762:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6765:1:6",
														"nodeType": "YulTypedName",
														"src": "6765:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6771:1:6",
														"nodeType": "YulTypedName",
														"src": "6771:1:6",
														"type": ""
													}
												],
												"src": "6731:217:6"
											},
											{
												"body": {
													"nativeSrc": "7005:116:6",
													"nodeType": "YulBlock",
													"src": "7005:116:6",
													"statements": [
														{
															"nativeSrc": "7015:20:6",
															"nodeType": "YulAssignment",
															"src": "7015:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7030:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7030:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7033:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7033:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7026:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7026:3:6"
																},
																"nativeSrc": "7026:9:6",
																"nodeType": "YulFunctionCall",
																"src": "7026:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7015:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "7015:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7093:22:6",
																"nodeType": "YulBlock",
																"src": "7093:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7095:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7095:16:6"
																			},
																			"nativeSrc": "7095:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7095:18:6"
																		},
																		"nativeSrc": "7095:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7095:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7064:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7064:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7057:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "7057:6:6"
																				},
																				"nativeSrc": "7057:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7057:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7071:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7071:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7078:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "7078:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7087:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "7087:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7074:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "7074:3:6"
																						},
																						"nativeSrc": "7074:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "7074:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7068:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "7068:2:6"
																				},
																				"nativeSrc": "7068:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7068:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7054:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7054:2:6"
																		},
																		"nativeSrc": "7054:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7054:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7047:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7047:6:6"
																},
																"nativeSrc": "7047:45:6",
																"nodeType": "YulFunctionCall",
																"src": "7047:45:6"
															},
															"nativeSrc": "7044:71:6",
															"nodeType": "YulIf",
															"src": "7044:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6953:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6984:1:6",
														"nodeType": "YulTypedName",
														"src": "6984:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6987:1:6",
														"nodeType": "YulTypedName",
														"src": "6987:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6993:7:6",
														"nodeType": "YulTypedName",
														"src": "6993:7:6",
														"type": ""
													}
												],
												"src": "6953:168:6"
											},
											{
												"body": {
													"nativeSrc": "7300:181:6",
													"nodeType": "YulBlock",
													"src": "7300:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7317:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7317:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7328:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7328:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7310:6:6"
																},
																"nativeSrc": "7310:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7310:21:6"
															},
															"nativeSrc": "7310:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7310:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7351:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7351:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7362:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7362:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7347:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7347:3:6"
																		},
																		"nativeSrc": "7347:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7347:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7367:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7367:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7340:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7340:6:6"
																},
																"nativeSrc": "7340:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7340:30:6"
															},
															"nativeSrc": "7340:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7340:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7390:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7390:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7401:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7401:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7386:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7386:3:6"
																		},
																		"nativeSrc": "7386:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7386:18:6"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "7406:33:6",
																		"nodeType": "YulLiteral",
																		"src": "7406:33:6",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7379:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7379:6:6"
																},
																"nativeSrc": "7379:61:6",
																"nodeType": "YulFunctionCall",
																"src": "7379:61:6"
															},
															"nativeSrc": "7379:61:6",
															"nodeType": "YulExpressionStatement",
															"src": "7379:61:6"
														},
														{
															"nativeSrc": "7449:26:6",
															"nodeType": "YulAssignment",
															"src": "7449:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7461:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7461:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7472:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7472:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7457:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7457:3:6"
																},
																"nativeSrc": "7457:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7457:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7449:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7449:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7126:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7277:9:6",
														"nodeType": "YulTypedName",
														"src": "7277:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7291:4:6",
														"nodeType": "YulTypedName",
														"src": "7291:4:6",
														"type": ""
													}
												],
												"src": "7126:355:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IFairLaunchFactoryV1_$491__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_t_stringliteral_a89e8792d12ab2935107c47df3d6e37408b35c7947605d9909710024cead9a50__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Only multiSig address can call t\")\n        mstore(add(headStart, 96), \"his function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"No stake found\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_644e8db99e7c305cbaf9ab7cf4dfbbf8e9d24808e86a7c505456e21dd10275ce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Stake already withdrawn\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610111575f3560e01c80639b29d2151161009e578063a164959d1161006e578063a164959d1461023a578063acde65971461024d578063ad5a402b14610260578063c45a015514610269578063caf10b571461027c575f80fd5b80639b29d215146102025780639d76ea58146102155780639f8932f414610228578063a163beea14610231575f80fd5b806362d76d06116100e457806362d76d06146101aa5780636b036f45146101bd5780638167ee72146101d457806395adb5ad146101e7578063966dae0e146101ef575f80fd5b80630d29fcd4146101155780631516def71461012a57806341fee5571461015a578063609c878a1461016d575b5f80fd5b610128610123366004610bb9565b6102e5565b005b60025461013d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610128610168366004610bb9565b610328565b61019a61017b366004610beb565b600b60209081525f928352604080842090915290825290205460ff1681565b6040519015158152602001610151565b6101286101b8366004610c1c565b610524565b6101c660045481565b604051908152602001610151565b6101286101e2366004610c8b565b61072e565b610128610807565b60015461013d906001600160a01b031681565b610128610210366004610bb9565b610a53565b60035461013d906001600160a01b031681565b6101c660055481565b6101c660085481565b6101c6610248366004610beb565b610a8d565b61019a61025b366004610beb565b610af4565b6101c660075481565b60065461013d906001600160a01b031681565b6102bb61028a366004610cb3565b600a6020525f9081526040902080546001820154600283015460038401546004909401549293919290919060ff1685565b6040805195865260208601949094529284019190915260608301521515608082015260a001610151565b6002546001600160a01b031633146103185760405162461bcd60e51b815260040161030f90610cd3565b60405180910390fd5b5f8111610323575f80fd5b600455565b610330610b62565b6003546004546001600160a01b039091169082116103905760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161030f565b6001600160a01b0381166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303815f875af11580156103f0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104149190610d1f565b6104525760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161030f565b335f90815260096020526040902060020154610100900460ff1615610475575f80fd5b335f9081526009602052604081208054849290610493908490610d52565b9091555050335f90815260096020526040812043600190910155600780548492906104bf908490610d52565b92505081905550600160085f8282546104d89190610d52565b90915550506040805183815243602082015233917f0ae860169ef88b6e5a084a54675af932ac7be23de4abd34a1d99a5a8402a17cc910160405180910390a25061052160015f55565b50565b335f90815260096020526040902060020154610100900460ff16610546575f80fd5b61054e610b62565b5f5b818110156107205761058883838381811061056d5761056d610d65565b90506020020160208101906105829190610cb3565b33610af4565b610590575f80fd5b600b5f8484848181106105a5576105a5610d65565b90506020020160208101906105ba9190610cb3565b6001600160a01b0316815260208082019290925260409081015f90812033825290925290205460ff16156105ec575f80fd5b5f61061d84848481811061060257610602610d65565b90506020020160208101906106179190610cb3565b33610a8d565b90506001600b5f86868681811061063657610636610d65565b905060200201602081019061064b9190610cb3565b6001600160a01b0316815260208082019290925260409081015f9081203382529092529020805460ff191691151591909117905583838381811061069157610691610d65565b90506020020160208101906106a69190610cb3565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044016020604051808303815f875af11580156106f2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107169190610d1f565b5050600101610550565b5061072a60015f55565b5050565b610736610b62565b6040516370a0823160e01b815230600482015281906001600160a01b038416906370a0823190602401602060405180830381865afa15801561077a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061079e9190610d79565b146107a7575f80fd5b6001600160a01b0382165f908152600a602052604090206004015460ff16156107ce575f80fd5b6001600160a01b0382165f908152600a602052604090204360018201558181556002810182905560075460039091015561072a60015f55565b61080f610b62565b335f9081526009602052604090205461085b5760405162461bcd60e51b815260206004820152600e60248201526d139bc81cdd185ad948199bdd5b9960921b604482015260640161030f565b335f9081526009602052604090206002015460ff16156108bd5760405162461bcd60e51b815260206004820152601760248201527f5374616b6520616c72656164792077697468647261776e000000000000000000604482015260640161030f565b600354335f81815260096020908152604080832080546002909101805461ffff19166001179055815163a9059cbb60e01b815260048101959095526024850181905290516001600160a01b03909516949093859363a9059cbb93604480840194919391929183900301908290875af115801561093b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061095f9190610d1f565b61099d5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161030f565b8060075f8282546109ae9190610d90565b92505081905550600160085f8282546109c79190610d90565b9091555050335f9081526009602081905260408220829055816109e73390565b6001600160a01b0316815260208101919091526040015f2060010155336001600160a01b03167f14eed693e6d30152612ee94c12df593a490178621d3730e516b012e064eeef8f82604051610a3e91815260200190565b60405180910390a25050610a5160015f55565b565b6002546001600160a01b03163314610a7d5760405162461bcd60e51b815260040161030f90610cd3565b5f8111610a88575f80fd5b600555565b5f610a988383610af4565b610aa0575f80fd5b6001600160a01b038084165f908152600a602090815260408083208054600390910154948716845260099092528220549092610adb91610da3565b90505f610ae88383610dc2565b93505050505b92915050565b6001600160a01b0382165f908152600a602052604081206004015460ff16610b1a575f80fd5b6001600160a01b038084165f908152600a60209081526040808320600190810154600554958816855260099093529220909101549091610b5991610d52565b11159392505050565b60025f5403610bb35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161030f565b60025f55565b5f60208284031215610bc9575f80fd5b5035919050565b80356001600160a01b0381168114610be6575f80fd5b919050565b5f8060408385031215610bfc575f80fd5b610c0583610bd0565b9150610c1360208401610bd0565b90509250929050565b5f8060208385031215610c2d575f80fd5b823567ffffffffffffffff80821115610c44575f80fd5b818501915085601f830112610c57575f80fd5b813581811115610c65575f80fd5b8660208260051b8501011115610c79575f80fd5b60209290920196919550909350505050565b5f8060408385031215610c9c575f80fd5b610ca583610bd0565b946020939093013593505050565b5f60208284031215610cc3575f80fd5b610ccc82610bd0565b9392505050565b6020808252602c908201527f4f6e6c79206d756c746953696720616464726573732063616e2063616c6c207460408201526b3434b990333ab731ba34b7b760a11b606082015260800190565b5f60208284031215610d2f575f80fd5b81518015158114610ccc575f80fd5b634e487b7160e01b5f52601160045260245ffd5b80820180821115610aee57610aee610d3e565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215610d89575f80fd5b5051919050565b81810381811115610aee57610aee610d3e565b5f82610dbd57634e487b7160e01b5f52601260045260245ffd5b500490565b8082028115828204841417610aee57610aee610d3e56fea26469706673582212209478b1d835b6531e95195d1359e8cf14d69a3380c9ccaed61827f90fa5c086d564736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x111 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B29D215 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xA164959D GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA164959D EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xACDE6597 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xAD5A402B EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xCAF10B57 EQ PUSH2 0x27C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B29D215 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x9F8932F4 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xA163BEEA EQ PUSH2 0x231 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x62D76D06 GT PUSH2 0xE4 JUMPI DUP1 PUSH4 0x62D76D06 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x6B036F45 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x8167EE72 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x95ADB5AD EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x966DAE0E EQ PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD29FCD4 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x1516DEF7 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x41FEE557 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x609C878A EQ PUSH2 0x16D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x128 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x2E5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x13D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0xBEB JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x524 JUMP JUMPDEST PUSH2 0x1C6 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST PUSH2 0x128 PUSH2 0x807 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x13D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x13D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C6 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C6 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0xBEB JUMP JUMPDEST PUSH2 0xA8D JUMP JUMPDEST PUSH2 0x19A PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0xBEB JUMP JUMPDEST PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x1C6 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x13D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x318 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30F SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x323 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH2 0x330 PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 GT PUSH2 0x390 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH4 0x23B872DD CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0xD1F JUMP JUMPDEST PUSH2 0x452 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30F JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x475 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x493 SWAP1 DUP5 SWAP1 PUSH2 0xD52 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 NUMBER PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x7 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4BF SWAP1 DUP5 SWAP1 PUSH2 0xD52 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0xD52 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE NUMBER PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0xAE860169EF88B6E5A084A54675AF932AC7BE23DE4ABD34A1D99A5A8402A17CC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x521 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x546 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x54E PUSH2 0xB62 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x720 JUMPI PUSH2 0x588 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x56D JUMPI PUSH2 0x56D PUSH2 0xD65 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x582 SWAP2 SWAP1 PUSH2 0xCB3 JUMP JUMPDEST CALLER PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x590 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xB PUSH0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x5A5 JUMPI PUSH2 0x5A5 PUSH2 0xD65 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5EC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x61D DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x602 JUMPI PUSH2 0x602 PUSH2 0xD65 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x617 SWAP2 SWAP1 PUSH2 0xCB3 JUMP JUMPDEST CALLER PUSH2 0xA8D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0xB PUSH0 DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x636 JUMPI PUSH2 0x636 PUSH2 0xD65 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x64B SWAP2 SWAP1 PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x691 JUMPI PUSH2 0x691 PUSH2 0xD65 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x716 SWAP2 SWAP1 PUSH2 0xD1F JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x550 JUMP JUMPDEST POP PUSH2 0x72A PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x736 PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x77A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x79E SWAP2 SWAP1 PUSH2 0xD79 JUMP JUMPDEST EQ PUSH2 0x7A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7CE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 NUMBER PUSH1 0x1 DUP3 ADD SSTORE DUP2 DUP2 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x7 SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH2 0x72A PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x80F PUSH2 0xB62 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BC81CDD185AD948199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30F JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B6520616C72656164792077697468647261776E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x3 SLOAD CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x24 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP4 DUP6 SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP5 ADD SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 SWAP2 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x93B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x95F SWAP2 SWAP1 PUSH2 0xD1F JUMP JUMPDEST PUSH2 0x99D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30F JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9AE SWAP2 SWAP1 PUSH2 0xD90 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9C7 SWAP2 SWAP1 PUSH2 0xD90 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP3 SWAP1 SSTORE DUP2 PUSH2 0x9E7 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SSTORE CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x14EED693E6D30152612EE94C12DF593A490178621D3730E516B012E064EEEF8F DUP3 PUSH1 0x40 MLOAD PUSH2 0xA3E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xA51 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30F SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xA88 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0xA98 DUP4 DUP4 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0xAA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD SWAP5 DUP8 AND DUP5 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP1 SWAP3 PUSH2 0xADB SWAP2 PUSH2 0xDA3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xAE8 DUP4 DUP4 PUSH2 0xDC2 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0xB1A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD PUSH1 0x5 SLOAD SWAP6 DUP9 AND DUP6 MSTORE PUSH1 0x9 SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 PUSH2 0xB59 SWAP2 PUSH2 0xD52 JUMP JUMPDEST GT ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xBB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBFC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC05 DUP4 PUSH2 0xBD0 JUMP JUMPDEST SWAP2 POP PUSH2 0xC13 PUSH1 0x20 DUP5 ADD PUSH2 0xBD0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC2D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC44 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC57 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xC65 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xC79 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC9C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCA5 DUP4 PUSH2 0xBD0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCCC DUP3 PUSH2 0xBD0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206D756C746953696720616464726573732063616E2063616C6C2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x3434B990333AB731BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD2F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCCC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAEE PUSH2 0xD3E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD89 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAEE PUSH2 0xD3E JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xDBD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xAEE JUMPI PUSH2 0xAEE PUSH2 0xD3E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 PUSH25 0xB1D835B6531E95195D1359E8CF14D69A3380C9CCAED61827F9 0xF 0xA5 0xC0 DUP7 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "424:5473:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5596:144;;;;;;:::i;:::-;;:::i;:::-;;521:30;;;;;-1:-1:-1;;;;;521:30:5;;;;;;-1:-1:-1;;;;;363:32:6;;;345:51;;333:2;318:18;521:30:5;;;;;;;;2378:616;;;;;;:::i;:::-;;:::i;1674:78::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1015:14:6;;1008:22;990:41;;978:2;963:18;1674:78:5;850:187:6;4284:563:5;;;;;;:::i;:::-;;:::i;590:33::-;;;;;;;;;1808:25:6;;;1796:2;1781:18;590:33:5;1662:177:6;3741:532:5;;;;;;:::i;:::-;;:::i;3000:735::-;;;:::i;486:29::-;;;;;-1:-1:-1;;;;;486:29:5;;;5746:148;;;;;;:::i;:::-;;:::i;557:27::-;;;;;-1:-1:-1;;;;;557:27:5;;;629:35;;;;;;755:33;;;;;;5142:448;;;;;;:::i;:::-;;:::i;4853:283::-;;;;;;:::i;:::-;;:::i;712:37::-;;;;;;670:35;;;;;-1:-1:-1;;;;;670:35:5;;;1616:52;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2783:25:6;;;2839:2;2824:18;;2817:34;;;;2867:18;;;2860:34;;;;2925:2;2910:18;;2903:34;2981:14;2974:22;2968:3;2953:19;;2946:51;2770:3;2755:19;1616:52:5;2530:473:6;5596:144:5;1110:15;;-1:-1:-1;;;;;1110:15:5;1096:10;:29;1088:86;;;;-1:-1:-1;;;1088:86:5;;;;;;;:::i;:::-;;;;;;;;;5692:1:::1;5682:7;:11;5674:20;;;::::0;::::1;;5705:18;:28:::0;5596:144::o;2378:616::-;2261:21:1;:19;:21::i;:::-;2472:12:5::1;::::0;2513:18:::1;::::0;-1:-1:-1;;;;;2472:12:5;;::::1;::::0;2503:28;::::1;2495:73;;;::::0;-1:-1:-1;;;2495:73:5;;3623:2:6;2495:73:5::1;::::0;::::1;3605:21:6::0;;;3642:18;;;3635:30;3701:34;3681:18;;;3674:62;3753:18;;2495:73:5::1;3421:356:6::0;2495:73:5::1;-1:-1:-1::0;;;;;2586:18:5;::::1;;735:10:3::0;2586:56:5::1;::::0;-1:-1:-1;;;;;;2586:56:5::1;::::0;;;;;;-1:-1:-1;;;;;4040:15:6;;;2586:56:5::1;::::0;::::1;4022:34:6::0;2627:4:5::1;4072:18:6::0;;;4065:43;4124:18;;;4117:34;;;3957:18;;2586:56:5::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2578:84;;;::::0;-1:-1:-1;;;2578:84:5;;4646:2:6;2578:84:5::1;::::0;::::1;4628:21:6::0;4685:2;4665:18;;;4658:30;-1:-1:-1;;;4704:18:6;;;4697:45;4759:18;;2578:84:5::1;4444:339:6::0;2578:84:5::1;735:10:3::0;2681:26:5::1;::::0;;;:12:::1;:26;::::0;;;;:40:::1;;::::0;::::1;::::0;::::1;;;2680:41;2672:50;;;::::0;::::1;;735:10:3::0;2733:26:5::1;::::0;;;:12:::1;:26;::::0;;;;:44;;2770:7;;2733:26;:44:::1;::::0;2770:7;;2733:44:::1;:::i;:::-;::::0;;;-1:-1:-1;;735:10:3;2787:26:5::1;::::0;;;:12:::1;:26;::::0;;;;2828:12:::1;2787:38;::::0;;::::1;:53:::0;2850:22:::1;:33:::0;;2876:7;;2787:26;2850:33:::1;::::0;2876:7;;2850:33:::1;:::i;:::-;;;;;;;;2915:1;2893:18;;:23;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2932:54:5::1;::::0;;5224:25:6;;;2973:12:5::1;5280:2:6::0;5265:18;;5258:34;735:10:3;;2932:54:5::1;::::0;5197:18:6;2932:54:5::1;;;;;;;2440:554;2303:20:1::0;1716:1;2809:7;:22;2629:209;2303:20;2378:616:5;:::o;4284:563::-;852:10;839:24;;;;:12;:24;;;;;:38;;;;;;;;831:47;;;;;;2261:21:1::1;:19;:21::i;:::-;4391:9:5::2;4386:455;4406:26:::0;;::::2;4386:455;;;4461:51;4481:15;;4497:1;4481:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4501:10;4461:19;:51::i;:::-;4453:60;;;::::0;::::2;;4536:26;:46;4563:15;;4579:1;4563:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4536:46:5::2;::::0;;::::2;::::0;;::::2;::::0;;;;;;;;-1:-1:-1;4536:46:5;;;4583:10:::2;4536:58:::0;;;;;;;;::::2;;4535:59;4527:68;;;::::0;::::2;;4609:19;4631:46;4646:15;;4662:1;4646:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4666:10;4631:14;:46::i;:::-;4609:68;;4752:4;4691:26;:46;4718:15;;4734:1;4718:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4691:46:5::2;::::0;;::::2;::::0;;::::2;::::0;;;;;;;;-1:-1:-1;4691:46:5;;;4738:10:::2;4691:58:::0;;;;;;;:65;;-1:-1:-1;;4691:65:5::2;::::0;::::2;;::::0;;;::::2;::::0;;4777:15;;4793:1;4777:18;;::::2;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4770:60;::::0;-1:-1:-1;;;4770:60:5;;4806:10:::2;4770:60;::::0;::::2;5609:51:6::0;5676:18;;;5669:34;;;-1:-1:-1;;;;;4770:35:5;;;::::2;::::0;::::2;::::0;5582:18:6;;4770:60:5::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;4434:3:5::2;;4386:455;;;;2303:20:1::1;1716:1:::0;2809:7;:22;2629:209;2303:20:::1;4284:563:5::0;;:::o;3741:532::-;2261:21:1;:19;:21::i;:::-;3852:46:5::1;::::0;-1:-1:-1;;;3852:46:5;;3892:4:::1;3852:46;::::0;::::1;345:51:6::0;3902:11:5;;-1:-1:-1;;;;;3852:31:5;::::1;::::0;::::1;::::0;318:18:6;;3852:46:5::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;3844:70;;;::::0;::::1;;-1:-1:-1::0;;;;;3933:28:5;::::1;;::::0;;;:13:::1;:28;::::0;;;;:39:::1;;::::0;::::1;;3932:40;3924:49;;;::::0;::::1;;-1:-1:-1::0;;;;;3983:28:5;::::1;;::::0;;;:13:::1;:28;::::0;;;;4028:12:::1;3983:42;::::0;::::1;:57:::0;4050:53;;;4114:48:::1;::::0;::::1;:62:::0;;;4244:22:::1;::::0;4187:54:::1;::::0;;::::1;:79:::0;2303:20:1;1716:1;2809:7;:22;2629:209;3000:735:5;2261:21:1;:19;:21::i;:::-;735:10:3;3105:1:5::1;3069:26:::0;;;:12:::1;:26;::::0;;;;:33;3061:64:::1;;;::::0;-1:-1:-1;;;3061:64:5;;6105:2:6;3061:64:5::1;::::0;::::1;6087:21:6::0;6144:2;6124:18;;;6117:30;-1:-1:-1;;;6163:18:6;;;6156:44;6217:18;;3061:64:5::1;5903:338:6::0;3061:64:5::1;735:10:3::0;3144:26:5::1;::::0;;;:12:::1;:26;::::0;;;;:36:::1;;::::0;::::1;;3143:37;3135:73;;;::::0;-1:-1:-1;;;3135:73:5;;6448:2:6;3135:73:5::1;::::0;::::1;6430:21:6::0;6487:2;6467:18;;;6460:30;6526:25;6506:18;;;6499:53;6569:18;;3135:73:5::1;6246:347:6::0;3135:73:5::1;3240:12;::::0;735:10:3;3218:12:5::1;3280:26:::0;;;:12:::1;:26;::::0;;;;;;;:33;;3323:36:::1;::::0;;::::1;:43:::0;;-1:-1:-1;;3376:48:5;3362:4:::1;3376:48:::0;;;3443:36;;-1:-1:-1;;;3443:36:5;;::::1;::::0;::::1;5609:51:6::0;;;;5676:18;;;5669:34;;;3443:36:5;;-1:-1:-1;;;;;3240:12:5;;::::1;::::0;3280:33;;3240:12;;3443:14:::1;::::0;5582:18:6;;;;;3280:26:5;;3443:36;;;;;;;;;;3240:12;3443:36:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3435:64;;;::::0;-1:-1:-1;;;3435:64:5;;4646:2:6;3435:64:5::1;::::0;::::1;4628:21:6::0;4685:2;4665:18;;;4658:30;-1:-1:-1;;;4704:18:6;;;4697:45;4759:18;;3435:64:5::1;4444:339:6::0;3435:64:5::1;3535:6;3509:22;;:32;;;;;;;:::i;:::-;;;;;;;;3573:1;3551:18;;:23;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3597:10:5::1;3618:1;3584:24:::0;;;:12:::1;:24;::::0;;;;;;:35;;;3618:1;3642:12:::1;735:10:3::0;;656:96;3642:12:5::1;-1:-1:-1::0;;;;;3629:26:5::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;3629:26:5;:38:::1;;:42:::0;735:10:3;-1:-1:-1;;;;;3686:42:5::1;;3721:6;3686:42;;;;1808:25:6::0;;1796:2;1781:18;;1662:177;3686:42:5::1;;;;;;;;3051:684;;2303:20:1::0;1716:1;2809:7;:22;2629:209;2303:20;3000:735:5:o;5746:148::-;1110:15;;-1:-1:-1;;;;;1110:15:5;1096:10;:29;1088:86;;;;-1:-1:-1;;;1088:86:5;;;;;;;:::i;:::-;5844:1:::1;5834:7;:11;5826:20;;;::::0;::::1;;5857;:30:::0;5746:148::o;5142:448::-;5227:7;5254:44;5274:13;5289:8;5254:19;:44::i;:::-;5246:53;;;;;;-1:-1:-1;;;;;5330:28:5;;;5309:18;5330:28;;;:13;:28;;;;;;;;:39;;5439:54;;;;;5407:22;;;;;:12;:22;;;;;:29;5330:39;;5407:86;;;:::i;:::-;5379:114;-1:-1:-1;5503:19:5;5525:30;5545:10;5379:114;5525:30;:::i;:::-;5503:52;-1:-1:-1;;;;5142:448:5;;;;;:::o;4853:283::-;-1:-1:-1;;;;;4967:28:5;;4943:4;4967:28;;;:13;:28;;;;;:39;;;;;4959:48;;;;;;-1:-1:-1;;;;;5087:28:5;;;;;;;:13;:28;;;;;;;;:42;;;;;5062:20;;5025:22;;;;;:12;:22;;;;;:34;;;;5087:42;;5025:57;;;:::i;:::-;5024:105;;;4853:283;-1:-1:-1;;;4853:283:5:o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:1;;7328:2:6;2460:63:1;;;7310:21:6;7367:2;7347:18;;;7340:30;7406:33;7386:18;;;7379:61;7457:18;;2460:63:1;7126:355:6;2460:63:1;1759:1;2598:7;:18;2336:287::o;14:180:6:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:6;;14:180;-1:-1:-1;14:180:6:o;407:173::-;475:20;;-1:-1:-1;;;;;524:31:6;;514:42;;504:70;;570:1;567;560:12;504:70;407:173;;;:::o;585:260::-;653:6;661;714:2;702:9;693:7;689:23;685:32;682:52;;;730:1;727;720:12;682:52;753:29;772:9;753:29;:::i;:::-;743:39;;801:38;835:2;824:9;820:18;801:38;:::i;:::-;791:48;;585:260;;;;;:::o;1042:615::-;1128:6;1136;1189:2;1177:9;1168:7;1164:23;1160:32;1157:52;;;1205:1;1202;1195:12;1157:52;1245:9;1232:23;1274:18;1315:2;1307:6;1304:14;1301:34;;;1331:1;1328;1321:12;1301:34;1369:6;1358:9;1354:22;1344:32;;1414:7;1407:4;1403:2;1399:13;1395:27;1385:55;;1436:1;1433;1426:12;1385:55;1476:2;1463:16;1502:2;1494:6;1491:14;1488:34;;;1518:1;1515;1508:12;1488:34;1571:7;1566:2;1556:6;1553:1;1549:14;1545:2;1541:23;1537:32;1534:45;1531:65;;;1592:1;1589;1582:12;1531:65;1623:2;1615:11;;;;;1645:6;;-1:-1:-1;1042:615:6;;-1:-1:-1;;;;1042:615:6:o;1844:254::-;1912:6;1920;1973:2;1961:9;1952:7;1948:23;1944:32;1941:52;;;1989:1;1986;1979:12;1941:52;2012:29;2031:9;2012:29;:::i;:::-;2002:39;2088:2;2073:18;;;;2060:32;;-1:-1:-1;;;1844:254:6:o;2339:186::-;2398:6;2451:2;2439:9;2430:7;2426:23;2422:32;2419:52;;;2467:1;2464;2457:12;2419:52;2490:29;2509:9;2490:29;:::i;:::-;2480:39;2339:186;-1:-1:-1;;;2339:186:6:o;3008:408::-;3210:2;3192:21;;;3249:2;3229:18;;;3222:30;3288:34;3283:2;3268:18;;3261:62;-1:-1:-1;;;3354:2:6;3339:18;;3332:42;3406:3;3391:19;;3008:408::o;4162:277::-;4229:6;4282:2;4270:9;4261:7;4257:23;4253:32;4250:52;;;4298:1;4295;4288:12;4250:52;4330:9;4324:16;4383:5;4376:13;4369:21;4362:5;4359:32;4349:60;;4405:1;4402;4395:12;4788:127;4849:10;4844:3;4840:20;4837:1;4830:31;4880:4;4877:1;4870:15;4904:4;4901:1;4894:15;4920:125;4985:9;;;5006:10;;;5003:36;;;5019:18;;:::i;5303:127::-;5364:10;5359:3;5355:20;5352:1;5345:31;5395:4;5392:1;5385:15;5419:4;5416:1;5409:15;5714:184;5784:6;5837:2;5825:9;5816:7;5812:23;5808:32;5805:52;;;5853:1;5850;5843:12;5805:52;-1:-1:-1;5876:16:6;;5714:184;-1:-1:-1;5714:184:6:o;6598:128::-;6665:9;;;6686:11;;;6683:37;;;6700:18;;:::i;6731:217::-;6771:1;6797;6787:132;;6841:10;6836:3;6832:20;6829:1;6822:31;6876:4;6873:1;6866:15;6904:4;6901:1;6894:15;6787:132;-1:-1:-1;6933:9:6;;6731:217::o;6953:168::-;7026:9;;;7057;;7074:15;;;7068:22;;7054:37;7044:71;;7095:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "719800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addressWithdrewERC20Reward(address,address)": "infinite",
								"degeneratorStakers()": "2383",
								"degeneratorStakingPool()": "2360",
								"erc20Supplies(address)": "11182",
								"factory()": "2413",
								"factoryAddress()": "2436",
								"getTokenEligibility(address,address)": "infinite",
								"getTokenReward(address,address)": "infinite",
								"minimumStakeAmount()": "2339",
								"multiSigAddress()": "2371",
								"registerERC20Supply(address,uint256)": "infinite",
								"rewardBlackoutPeriod()": "2361",
								"setMinimumStakeAmount(uint256)": "24508",
								"setRewardBlackoutPeriod(uint256)": "24507",
								"stakeDegnerator(uint256)": "infinite",
								"tokenAddress()": "2370",
								"withdrawDegenerator()": "infinite",
								"withdrawRewards(address[])": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 5897,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 424,
									"end": 5897,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 424,
									"end": 5897,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1922,
									"end": 2372,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1922,
									"end": 2372,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2079,
									"end": 2111,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2079,
									"end": 2111,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2079,
									"end": 2111,
									"name": "SWAP8",
									"source": 5
								},
								{
									"begin": 2079,
									"end": 2111,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2079,
									"end": 2111,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2079,
									"end": 2111,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2079,
									"end": 2111,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2079,
									"end": 2111,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2079,
									"end": 2111,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2079,
									"end": 2111,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2079,
									"end": 2111,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2079,
									"end": 2111,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2121,
									"end": 2136,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 2121,
									"end": 2155,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2121,
									"end": 2155,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2121,
									"end": 2155,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 2121,
									"end": 2155,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2121,
									"end": 2155,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2121,
									"end": 2155,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 2121,
									"end": 2155,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2121,
									"end": 2155,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2121,
									"end": 2155,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 2121,
									"end": 2155,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2121,
									"end": 2155,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 2121,
									"end": 2155,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2121,
									"end": 2155,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2121,
									"end": 2155,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 2121,
									"end": 2155,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2177,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2165,
									"end": 2193,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2193,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2193,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2193,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2193,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2193,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2193,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2193,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2193,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2193,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2193,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2193,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2193,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2193,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2193,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2203,
									"end": 2223,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2203,
									"end": 2247,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2257,
									"end": 2275,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2257,
									"end": 2297,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2257,
									"end": 2297,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2257,
									"end": 2297,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2257,
									"end": 2297,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2307,
									"end": 2329,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 2307,
									"end": 2333,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2307,
									"end": 2333,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2307,
									"end": 2333,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2343,
									"end": 2361,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 2343,
									"end": 2365,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 424,
									"end": 5897,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 424,
									"end": 5897,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 698,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 698,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 302,
									"end": 308,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 316,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 318,
									"end": 324,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 332,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 340,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 387,
									"end": 390,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 375,
									"end": 384,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 366,
									"end": 373,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 362,
									"end": 385,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 358,
									"end": 391,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 355,
									"end": 408,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 355,
									"end": 408,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 355,
									"end": 408,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 404,
									"end": 405,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 401,
									"end": 402,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 394,
									"end": 406,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 355,
									"end": 408,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 355,
									"end": 408,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 427,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 457,
									"end": 466,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 427,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 427,
									"end": 467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 427,
									"end": 467,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 427,
									"end": 467,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 417,
									"end": 467,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 417,
									"end": 467,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 486,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 531,
									"end": 533,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 520,
									"end": 529,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 516,
									"end": 534,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 486,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 486,
									"end": 535,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 486,
									"end": 535,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 486,
									"end": 535,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 476,
									"end": 535,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 476,
									"end": 535,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 554,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 599,
									"end": 601,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 588,
									"end": 597,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 584,
									"end": 602,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 554,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 554,
									"end": 603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 554,
									"end": 603,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 554,
									"end": 603,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 643,
									"end": 645,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 628,
									"end": 646,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 622,
									"end": 647,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 687,
									"end": 690,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 672,
									"end": 691,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 672,
									"end": 691,
									"name": "SWAP8",
									"source": 6
								},
								{
									"begin": 672,
									"end": 691,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 666,
									"end": 692,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 196,
									"end": 698,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 196,
									"end": 698,
									"name": "SWAP9",
									"source": 6
								},
								{
									"begin": 196,
									"end": 698,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 196,
									"end": 698,
									"name": "SWAP8",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 622,
									"end": 647,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 666,
									"end": 692,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 196,
									"end": 698,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 196,
									"end": 698,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 698,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 196,
									"end": 698,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 424,
									"end": 5897,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 5897,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 424,
									"end": 5897,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 5897,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 5897,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 424,
									"end": 5897,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 5897,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209478b1d835b6531e95195d1359e8cf14d69a3380c9ccaed61827f90fa5c086d564736f6c63430008190033",
									".code": [
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "9B29D215"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "A164959D"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "A164959D"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "ACDE6597"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "AD5A402B"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "C45A0155"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "CAF10B57"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "9B29D215"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "9D76EA58"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "9F8932F4"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "A163BEEA"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "62D76D06"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "62D76D06"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "6B036F45"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "8167EE72"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "95ADB5AD"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "966DAE0E"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "D29FCD4"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "1516DEF7"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "41FEE557"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "609C878A"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 5897,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5740,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5596,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5596,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 5596,
											"end": 5740,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5740,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5596,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5596,
											"end": 5740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5740,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 5596,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 5596,
											"end": 5740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5740,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5596,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5740,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 521,
											"end": 551,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 521,
											"end": 551,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 521,
											"end": 551,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 521,
											"end": 551,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 363,
											"end": 395,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 395,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 363,
											"end": 395,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 345,
											"end": 396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 521,
											"end": 551,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 551,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2994,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2378,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2378,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2378,
											"end": 2994,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2994,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2378,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2378,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2994,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2378,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2378,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1674,
											"end": 1752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1015,
											"end": 1029,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1015,
											"end": 1029,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 990,
											"end": 1031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 990,
											"end": 1031,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 978,
											"end": 980,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 963,
											"end": 981,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 850,
											"end": 1037,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4284,
											"end": 4847,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4284,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4284,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4284,
											"end": 4847,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4847,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4284,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4284,
											"end": 4847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4847,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4284,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4284,
											"end": 4847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 590,
											"end": 623,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 590,
											"end": 623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 590,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 590,
											"end": 623,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 590,
											"end": 623,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 590,
											"end": 623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 590,
											"end": 623,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 590,
											"end": 623,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 590,
											"end": 623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 590,
											"end": 623,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 590,
											"end": 623,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1808,
											"end": 1833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1833,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1799,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 590,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1662,
											"end": 1839,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3741,
											"end": 4273,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3741,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3741,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3741,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3741,
											"end": 4273,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3741,
											"end": 4273,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3741,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3741,
											"end": 4273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3741,
											"end": 4273,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3741,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3741,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3741,
											"end": 4273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3735,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 3000,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3000,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3000,
											"end": 3735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 486,
											"end": 515,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 486,
											"end": 515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 486,
											"end": 515,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 486,
											"end": 515,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 486,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 486,
											"end": 515,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 486,
											"end": 515,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 486,
											"end": 515,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 486,
											"end": 515,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5894,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 5746,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5746,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 5746,
											"end": 5894,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5894,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5746,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5746,
											"end": 5894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5894,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 5746,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5746,
											"end": 5894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 557,
											"end": 584,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 557,
											"end": 584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 557,
											"end": 584,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 557,
											"end": 584,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 557,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 557,
											"end": 584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 557,
											"end": 584,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 557,
											"end": 584,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 557,
											"end": 584,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 629,
											"end": 664,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 629,
											"end": 664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 629,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 629,
											"end": 664,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 629,
											"end": 664,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 629,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 629,
											"end": 664,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 755,
											"end": 788,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 755,
											"end": 788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 755,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 755,
											"end": 788,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 755,
											"end": 788,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 755,
											"end": 788,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 755,
											"end": 788,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5590,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 5142,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 5142,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5142,
											"end": 5590,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5590,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5142,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 5142,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5590,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5142,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 5142,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 5136,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 4853,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 4853,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4853,
											"end": 5136,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 5136,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4853,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 4853,
											"end": 5136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 5136,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4853,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 4853,
											"end": 5136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 712,
											"end": 749,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 712,
											"end": 749,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 712,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 712,
											"end": 749,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 712,
											"end": 749,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 712,
											"end": 749,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 712,
											"end": 749,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 670,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 670,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 670,
											"end": 705,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 670,
											"end": 705,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 670,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 670,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 670,
											"end": 705,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 670,
											"end": 705,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 670,
											"end": 705,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1616,
											"end": 1668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2808,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2808,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2808,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2824,
											"end": 2842,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 2842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2851,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2851,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2851,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2851,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2860,
											"end": 2894,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2860,
											"end": 2894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2860,
											"end": 2894,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2860,
											"end": 2894,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2925,
											"end": 2927,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2937,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2981,
											"end": 2995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 2996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2971,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2953,
											"end": 2972,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2953,
											"end": 2972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2997,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 2755,
											"end": 2774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2530,
											"end": 3003,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5596,
											"end": 5740,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 5596,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1110,
											"end": 1125,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1110,
											"end": 1125,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1110,
											"end": 1125,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1106,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1125,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1088,
											"end": 1174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5692,
											"end": 5693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5682,
											"end": 5689,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5682,
											"end": 5693,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5674,
											"end": 5694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 5674,
											"end": 5694,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5674,
											"end": 5694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5694,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5674,
											"end": 5694,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5674,
											"end": 5694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 5674,
											"end": 5694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5705,
											"end": 5723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5705,
											"end": 5733,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2994,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2378,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2472,
											"end": 2484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2472,
											"end": 2484,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2513,
											"end": 2531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2513,
											"end": 2531,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2472,
											"end": 2484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2472,
											"end": 2484,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2472,
											"end": 2484,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2472,
											"end": 2484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2531,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2531,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2495,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2495,
											"end": 2568,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2495,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2495,
											"end": 2568,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2495,
											"end": 2568,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2495,
											"end": 2568,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3625,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2495,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2495,
											"end": 2568,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2495,
											"end": 2568,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3605,
											"end": 3626,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3605,
											"end": 3626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3605,
											"end": 3626,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3665,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3735,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 3681,
											"end": 3699,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3681,
											"end": 3699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3674,
											"end": 3736,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3771,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3753,
											"end": 3771,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2495,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3421,
											"end": 3777,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2495,
											"end": 2568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2495,
											"end": 2568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2586,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2604,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2586,
											"end": 2642,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2586,
											"end": 2642,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4040,
											"end": 4055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4055,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2586,
											"end": 2642,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4022,
											"end": 4056,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2627,
											"end": 2631,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4065,
											"end": 4108,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4117,
											"end": 4151,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4117,
											"end": 4151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4117,
											"end": 4151,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3975,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3957,
											"end": 3975,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2642,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2586,
											"end": 2642,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2586,
											"end": 2642,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2578,
											"end": 2662,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2578,
											"end": 2662,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2578,
											"end": 2662,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2662,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4648,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2578,
											"end": 2662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2578,
											"end": 2662,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2662,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4628,
											"end": 4649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4685,
											"end": 4687,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 4665,
											"end": 4683,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4665,
											"end": 4683,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4665,
											"end": 4683,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4658,
											"end": 4688,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4704,
											"end": 4722,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4704,
											"end": 4722,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4704,
											"end": 4722,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4742,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4777,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4759,
											"end": 4777,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4444,
											"end": 4783,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2662,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2578,
											"end": 2662,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2681,
											"end": 2707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2681,
											"end": 2707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2681,
											"end": 2721,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2721,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2681,
											"end": 2721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2721,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2681,
											"end": 2721,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2721,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2672,
											"end": 2722,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2722,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2722,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2672,
											"end": 2722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2733,
											"end": 2759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2733,
											"end": 2759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2777,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2777,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2770,
											"end": 2777,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2770,
											"end": 2777,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2777,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2733,
											"end": 2777,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2770,
											"end": 2777,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2770,
											"end": 2777,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2777,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2733,
											"end": 2777,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2777,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2733,
											"end": 2777,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2777,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2777,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2777,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2787,
											"end": 2813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2787,
											"end": 2813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2787,
											"end": 2813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2787,
											"end": 2813,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2787,
											"end": 2799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2787,
											"end": 2813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2787,
											"end": 2813,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2787,
											"end": 2813,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2787,
											"end": 2813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2787,
											"end": 2813,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2840,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 2787,
											"end": 2825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2787,
											"end": 2825,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2787,
											"end": 2825,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2787,
											"end": 2825,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2787,
											"end": 2840,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2850,
											"end": 2883,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2883,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 2883,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 2883,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2787,
											"end": 2813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2850,
											"end": 2883,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 2883,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 2883,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2850,
											"end": 2883,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2850,
											"end": 2883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2883,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2883,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2883,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2883,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2883,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2883,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2893,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2893,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2916,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2916,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2916,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2893,
											"end": 2916,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2916,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2893,
											"end": 2916,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2916,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2893,
											"end": 2916,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2916,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2916,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2916,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2932,
											"end": 2986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2932,
											"end": 2986,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2932,
											"end": 2986,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5249,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5224,
											"end": 5249,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5224,
											"end": 5249,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2973,
											"end": 2985,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 5280,
											"end": 5282,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5265,
											"end": 5283,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5292,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2932,
											"end": 2986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "AE860169EF88B6E5A084A54675AF932AC7BE23DE4ABD34A1D99A5A8402A17CC"
										},
										{
											"begin": 2932,
											"end": 2986,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5197,
											"end": 5215,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2932,
											"end": 2986,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2932,
											"end": 2986,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2932,
											"end": 2986,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2932,
											"end": 2986,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2932,
											"end": 2986,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2932,
											"end": 2986,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2994,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4847,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4284,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 852,
											"end": 862,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 839,
											"end": 863,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 839,
											"end": 863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 839,
											"end": 863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 839,
											"end": 851,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 839,
											"end": 863,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 839,
											"end": 863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 839,
											"end": 863,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 839,
											"end": 863,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 839,
											"end": 877,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 839,
											"end": 877,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 839,
											"end": 877,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 839,
											"end": 877,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 839,
											"end": 877,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 839,
											"end": 877,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 839,
											"end": 877,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 839,
											"end": 877,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 831,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 831,
											"end": 878,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 831,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 878,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 831,
											"end": 878,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 831,
											"end": 878,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 831,
											"end": 878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4400,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4386,
											"end": 4841,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4386,
											"end": 4841,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4406,
											"end": 4432,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4406,
											"end": 4432,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4406,
											"end": 4432,
											"modifierDepth": 2,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4386,
											"end": 4841,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4386,
											"end": 4841,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4386,
											"end": 4841,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4512,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4481,
											"end": 4496,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4496,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4497,
											"end": 4498,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4481,
											"end": 4499,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4481,
											"end": 4499,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4481,
											"end": 4499,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4501,
											"end": 4511,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4480,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 4461,
											"end": 4512,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4512,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4461,
											"end": 4512,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4453,
											"end": 4513,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4453,
											"end": 4513,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4453,
											"end": 4513,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4453,
											"end": 4513,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4453,
											"end": 4513,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4453,
											"end": 4513,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4453,
											"end": 4513,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4562,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 4536,
											"end": 4582,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4578,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4578,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4579,
											"end": 4580,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4563,
											"end": 4581,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4563,
											"end": 4581,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4563,
											"end": 4581,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4536,
											"end": 4582,
											"modifierDepth": 2,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4582,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4582,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4582,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4536,
											"end": 4582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4582,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4582,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4582,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4582,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4582,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4582,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4582,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4536,
											"end": 4582,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4582,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4582,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 4582,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4582,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4582,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4593,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4594,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4594,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4594,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4594,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4594,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4594,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4594,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4594,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4594,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4536,
											"end": 4594,
											"modifierDepth": 2,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4535,
											"end": 4594,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4527,
											"end": 4595,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4527,
											"end": 4595,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4527,
											"end": 4595,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4527,
											"end": 4595,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4527,
											"end": 4595,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4527,
											"end": 4595,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4609,
											"end": 4628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4631,
											"end": 4677,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4646,
											"end": 4661,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4661,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4662,
											"end": 4663,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4646,
											"end": 4664,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4646,
											"end": 4664,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4646,
											"end": 4664,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4666,
											"end": 4676,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4645,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 4631,
											"end": 4677,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4677,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4631,
											"end": 4677,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4609,
											"end": 4677,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4609,
											"end": 4677,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4752,
											"end": 4756,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4691,
											"end": 4717,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 4691,
											"end": 4737,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4718,
											"end": 4733,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4733,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4734,
											"end": 4735,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4718,
											"end": 4736,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4718,
											"end": 4736,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4718,
											"end": 4736,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4691,
											"end": 4737,
											"modifierDepth": 2,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4737,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4737,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4737,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4691,
											"end": 4737,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4737,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4737,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4737,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4737,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4737,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4737,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4691,
											"end": 4737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4737,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4737,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4691,
											"end": 4737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4737,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4737,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4738,
											"end": 4748,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4749,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4749,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4749,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4749,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4749,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4749,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4749,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4756,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4756,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4691,
											"end": 4756,
											"modifierDepth": 2,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4756,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4756,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4756,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4756,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4756,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4756,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4756,
											"modifierDepth": 2,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4756,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4756,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4792,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4792,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 4794,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4795,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4795,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4777,
											"end": 4795,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4777,
											"end": 4795,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4777,
											"end": 4795,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4830,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4770,
											"end": 4830,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4806,
											"end": 4816,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4830,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5609,
											"end": 5660,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5694,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5676,
											"end": 5694,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5694,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4770,
											"end": 4805,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4805,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4805,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4805,
											"modifierDepth": 2,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4805,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 4770,
											"end": 4805,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5582,
											"end": 5600,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5582,
											"end": 5600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4830,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4770,
											"end": 4830,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4770,
											"end": 4830,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4434,
											"end": 4437,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4434,
											"end": 4437,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4386,
											"end": 4841,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4386,
											"end": 4841,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4386,
											"end": 4841,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4386,
											"end": 4841,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4386,
											"end": 4841,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4284,
											"end": 4847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3741,
											"end": 4273,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3741,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3852,
											"end": 3898,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3852,
											"end": 3898,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3896,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3852,
											"end": 3898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 3913,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 3913,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3852,
											"end": 3883,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3883,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3883,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3852,
											"end": 3883,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3852,
											"end": 3898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3852,
											"end": 3898,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3852,
											"end": 3898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3913,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3844,
											"end": 3914,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3844,
											"end": 3914,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3844,
											"end": 3914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3844,
											"end": 3914,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3844,
											"end": 3914,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3844,
											"end": 3914,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3844,
											"end": 3914,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3933,
											"end": 3961,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3961,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3961,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3961,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3961,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 3933,
											"end": 3961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3933,
											"end": 3961,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3961,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3933,
											"end": 3961,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3961,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3933,
											"end": 3972,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3972,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3933,
											"end": 3972,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 3972,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3924,
											"end": 3973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3924,
											"end": 3973,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3924,
											"end": 3973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3973,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3924,
											"end": 3973,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3924,
											"end": 3973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3924,
											"end": 3973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3983,
											"end": 4011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3983,
											"end": 4011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3983,
											"end": 3996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 3983,
											"end": 4011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4028,
											"end": 4040,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 3983,
											"end": 4025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3983,
											"end": 4025,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3983,
											"end": 4025,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3983,
											"end": 4040,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4050,
											"end": 4103,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4050,
											"end": 4103,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4050,
											"end": 4103,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4114,
											"end": 4162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4114,
											"end": 4162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4114,
											"end": 4162,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4114,
											"end": 4176,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4114,
											"end": 4176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4114,
											"end": 4176,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4244,
											"end": 4266,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4187,
											"end": 4241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4187,
											"end": 4241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4187,
											"end": 4241,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4187,
											"end": 4241,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4187,
											"end": 4266,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3735,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3000,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3105,
											"end": 3106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3069,
											"end": 3095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3095,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3095,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3069,
											"end": 3095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3069,
											"end": 3095,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3095,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3069,
											"end": 3095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3095,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3102,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3061,
											"end": 3125,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3061,
											"end": 3125,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3061,
											"end": 3125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3061,
											"end": 3125,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3061,
											"end": 3125,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3061,
											"end": 3125,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3061,
											"end": 3125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3061,
											"end": 3125,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3061,
											"end": 3125,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6087,
											"end": 6108,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6144,
											"end": 6146,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6147,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81CDD185AD948199BDD5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6163,
											"end": 6181,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6163,
											"end": 6181,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6163,
											"end": 6181,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6200,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6217,
											"end": 6235,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6217,
											"end": 6235,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3125,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 5903,
											"end": 6241,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3125,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3061,
											"end": 3125,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3180,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3144,
											"end": 3180,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3180,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3135,
											"end": 3208,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6448,
											"end": 6450,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3135,
											"end": 3208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3135,
											"end": 3208,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3208,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6430,
											"end": 6451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6489,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6460,
											"end": 6490,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6551,
											"name": "PUSH",
											"source": 6,
											"value": "5374616B6520616C72656164792077697468647261776E000000000000000000"
										},
										{
											"begin": 6506,
											"end": 6524,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6506,
											"end": 6524,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6524,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6569,
											"end": 6587,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6569,
											"end": 6587,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 6246,
											"end": 6593,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3135,
											"end": 3208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3240,
											"end": 3252,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3218,
											"end": 3230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3280,
											"end": 3306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3306,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3280,
											"end": 3306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3280,
											"end": 3306,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3306,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3306,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3280,
											"end": 3306,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3306,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3306,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3313,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3323,
											"end": 3359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3359,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3359,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3366,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3366,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3376,
											"end": 3424,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3362,
											"end": 3366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3376,
											"end": 3424,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3376,
											"end": 3424,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3376,
											"end": 3424,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3443,
											"end": 3479,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3443,
											"end": 3479,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5609,
											"end": 5660,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5660,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5660,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5660,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5694,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5676,
											"end": 5694,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5694,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3240,
											"end": 3252,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3252,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3252,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3252,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3313,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3252,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3252,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 3443,
											"end": 3457,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5582,
											"end": 5600,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5582,
											"end": 5600,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5600,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5600,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3280,
											"end": 3306,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3306,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3252,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3479,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3443,
											"end": 3479,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 3443,
											"end": 3479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3435,
											"end": 3499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3435,
											"end": 3499,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3435,
											"end": 3499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3435,
											"end": 3499,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3435,
											"end": 3499,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3435,
											"end": 3499,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4648,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3435,
											"end": 3499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3435,
											"end": 3499,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3435,
											"end": 3499,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4628,
											"end": 4649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4685,
											"end": 4687,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 4665,
											"end": 4683,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4665,
											"end": 4683,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4665,
											"end": 4683,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4658,
											"end": 4688,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4704,
											"end": 4722,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4704,
											"end": 4722,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4704,
											"end": 4722,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4742,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4777,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4759,
											"end": 4777,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3435,
											"end": 3499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4444,
											"end": 4783,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3435,
											"end": 3499,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3435,
											"end": 3499,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3541,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3509,
											"end": 3531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3541,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3541,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3541,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3541,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 3509,
											"end": 3541,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3541,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3541,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 3509,
											"end": 3541,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3541,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 3509,
											"end": 3541,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3541,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3541,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3541,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3541,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3541,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3541,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3541,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3573,
											"end": 3574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3551,
											"end": 3569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3551,
											"end": 3569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3574,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3574,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3574,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3574,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 3551,
											"end": 3574,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3574,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3574,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 3551,
											"end": 3574,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3574,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 3551,
											"end": 3574,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3574,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3574,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3574,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3597,
											"end": 3607,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3618,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3608,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3584,
											"end": 3608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3584,
											"end": 3608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3608,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3608,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3584,
											"end": 3608,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3608,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3619,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3619,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3619,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3618,
											"end": 3619,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3642,
											"end": 3654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3642,
											"end": 3654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3642,
											"end": 3654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3629,
											"end": 3655,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3629,
											"end": 3655,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3629,
											"end": 3667,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3671,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 3728,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3686,
											"end": 3728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "14EED693E6D30152612EE94C12DF593A490178621D3730E516B012E064EEEF8F"
										},
										{
											"begin": 3721,
											"end": 3727,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3686,
											"end": 3728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3686,
											"end": 3728,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3686,
											"end": 3728,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3686,
											"end": 3728,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1808,
											"end": 1833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1833,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1799,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1781,
											"end": 1799,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1662,
											"end": 1839,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3728,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3686,
											"end": 3728,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3686,
											"end": 3728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3686,
											"end": 3728,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3686,
											"end": 3728,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3686,
											"end": 3728,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3686,
											"end": 3728,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3686,
											"end": 3728,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3686,
											"end": 3728,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5894,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5746,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1110,
											"end": 1125,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1110,
											"end": 1125,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1110,
											"end": 1125,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1106,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1125,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1088,
											"end": 1174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1088,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5844,
											"end": 5845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5841,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5834,
											"end": 5845,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5826,
											"end": 5846,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 5826,
											"end": 5846,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5826,
											"end": 5846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5826,
											"end": 5846,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5826,
											"end": 5846,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5826,
											"end": 5846,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 5826,
											"end": 5846,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5857,
											"end": 5877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5857,
											"end": 5887,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5590,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 5142,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5227,
											"end": 5234,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 5274,
											"end": 5287,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5297,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5254,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 5254,
											"end": 5298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5254,
											"end": 5298,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 5254,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5246,
											"end": 5299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5299,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5299,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5299,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5246,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5330,
											"end": 5358,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5358,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5358,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5309,
											"end": 5327,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5358,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5358,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5343,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 5330,
											"end": 5358,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5330,
											"end": 5358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5358,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5358,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5358,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5330,
											"end": 5358,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5358,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5358,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5369,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5369,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5439,
											"end": 5493,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5429,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5429,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5429,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5429,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5429,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5407,
											"end": 5429,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5429,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5429,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5429,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5429,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5369,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5369,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 5407,
											"end": 5493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 5407,
											"end": 5493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5493,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 5407,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5379,
											"end": 5493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5503,
											"end": 5522,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 5545,
											"end": 5555,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5379,
											"end": 5493,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 5525,
											"end": 5555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 5525,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5503,
											"end": 5555,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5142,
											"end": 5590,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 5142,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5590,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5590,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 5136,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 4853,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4967,
											"end": 4995,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 4995,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 4995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 4995,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 4980,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 4967,
											"end": 4995,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4967,
											"end": 4995,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 4995,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4967,
											"end": 4995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 4995,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 5006,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4967,
											"end": 5006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 5006,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 5006,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4967,
											"end": 5006,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 4959,
											"end": 5007,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 5007,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4959,
											"end": 5007,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 5007,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 5007,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 4959,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5100,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5062,
											"end": 5082,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5062,
											"end": 5082,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5047,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5047,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5047,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5047,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5047,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5037,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5025,
											"end": 5047,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5047,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5047,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5047,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5047,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5059,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5059,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5059,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 5025,
											"end": 5082,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5025,
											"end": 5082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5082,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 5025,
											"end": 5082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5129,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5129,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5129,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 5136,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4853,
											"end": 5136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7328,
											"end": 7330,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7310,
											"end": 7331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7367,
											"end": 7369,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7347,
											"end": 7365,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7347,
											"end": 7365,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7347,
											"end": 7365,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7340,
											"end": 7370,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7406,
											"end": 7439,
											"name": "PUSH",
											"source": 6,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7386,
											"end": 7404,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7386,
											"end": 7404,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7386,
											"end": 7404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7379,
											"end": 7440,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7457,
											"end": 7475,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7457,
											"end": 7475,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 7126,
											"end": 7481,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 407,
											"end": 580,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 407,
											"end": 580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 475,
											"end": 495,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 475,
											"end": 495,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 524,
											"end": 555,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 524,
											"end": 555,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 514,
											"end": 556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 514,
											"end": 556,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 504,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 504,
											"end": 574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 570,
											"end": 571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 568,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 560,
											"end": 572,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 504,
											"end": 574,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 504,
											"end": 574,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 407,
											"end": 580,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 407,
											"end": 580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 407,
											"end": 580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 407,
											"end": 580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 585,
											"end": 845,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 585,
											"end": 845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 653,
											"end": 659,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 714,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 711,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 693,
											"end": 700,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 689,
											"end": 712,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 685,
											"end": 717,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 682,
											"end": 734,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 682,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 682,
											"end": 734,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 682,
											"end": 734,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 682,
											"end": 734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 753,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 772,
											"end": 781,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 753,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 753,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 753,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 753,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 743,
											"end": 782,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 743,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 801,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 835,
											"end": 837,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 824,
											"end": 833,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 820,
											"end": 838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 801,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 801,
											"end": 839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 801,
											"end": 839,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 801,
											"end": 839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 791,
											"end": 839,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 791,
											"end": 839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 585,
											"end": 845,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 585,
											"end": 845,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 585,
											"end": 845,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 585,
											"end": 845,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 585,
											"end": 845,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 585,
											"end": 845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1657,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1042,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1189,
											"end": 1191,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1186,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1164,
											"end": 1187,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1209,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 1157,
											"end": 1209,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1205,
											"end": 1206,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1209,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 1157,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1232,
											"end": 1255,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1315,
											"end": 1317,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1335,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1301,
											"end": 1335,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1332,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1329,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1321,
											"end": 1333,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1335,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1301,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1369,
											"end": 1375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1354,
											"end": 1376,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1376,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 1411,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1403,
											"end": 1405,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1399,
											"end": 1412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1395,
											"end": 1422,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1385,
											"end": 1440,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1437,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1434,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1438,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1385,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1478,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1479,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1502,
											"end": 1504,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1505,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1522,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1488,
											"end": 1522,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1519,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1516,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1508,
											"end": 1520,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1522,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1488,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1578,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1566,
											"end": 1568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1556,
											"end": 1562,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1554,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1549,
											"end": 1563,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1545,
											"end": 1547,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1564,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1537,
											"end": 1569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1579,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1596,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1531,
											"end": 1596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1593,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1582,
											"end": 1594,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1596,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1531,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1625,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1626,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1626,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1626,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1626,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1651,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1042,
											"end": 1657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1657,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1042,
											"end": 1657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 2098,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1844,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1926,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1975,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1961,
											"end": 1970,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 1959,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 1971,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1944,
											"end": 1976,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 1993,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1941,
											"end": 1993,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 1990,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 1987,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 1991,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 1993,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1941,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2031,
											"end": 2040,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2012,
											"end": 2041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2041,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2012,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2090,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2092,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2092,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1844,
											"end": 2098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2525,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2339,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2453,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2439,
											"end": 2448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2437,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2449,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2454,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2419,
											"end": 2471,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2419,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 2419,
											"end": 2471,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2467,
											"end": 2468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2465,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2419,
											"end": 2471,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 2419,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2509,
											"end": 2518,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2490,
											"end": 2519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2519,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2490,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2519,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2525,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2339,
											"end": 2525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3416,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3008,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3212,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3192,
											"end": 3213,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3213,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3213,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3251,
											"name": "PUSH",
											"source": 6,
											"value": "2C"
										},
										{
											"begin": 3229,
											"end": 3247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3247,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3247,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3222,
											"end": 3252,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3288,
											"end": 3322,
											"name": "PUSH",
											"source": 6,
											"value": "4F6E6C79206D756C746953696720616464726573732063616E2063616C6C2074"
										},
										{
											"begin": 3283,
											"end": 3285,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3268,
											"end": 3286,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3286,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3323,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3434B990333AB731BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3354,
											"end": 3356,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3339,
											"end": 3357,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3357,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3374,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3409,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3391,
											"end": 3410,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3391,
											"end": 3410,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4439,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4162,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4229,
											"end": 4235,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4284,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4270,
											"end": 4279,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4268,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4257,
											"end": 4280,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4253,
											"end": 4285,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4302,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 4250,
											"end": 4302,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4299,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4295,
											"end": 4296,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4300,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4302,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 4250,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4330,
											"end": 4339,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4324,
											"end": 4340,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4388,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4389,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4390,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4391,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4349,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4349,
											"end": 4409,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4405,
											"end": 4406,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4402,
											"end": 4403,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4788,
											"end": 4915,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 4788,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4849,
											"end": 4859,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 4844,
											"end": 4847,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4840,
											"end": 4860,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4830,
											"end": 4861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4877,
											"end": 4878,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4870,
											"end": 4885,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4904,
											"end": 4908,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4901,
											"end": 4902,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4894,
											"end": 4909,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5045,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4920,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 4994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 4994,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 4994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5016,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5016,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5016,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5039,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 5003,
											"end": 5039,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5019,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 5019,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 5019,
											"end": 5037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5430,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 5303,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5364,
											"end": 5374,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 5359,
											"end": 5362,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5355,
											"end": 5375,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5352,
											"end": 5353,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5345,
											"end": 5376,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5399,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 5392,
											"end": 5393,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5385,
											"end": 5400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5423,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5416,
											"end": 5417,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5409,
											"end": 5424,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5714,
											"end": 5898,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5714,
											"end": 5898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5784,
											"end": 5790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5837,
											"end": 5839,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5825,
											"end": 5834,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5816,
											"end": 5823,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5835,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5808,
											"end": 5840,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5805,
											"end": 5857,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5805,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 5805,
											"end": 5857,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5850,
											"end": 5851,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5843,
											"end": 5855,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5805,
											"end": 5857,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 5805,
											"end": 5857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5876,
											"end": 5892,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5876,
											"end": 5892,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5714,
											"end": 5898,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5714,
											"end": 5898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6598,
											"end": 6726,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 6598,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6665,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6665,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6665,
											"end": 6674,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6686,
											"end": 6697,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6686,
											"end": 6697,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6686,
											"end": 6697,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6720,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 6683,
											"end": 6720,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6700,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 6700,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 6700,
											"end": 6718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 6948,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 6731,
											"end": 6948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6771,
											"end": 6772,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6797,
											"end": 6798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6787,
											"end": 6919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 6787,
											"end": 6919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6841,
											"end": 6851,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 6836,
											"end": 6839,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6832,
											"end": 6852,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6829,
											"end": 6830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6822,
											"end": 6853,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6876,
											"end": 6880,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 6873,
											"end": 6874,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6904,
											"end": 6908,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6901,
											"end": 6902,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6894,
											"end": 6909,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6787,
											"end": 6919,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 6787,
											"end": 6919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6933,
											"end": 6942,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 6942,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 6948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6953,
											"end": 7121,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6953,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7035,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7035,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7035,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7057,
											"end": 7066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7057,
											"end": 7066,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7074,
											"end": 7089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7074,
											"end": 7089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7074,
											"end": 7089,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7068,
											"end": 7090,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7068,
											"end": 7090,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7054,
											"end": 7091,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7044,
											"end": 7115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 7044,
											"end": 7115,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7095,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 7095,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 7095,
											"end": 7113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"IFairLaunchFactory.sol",
								"StakingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addressWithdrewERC20Reward(address,address)": "609c878a",
							"degeneratorStakers()": "a163beea",
							"degeneratorStakingPool()": "ad5a402b",
							"erc20Supplies(address)": "caf10b57",
							"factory()": "c45a0155",
							"factoryAddress()": "966dae0e",
							"getTokenEligibility(address,address)": "acde6597",
							"getTokenReward(address,address)": "a164959d",
							"minimumStakeAmount()": "6b036f45",
							"multiSigAddress()": "1516def7",
							"registerERC20Supply(address,uint256)": "8167ee72",
							"rewardBlackoutPeriod()": "9f8932f4",
							"setMinimumStakeAmount(uint256)": "0d29fcd4",
							"setRewardBlackoutPeriod(uint256)": "9b29d215",
							"stakeDegnerator(uint256)": "41fee557",
							"tokenAddress()": "9d76ea58",
							"withdrawDegenerator()": "95adb5ad",
							"withdrawRewards(address[])": "62d76d06"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factoryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_multiSigAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minimumStakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardBlackoutPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockStaked\",\"type\":\"uint256\"}],\"name\":\"degeneratorStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"degeneratorWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressWithdrewERC20Reward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"degeneratorStakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"degeneratorStakingPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"erc20Supplies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockSupplied\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingPoolSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"degeneratorPoolSizeAtTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"registered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IFairLaunchFactoryV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getTokenEligibility\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getTokenReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multiSigAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolSupply\",\"type\":\"uint256\"}],\"name\":\"registerERC20Supply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardBlackoutPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMinimumStakeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_length\",\"type\":\"uint256\"}],\"name\":\"setRewardBlackoutPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakeDegnerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawDegenerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokenAddresses\",\"type\":\"address[]\"}],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StakingContract.sol\":\"DegeneratorStaking\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"IFairLaunchFactory.sol\":{\"keccak256\":\"0xaa6526fcf7fbe840528469d9c59a4b48db3338f88c0a23310bcd993ef911970c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db0e44973647b74fc0d55f183673dca975407230d7029e7ddb26d1b20111877d\",\"dweb:/ipfs/Qmd44sHN2LibRGUzAmtL4WrnE2bFhpyEge6BJ4SqBptthH\"]},\"StakingContract.sol\":{\"keccak256\":\"0x435151850f762d0cd21e70346d6be4c587be07c8efa7dac21bf6f5b32a003002\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://762dff195af49d33e6828649b7e0023dbda39aba77b0fe8958ef8bb5f91c816d\",\"dweb:/ipfs/QmPoNasCwBG5i3he81Smej4ttAb5yDkZbFBCFnzE2Sf6Cw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "StakingContract.sol:DegeneratorStaking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 504,
								"contract": "StakingContract.sol:DegeneratorStaking",
								"label": "factoryAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 506,
								"contract": "StakingContract.sol:DegeneratorStaking",
								"label": "multiSigAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 508,
								"contract": "StakingContract.sol:DegeneratorStaking",
								"label": "tokenAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 510,
								"contract": "StakingContract.sol:DegeneratorStaking",
								"label": "minimumStakeAmount",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 512,
								"contract": "StakingContract.sol:DegeneratorStaking",
								"label": "rewardBlackoutPeriod",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 515,
								"contract": "StakingContract.sol:DegeneratorStaking",
								"label": "factory",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IFairLaunchFactoryV1)491"
							},
							{
								"astId": 517,
								"contract": "StakingContract.sol:DegeneratorStaking",
								"label": "degeneratorStakingPool",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 519,
								"contract": "StakingContract.sol:DegeneratorStaking",
								"label": "degeneratorStakers",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 582,
								"contract": "StakingContract.sol:DegeneratorStaking",
								"label": "addressStake",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_struct(Stake)566_storage)"
							},
							{
								"astId": 587,
								"contract": "StakingContract.sol:DegeneratorStaking",
								"label": "erc20Supplies",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_struct(ERC20Supply)577_storage)"
							},
							{
								"astId": 593,
								"contract": "StakingContract.sol:DegeneratorStaking",
								"label": "addressWithdrewERC20Reward",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IFairLaunchFactoryV1)491": {
								"encoding": "inplace",
								"label": "contract IFairLaunchFactoryV1",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_struct(ERC20Supply)577_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DegeneratorStaking.ERC20Supply)",
								"numberOfBytes": "32",
								"value": "t_struct(ERC20Supply)577_storage"
							},
							"t_mapping(t_address,t_struct(Stake)566_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DegeneratorStaking.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)566_storage"
							},
							"t_struct(ERC20Supply)577_storage": {
								"encoding": "inplace",
								"label": "struct DegeneratorStaking.ERC20Supply",
								"members": [
									{
										"astId": 568,
										"contract": "StakingContract.sol:DegeneratorStaking",
										"label": "poolSupply",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 570,
										"contract": "StakingContract.sol:DegeneratorStaking",
										"label": "blockSupplied",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 572,
										"contract": "StakingContract.sol:DegeneratorStaking",
										"label": "remainingPoolSupply",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 574,
										"contract": "StakingContract.sol:DegeneratorStaking",
										"label": "degeneratorPoolSizeAtTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 576,
										"contract": "StakingContract.sol:DegeneratorStaking",
										"label": "registered",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(Stake)566_storage": {
								"encoding": "inplace",
								"label": "struct DegeneratorStaking.Stake",
								"members": [
									{
										"astId": 559,
										"contract": "StakingContract.sol:DegeneratorStaking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 561,
										"contract": "StakingContract.sol:DegeneratorStaking",
										"label": "blockStaked",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 563,
										"contract": "StakingContract.sol:DegeneratorStaking",
										"label": "withdrawn",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 565,
										"contract": "StakingContract.sol:DegeneratorStaking",
										"label": "activeDeposit",
										"offset": 1,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 321,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 320,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								320
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							290
						]
					},
					"id": 291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 290,
							"linearizedBaseContracts": [
								290
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 224,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 233,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 290,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 290,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 290,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 290,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 290,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 290,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 291,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								224,
								233
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 292,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 293,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 298,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 297,
												"id": 300,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 320,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 307,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 306,
												"id": 309,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 320,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 315,
												"id": 317,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 320,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 321,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"IFairLaunchFactory.sol": {
				"ast": {
					"absolutePath": "IFairLaunchFactory.sol",
					"exportedSymbols": {
						"IFairLaunchFactoryV1": [
							491
						]
					},
					"id": 492,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFairLaunchFactoryV1",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 491,
							"linearizedBaseContracts": [
								491
							],
							"name": "IFairLaunchFactoryV1",
							"nameLocation": "66:20:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "6286116a",
									"id": 327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factoryFee",
									"nameLocation": "102:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "112:2:4"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "138:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "138:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "137:9:4"
									},
									"scope": 491,
									"src": "93:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18b7d5ed",
									"id": 332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factoryBaseFee",
									"nameLocation": "161:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "175:2:4"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "201:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "201:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "200:9:4"
									},
									"scope": 491,
									"src": "152:58:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ee99205c",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakingContract",
									"nameLocation": "224:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "239:2:4"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "265:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "264:9:4"
									},
									"scope": 491,
									"src": "215:59:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1516def7",
									"id": 342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multiSigAddress",
									"nameLocation": "288:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:4"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "329:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "328:9:4"
									},
									"scope": 491,
									"src": "279:59:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "97f6c25d",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factoryToken",
									"nameLocation": "352:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "364:2:4"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "390:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:9:4"
									},
									"scope": 491,
									"src": "343:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e1ee981a",
									"id": 352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "launchpadsGenerated",
									"nameLocation": "413:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:2:4"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "458:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:9:4"
									},
									"scope": 491,
									"src": "404:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d2c3bb3c",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factoryOpen",
									"nameLocation": "481:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "492:2:4"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "518:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 354,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "518:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:6:4"
									},
									"scope": 491,
									"src": "472:52:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a4b7914e",
									"id": 364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isFactoryToken",
									"nameLocation": "538:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "561:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "553:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "553:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "552:18:4"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "594:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "594:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "593:6:4"
									},
									"scope": 491,
									"src": "529:71:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d8eba892",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakingContractFactoryTokenAllocations",
									"nameLocation": "614:38:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "661:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "653:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "652:18:4"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "694:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:9:4"
									},
									"scope": 491,
									"src": "605:98:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f06fafb6",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addressIsLaunchpad",
									"nameLocation": "717:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "744:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "736:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:18:4"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "777:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 375,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:6:4"
									},
									"scope": 491,
									"src": "708:75:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "5494683ee1849b1bc19e83430e6ce813a9c3616e0b27e8051c945a87f87693fa",
									"id": 390,
									"name": "LaunchPadGenerated",
									"nameLocation": "795:18:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"indexed": true,
												"mutability": "mutable",
												"name": "LaunchpaddAddress",
												"nameLocation": "830:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "814:33:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "814:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"indexed": true,
												"mutability": "mutable",
												"name": "launchpadNumber",
												"nameLocation": "865:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "849:31:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"indexed": false,
												"mutability": "mutable",
												"name": "hardcap",
												"nameLocation": "890:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "882:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"indexed": false,
												"mutability": "mutable",
												"name": "softcap",
												"nameLocation": "907:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "899:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"mutability": "mutable",
												"name": "founderAddres",
												"nameLocation": "924:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "916:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "813:125:4"
									},
									"src": "789:150:4"
								},
								{
									"anonymous": false,
									"eventSelector": "c7110035cc1757a16f9f9a14835a5c44f2e6003b02b8f17fcaac8c1da032f889",
									"id": 396,
									"name": "multiSigWithdrawal",
									"nameLocation": "950:18:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawSender",
												"nameLocation": "977:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "969:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawalAmount",
												"nameLocation": "1001:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "993:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:50:4"
									},
									"src": "944:75:4"
								},
								{
									"anonymous": false,
									"eventSelector": "393014302eb5aa93ea9465c0762de1444d7f4377a0b192a5e021d92fd8d881d7",
									"id": 400,
									"name": "FactoryTokenRegistered",
									"nameLocation": "1030:22:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "1069:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1053:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1052:30:4"
									},
									"src": "1024:59:4"
								},
								{
									"anonymous": false,
									"eventSelector": "da22880c1f65afce17bffacb7ce44c92e858ffe3cafdde2c868d665e177e1c2a",
									"id": 404,
									"name": "FactoryFeeSet",
									"nameLocation": "1094:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFee",
												"nameLocation": "1116:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1108:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:16:4"
									},
									"src": "1088:36:4"
								},
								{
									"anonymous": false,
									"eventSelector": "fdcd0f66eaa2e719ee1658b24c03a47e554452908214404eeb08645fc5b367af",
									"id": 408,
									"name": "FactoryBaseFeeSet",
									"nameLocation": "1135:17:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBaseFee",
												"nameLocation": "1161:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "1153:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1153:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1152:20:4"
									},
									"src": "1129:44:4"
								},
								{
									"anonymous": false,
									"eventSelector": "1253844b0fff3da7dd2829de816c9b4f94c238cf2bf6eb72c02c7d6f2b53beac",
									"id": 412,
									"name": "StakingContractSet",
									"nameLocation": "1184:18:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"indexed": true,
												"mutability": "mutable",
												"name": "newStakingContract",
												"nameLocation": "1219:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "1203:34:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:36:4"
									},
									"src": "1178:61:4"
								},
								{
									"anonymous": false,
									"eventSelector": "bb66a70be412f0767b2216b1c39e5e5c3f1a49fea18ebccfeb565f352805fcc7",
									"id": 416,
									"name": "FactoryClosed",
									"nameLocation": "1250:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"indexed": false,
												"mutability": "mutable",
												"name": "factoryOpen",
												"nameLocation": "1269:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "1264:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1264:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1263:18:4"
									},
									"src": "1244:38:4"
								},
								{
									"functionSelector": "f1a74b55",
									"id": 439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createFairLaunchpad",
									"nameLocation": "1297:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1341:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1327:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 417,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1327:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1370:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1356:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 419,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1356:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "_totalSupply",
												"nameLocation": "1395:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1387:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1387:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "_presaleLaunchpad",
												"nameLocation": "1422:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1417:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 423,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1417:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "_presaleHardcap",
												"nameLocation": "1458:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1450:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1450:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "_presaleSoftcap",
												"nameLocation": "1491:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1483:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1483:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "_presaleLengthBlocks",
												"nameLocation": "1524:20:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1516:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1516:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "_presaleMaxContribution",
												"nameLocation": "1562:23:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1554:31:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1554:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "_presaleMinContribution",
												"nameLocation": "1603:23:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1595:31:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1595:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "_founderSupplyAllocation",
												"nameLocation": "1644:24:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1636:32:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1636:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:358:4"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1691:0:4"
									},
									"scope": 491,
									"src": "1288:404:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "25cd6921",
									"id": 442,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawToMultiSig",
									"nameLocation": "1707:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1725:2:4"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1736:0:4"
									},
									"scope": 491,
									"src": "1698:39:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "96b37277",
									"id": 449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerFactoryToken",
									"nameLocation": "1752:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1781:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "1773:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "_stakingContractAllocation",
												"nameLocation": "1799:26:4",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "1791:34:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:54:4"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1835:0:4"
									},
									"scope": 491,
									"src": "1743:93:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "03545f6a",
									"id": 454,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFactoryFee",
									"nameLocation": "1851:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "_newFee",
												"nameLocation": "1873:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1865:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1865:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1864:17:4"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1890:0:4"
									},
									"scope": 491,
									"src": "1842:49:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3ee014a7",
									"id": 459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFactoryBaseFee",
									"nameLocation": "1906:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "_newFee",
												"nameLocation": "1932:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1924:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1923:17:4"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1949:0:4"
									},
									"scope": 491,
									"src": "1897:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dd373b9",
									"id": 464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setStakingContract",
									"nameLocation": "1965:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "_newStakingContract",
												"nameLocation": "1992:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1984:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1984:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1983:29:4"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2021:0:4"
									},
									"scope": 491,
									"src": "1956:66:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "82b3aa08",
									"id": 469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "closeFactory",
									"nameLocation": "2037:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "_factoryOpen",
												"nameLocation": "2055:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "2050:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2050:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2049:19:4"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2077:0:4"
									},
									"scope": 491,
									"src": "2028:50:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "53cbd07e",
									"id": 476,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAddressLaunchpad",
									"nameLocation": "2093:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "2120:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2112:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2112:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:18:4"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2152:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 473,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2152:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2151:6:4"
									},
									"scope": 491,
									"src": "2084:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d16aeae",
									"id": 483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAddressFactoryToken",
									"nameLocation": "2173:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "2203:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2195:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:18:4"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2235:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 480,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2235:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2234:6:4"
									},
									"scope": 491,
									"src": "2164:77:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "22022de6",
									"id": 490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenStakingContractAllocation",
									"nameLocation": "2256:33:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "2298:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "2290:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:18:4"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "2331:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2330:9:4"
									},
									"scope": 491,
									"src": "2247:93:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 492,
							"src": "56:2286:4",
							"usedErrors": [],
							"usedEvents": [
								390,
								396,
								400,
								404,
								408,
								412,
								416
							]
						}
					],
					"src": "32:2310:4"
				},
				"id": 4
			},
			"StakingContract.sol": {
				"ast": {
					"absolutePath": "StakingContract.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"DegeneratorStaking": [
							1075
						],
						"IERC20": [
							290
						],
						"IFairLaunchFactoryV1": [
							491
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						]
					},
					"id": 1076,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 493,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 494,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1076,
							"sourceUnit": 321,
							"src": "102:51:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 495,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1076,
							"sourceUnit": 148,
							"src": "154:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 496,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1076,
							"sourceUnit": 291,
							"src": "226:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 497,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1076,
							"sourceUnit": 213,
							"src": "325:62:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IFairLaunchFactory.sol",
							"file": "./IFairLaunchFactory.sol",
							"id": 498,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1076,
							"sourceUnit": 492,
							"src": "388:34:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 499,
										"name": "Context",
										"nameLocations": [
											"455:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "455:7:5"
									},
									"id": 500,
									"nodeType": "InheritanceSpecifier",
									"src": "455:7:5"
								},
								{
									"baseName": {
										"id": 501,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"464:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "464:15:5"
									},
									"id": 502,
									"nodeType": "InheritanceSpecifier",
									"src": "464:15:5"
								}
							],
							"canonicalName": "DegeneratorStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1075,
							"linearizedBaseContracts": [
								1075,
								212,
								320
							],
							"name": "DegeneratorStaking",
							"nameLocation": "433:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "966dae0e",
									"id": 504,
									"mutability": "mutable",
									"name": "factoryAddress",
									"nameLocation": "501:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1075,
									"src": "486:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 503,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "486:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1516def7",
									"id": 506,
									"mutability": "mutable",
									"name": "multiSigAddress",
									"nameLocation": "536:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1075,
									"src": "521:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 505,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "521:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9d76ea58",
									"id": 508,
									"mutability": "mutable",
									"name": "tokenAddress",
									"nameLocation": "572:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1075,
									"src": "557:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 507,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "557:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6b036f45",
									"id": 510,
									"mutability": "mutable",
									"name": "minimumStakeAmount",
									"nameLocation": "605:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1075,
									"src": "590:33:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 509,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "590:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9f8932f4",
									"id": 512,
									"mutability": "mutable",
									"name": "rewardBlackoutPeriod",
									"nameLocation": "644:20:5",
									"nodeType": "VariableDeclaration",
									"scope": 1075,
									"src": "629:35:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 511,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "629:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c45a0155",
									"id": 515,
									"mutability": "mutable",
									"name": "factory",
									"nameLocation": "698:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1075,
									"src": "670:35:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IFairLaunchFactoryV1_$491",
										"typeString": "contract IFairLaunchFactoryV1"
									},
									"typeName": {
										"id": 514,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 513,
											"name": "IFairLaunchFactoryV1",
											"nameLocations": [
												"670:20:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 491,
											"src": "670:20:5"
										},
										"referencedDeclaration": 491,
										"src": "670:20:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IFairLaunchFactoryV1_$491",
											"typeString": "contract IFairLaunchFactoryV1"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ad5a402b",
									"id": 517,
									"mutability": "mutable",
									"name": "degeneratorStakingPool",
									"nameLocation": "727:22:5",
									"nodeType": "VariableDeclaration",
									"scope": 1075,
									"src": "712:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 516,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "712:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a163beea",
									"id": 519,
									"mutability": "mutable",
									"name": "degeneratorStakers",
									"nameLocation": "770:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1075,
									"src": "755:33:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 518,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "755:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "821:75:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 522,
																	"name": "addressStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "839:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$566_storage_$",
																		"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																	}
																},
																"id": 525,
																"indexExpression": {
																	"expression": {
																		"id": 523,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "852:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "856:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "852:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "839:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$566_storage",
																	"typeString": "struct DegeneratorStaking.Stake storage ref"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "864:13:5",
															"memberName": "activeDeposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 565,
															"src": "839:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 521,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "831:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "831:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "831:47:5"
											},
											{
												"id": 529,
												"nodeType": "PlaceholderStatement",
												"src": "888:1:5"
											}
										]
									},
									"id": 531,
									"name": "onlyStaker",
									"nameLocation": "808:10:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "818:2:5"
									},
									"src": "799:97:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "927:121:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 536,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "972:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "976:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "972:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 534,
																		"name": "factory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 515,
																		"src": "945:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IFairLaunchFactoryV1_$491",
																			"typeString": "contract IFairLaunchFactoryV1"
																		}
																	},
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "953:18:5",
																	"memberName": "isAddressLaunchpad",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 476,
																	"src": "945:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view external returns (bool)"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "945:38:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "987:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "945:46:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 533,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "937:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "937:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "937:55:5"
											},
											{
												"id": 543,
												"nodeType": "PlaceholderStatement",
												"src": "1002:1:5"
											}
										]
									},
									"id": 545,
									"name": "launchpadOnly",
									"nameLocation": "911:13:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "924:2:5"
									},
									"src": "902:146:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "1078:152:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 548,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1096:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1100:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1096:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 550,
																"name": "multiSigAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "1110:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1096:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206d756c746953696720616464726573732063616e2063616c6c20746869732066756e6374696f6e",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1127:46:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a89e8792d12ab2935107c47df3d6e37408b35c7947605d9909710024cead9a50",
																"typeString": "literal_string \"Only multiSig address can call this function\""
															},
															"value": "Only multiSig address can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a89e8792d12ab2935107c47df3d6e37408b35c7947605d9909710024cead9a50",
																"typeString": "literal_string \"Only multiSig address can call this function\""
															}
														],
														"id": 547,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1088:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1088:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "1088:86:5"
											},
											{
												"id": 555,
												"nodeType": "PlaceholderStatement",
												"src": "1184:1:5"
											}
										]
									},
									"id": 557,
									"name": "multiSigOnly",
									"nameLocation": "1063:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1075:2:5"
									},
									"src": "1054:176:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "DegeneratorStaking.Stake",
									"id": 566,
									"members": [
										{
											"constant": false,
											"id": 559,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1267:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 566,
											"src": "1259:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 558,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1259:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 561,
											"mutability": "mutable",
											"name": "blockStaked",
											"nameLocation": "1291:11:5",
											"nodeType": "VariableDeclaration",
											"scope": 566,
											"src": "1283:19:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 560,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1283:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 563,
											"mutability": "mutable",
											"name": "withdrawn",
											"nameLocation": "1317:9:5",
											"nodeType": "VariableDeclaration",
											"scope": 566,
											"src": "1312:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 562,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1312:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 565,
											"mutability": "mutable",
											"name": "activeDeposit",
											"nameLocation": "1341:13:5",
											"nodeType": "VariableDeclaration",
											"scope": 566,
											"src": "1336:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 564,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1336:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "1243:5:5",
									"nodeType": "StructDefinition",
									"scope": 1075,
									"src": "1236:125:5",
									"visibility": "public"
								},
								{
									"canonicalName": "DegeneratorStaking.ERC20Supply",
									"id": 577,
									"members": [
										{
											"constant": false,
											"id": 568,
											"mutability": "mutable",
											"name": "poolSupply",
											"nameLocation": "1404:10:5",
											"nodeType": "VariableDeclaration",
											"scope": 577,
											"src": "1396:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 567,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1396:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 570,
											"mutability": "mutable",
											"name": "blockSupplied",
											"nameLocation": "1432:13:5",
											"nodeType": "VariableDeclaration",
											"scope": 577,
											"src": "1424:21:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 569,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1424:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 572,
											"mutability": "mutable",
											"name": "remainingPoolSupply",
											"nameLocation": "1463:19:5",
											"nodeType": "VariableDeclaration",
											"scope": 577,
											"src": "1455:27:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 571,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1455:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 574,
											"mutability": "mutable",
											"name": "degeneratorPoolSizeAtTime",
											"nameLocation": "1500:25:5",
											"nodeType": "VariableDeclaration",
											"scope": 577,
											"src": "1492:33:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 573,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1492:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 576,
											"mutability": "mutable",
											"name": "registered",
											"nameLocation": "1541:10:5",
											"nodeType": "VariableDeclaration",
											"scope": 577,
											"src": "1536:15:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 575,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1536:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Supply",
									"nameLocation": "1374:11:5",
									"nodeType": "StructDefinition",
									"scope": 1075,
									"src": "1367:191:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 582,
									"mutability": "mutable",
									"name": "addressStake",
									"nameLocation": "1598:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1075,
									"src": "1564:46:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$566_storage_$",
										"typeString": "mapping(address => struct DegeneratorStaking.Stake)"
									},
									"typeName": {
										"id": 581,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 578,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1572:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1564:25:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$566_storage_$",
											"typeString": "mapping(address => struct DegeneratorStaking.Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 580,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 579,
												"name": "Stake",
												"nameLocations": [
													"1583:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 566,
												"src": "1583:5:5"
											},
											"referencedDeclaration": 566,
											"src": "1583:5:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$566_storage_ptr",
												"typeString": "struct DegeneratorStaking.Stake"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "caf10b57",
									"id": 587,
									"mutability": "mutable",
									"name": "erc20Supplies",
									"nameLocation": "1655:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 1075,
									"src": "1616:52:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$577_storage_$",
										"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply)"
									},
									"typeName": {
										"id": 586,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 583,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1624:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1616:31:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$577_storage_$",
											"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 585,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 584,
												"name": "ERC20Supply",
												"nameLocations": [
													"1635:11:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 577,
												"src": "1635:11:5"
											},
											"referencedDeclaration": 577,
											"src": "1635:11:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ERC20Supply_$577_storage_ptr",
												"typeString": "struct DegeneratorStaking.ERC20Supply"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "609c878a",
									"id": 593,
									"mutability": "mutable",
									"name": "addressWithdrewERC20Reward",
									"nameLocation": "1726:26:5",
									"nodeType": "VariableDeclaration",
									"scope": 1075,
									"src": "1674:78:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 592,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 588,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1682:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1674:44:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 591,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 589,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1701:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1693:24:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 590,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1712:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "0ae860169ef88b6e5a084a54675af932ac7be23de4abd34a1d99a5a8402a17cc",
									"id": 601,
									"name": "degeneratorStaked",
									"nameLocation": "1765:17:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1799:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1783:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1783:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1815:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1807:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockStaked",
												"nameLocation": "1831:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1823:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1823:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1782:61:5"
									},
									"src": "1759:85:5"
								},
								{
									"anonymous": false,
									"eventSelector": "14eed693e6d30152612ee94c12df593a490178621d3730e516b012e064eeef8f",
									"id": 607,
									"name": "degeneratorWithdrawn",
									"nameLocation": "1855:20:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1892:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "1876:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1876:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1908:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "1900:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1900:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1875:40:5"
									},
									"src": "1849:67:5"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "2069:303:5",
										"statements": [
											{
												"expression": {
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 620,
														"name": "factoryAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "2079:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 621,
														"name": "_factoryAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "2096:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2079:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "2079:32:5"
											},
											{
												"expression": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 624,
														"name": "multiSigAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "2121:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 625,
														"name": "_multiSigAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "2139:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2121:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "2121:34:5"
											},
											{
												"expression": {
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 628,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "2165:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 629,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "2180:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2165:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "2165:28:5"
											},
											{
												"expression": {
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 632,
														"name": "rewardBlackoutPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "2203:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 633,
														"name": "_rewardBlackoutPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "2226:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2203:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "2203:44:5"
											},
											{
												"expression": {
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 636,
														"name": "minimumStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "2257:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 637,
														"name": "_minimumStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "2278:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2257:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 639,
												"nodeType": "ExpressionStatement",
												"src": "2257:40:5"
											},
											{
												"expression": {
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 640,
														"name": "degeneratorStakingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "2307:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2332:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2307:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "2307:26:5"
											},
											{
												"expression": {
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 644,
														"name": "degeneratorStakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "2343:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2364:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2343:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "2343:22:5"
											}
										]
									},
									"id": 649,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "_factoryAddress",
												"nameLocation": "1942:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "1934:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1934:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "_multiSigAddress",
												"nameLocation": "1967:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "1959:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "1994:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "1986:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1986:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "_minimumStakeAmount",
												"nameLocation": "2017:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "2009:27:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "_rewardBlackoutPeriod",
												"nameLocation": "2046:21:5",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "2038:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2038:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1933:135:5"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:5"
									},
									"scope": 1075,
									"src": "1922:450:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "2440:554:5",
										"statements": [
											{
												"assignments": [
													658
												],
												"declarations": [
													{
														"constant": false,
														"id": 658,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "2457:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 726,
														"src": "2450:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 657,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 656,
																"name": "IERC20",
																"nameLocations": [
																	"2450:6:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 290,
																"src": "2450:6:5"
															},
															"referencedDeclaration": 290,
															"src": "2450:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 662,
												"initialValue": {
													"arguments": [
														{
															"id": 660,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "2472:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 659,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2465:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$290_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2465:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2450:35:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 664,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "2503:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 665,
																"name": "minimumStakeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "2513:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2503:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2533:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 663,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2495:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2495:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "2495:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 673,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "2605:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2605:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 677,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2627:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DegeneratorStaking_$1075",
																				"typeString": "contract DegeneratorStaking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DegeneratorStaking_$1075",
																				"typeString": "contract DegeneratorStaking"
																			}
																		],
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2619:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 675,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2619:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2619:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 679,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "2634:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 671,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "2586:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$290",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2592:12:5",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 289,
																"src": "2586:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2586:56:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2644:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2578:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2578:84:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "2578:84:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2680:41:5",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 685,
																		"name": "addressStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "2681:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$566_storage_$",
																			"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																		}
																	},
																	"id": 688,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 686,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "2694:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2694:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2681:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$566_storage",
																		"typeString": "struct DegeneratorStaking.Stake storage ref"
																	}
																},
																"id": 689,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2708:13:5",
																"memberName": "activeDeposit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 565,
																"src": "2681:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2672:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2672:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "2672:50:5"
											},
											{
												"expression": {
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 693,
																"name": "addressStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "2733:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$566_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																}
															},
															"id": 696,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 694,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "2746:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2746:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2733:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$566_storage",
																"typeString": "struct DegeneratorStaking.Stake storage ref"
															}
														},
														"id": 697,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2760:6:5",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 559,
														"src": "2733:33:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 698,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "2770:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2733:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "2733:44:5"
											},
											{
												"expression": {
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 701,
																"name": "addressStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "2787:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$566_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																}
															},
															"id": 704,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 702,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "2800:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2800:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2787:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$566_storage",
																"typeString": "struct DegeneratorStaking.Stake storage ref"
															}
														},
														"id": 705,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2814:11:5",
														"memberName": "blockStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 561,
														"src": "2787:38:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 706,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2828:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2834:6:5",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "2828:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2787:53:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "2787:53:5"
											},
											{
												"expression": {
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 710,
														"name": "degeneratorStakingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "2850:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 711,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "2876:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2850:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "2850:33:5"
											},
											{
												"expression": {
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 714,
														"name": "degeneratorStakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "2893:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2915:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2893:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "2893:23:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 719,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "2950:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2950:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 721,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "2964:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 722,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2973:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2979:6:5",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "2973:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 718,
														"name": "degeneratorStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "2932:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2932:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "EmitStatement",
												"src": "2927:59:5"
											}
										]
									},
									"functionSelector": "41fee557",
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 654,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 653,
												"name": "nonReentrant",
												"nameLocations": [
													"2427:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "2427:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2427:12:5"
										}
									],
									"name": "stakeDegnerator",
									"nameLocation": "2387:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2411:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "2403:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2403:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2402:17:5"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2440:0:5"
									},
									"scope": 1075,
									"src": "2378:616:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "3051:684:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 733,
																		"name": "addressStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "3069:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$566_storage_$",
																			"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																		}
																	},
																	"id": 736,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 734,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "3082:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3082:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3069:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$566_storage",
																		"typeString": "struct DegeneratorStaking.Stake storage ref"
																	}
																},
																"id": 737,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3096:6:5",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 559,
																"src": "3069:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3105:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3069:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207374616b6520666f756e64",
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3108:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															},
															"value": "No stake found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															}
														],
														"id": 732,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3061:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3061:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "3061:64:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3143:37:5",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 744,
																		"name": "addressStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "3144:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$566_storage_$",
																			"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																		}
																	},
																	"id": 747,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 745,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "3157:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3157:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3144:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$566_storage",
																		"typeString": "struct DegeneratorStaking.Stake storage ref"
																	}
																},
																"id": 748,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3171:9:5",
																"memberName": "withdrawn",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 563,
																"src": "3144:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b6520616c72656164792077697468647261776e",
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3182:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_644e8db99e7c305cbaf9ab7cf4dfbbf8e9d24808e86a7c505456e21dd10275ce",
																"typeString": "literal_string \"Stake already withdrawn\""
															},
															"value": "Stake already withdrawn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_644e8db99e7c305cbaf9ab7cf4dfbbf8e9d24808e86a7c505456e21dd10275ce",
																"typeString": "literal_string \"Stake already withdrawn\""
															}
														],
														"id": 743,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3135:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3135:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "3135:73:5"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "3225:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 824,
														"src": "3218:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 754,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 753,
																"name": "IERC20",
																"nameLocations": [
																	"3218:6:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 290,
																"src": "3218:6:5"
															},
															"referencedDeclaration": 290,
															"src": "3218:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 759,
												"initialValue": {
													"arguments": [
														{
															"id": 757,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3240:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 756,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "3233:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$290_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3233:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3218:35:5"
											},
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3271:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 824,
														"src": "3263:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3263:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 767,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 762,
															"name": "addressStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "3280:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$566_storage_$",
																"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
															}
														},
														"id": 765,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 763,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "3293:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3293:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3280:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$566_storage",
															"typeString": "struct DegeneratorStaking.Stake storage ref"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3307:6:5",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 559,
													"src": "3280:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3263:50:5"
											},
											{
												"expression": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 768,
																"name": "addressStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "3323:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$566_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																}
															},
															"id": 771,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 769,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "3336:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3336:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3323:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$566_storage",
																"typeString": "struct DegeneratorStaking.Stake storage ref"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3350:9:5",
														"memberName": "withdrawn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 563,
														"src": "3323:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3362:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3323:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "3323:43:5"
											},
											{
												"expression": {
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 776,
																"name": "addressStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "3376:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$566_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																}
															},
															"id": 779,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 777,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "3389:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3389:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3376:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$566_storage",
																"typeString": "struct DegeneratorStaking.Stake storage ref"
															}
														},
														"id": 780,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3403:13:5",
														"memberName": "activeDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 565,
														"src": "3376:40:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3419:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3376:48:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "3376:48:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 787,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "3458:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3458:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 789,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "3472:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 785,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "3443:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$290",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3449:8:5",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 257,
																"src": "3443:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3443:36:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3481:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 784,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3435:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3435:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "3435:64:5"
											},
											{
												"expression": {
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 794,
														"name": "degeneratorStakingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "3509:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 795,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "3535:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3509:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "3509:32:5"
											},
											{
												"expression": {
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 798,
														"name": "degeneratorStakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "3551:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3573:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3551:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "3551:23:5"
											},
											{
												"expression": {
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 802,
																"name": "addressStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "3584:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$566_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																}
															},
															"id": 805,
															"indexExpression": {
																"expression": {
																	"id": 803,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3597:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3601:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3597:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3584:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$566_storage",
																"typeString": "struct DegeneratorStaking.Stake storage ref"
															}
														},
														"id": 806,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3609:6:5",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 559,
														"src": "3584:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3618:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3584:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "3584:35:5"
											},
											{
												"expression": {
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 810,
																"name": "addressStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "3629:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$566_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																}
															},
															"id": 813,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 811,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "3642:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3642:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3629:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$566_storage",
																"typeString": "struct DegeneratorStaking.Stake storage ref"
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3656:11:5",
														"memberName": "blockStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 561,
														"src": "3629:38:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3670:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3629:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "3629:42:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 819,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "3707:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3707:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 821,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "3721:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "degeneratorWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "3686:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3686:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "EmitStatement",
												"src": "3681:47:5"
											}
										]
									},
									"functionSelector": "95adb5ad",
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 730,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 729,
												"name": "nonReentrant",
												"nameLocations": [
													"3038:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "3038:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3038:12:5"
										}
									],
									"name": "withdrawDegenerator",
									"nameLocation": "3009:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:2:5"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3051:0:5"
									},
									"scope": 1075,
									"src": "3000:735:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "3834:439:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 841,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3892:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_DegeneratorStaking_$1075",
																					"typeString": "contract DegeneratorStaking"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_DegeneratorStaking_$1075",
																					"typeString": "contract DegeneratorStaking"
																				}
																			],
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3884:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 839,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3884:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3884:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 836,
																				"name": "_tokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 827,
																				"src": "3859:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 835,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 290,
																			"src": "3852:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$290_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3852:21:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$290",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3874:9:5",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 247,
																	"src": "3852:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3852:46:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 844,
																"name": "_poolSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "3902:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3852:61:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 834,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3844:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3844:70:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "3844:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3932:40:5",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 849,
																		"name": "erc20Supplies",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "3933:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$577_storage_$",
																			"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply storage ref)"
																		}
																	},
																	"id": 851,
																	"indexExpression": {
																		"id": 850,
																		"name": "_tokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 827,
																		"src": "3947:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3933:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Supply_$577_storage",
																		"typeString": "struct DegeneratorStaking.ERC20Supply storage ref"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3962:10:5",
																"memberName": "registered",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 576,
																"src": "3933:39:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 848,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3924:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3924:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "3924:49:5"
											},
											{
												"expression": {
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 856,
																"name": "erc20Supplies",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 587,
																"src": "3983:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$577_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply storage ref)"
																}
															},
															"id": 858,
															"indexExpression": {
																"id": 857,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "3997:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3983:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Supply_$577_storage",
																"typeString": "struct DegeneratorStaking.ERC20Supply storage ref"
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4012:13:5",
														"memberName": "blockSupplied",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 570,
														"src": "3983:42:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 860,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4028:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4034:6:5",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "4028:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3983:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "3983:57:5"
											},
											{
												"expression": {
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 864,
																"name": "erc20Supplies",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 587,
																"src": "4050:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$577_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply storage ref)"
																}
															},
															"id": 866,
															"indexExpression": {
																"id": 865,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "4064:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4050:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Supply_$577_storage",
																"typeString": "struct DegeneratorStaking.ERC20Supply storage ref"
															}
														},
														"id": 867,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4079:10:5",
														"memberName": "poolSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 568,
														"src": "4050:39:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 868,
														"name": "_poolSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "4092:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4050:53:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "4050:53:5"
											},
											{
												"expression": {
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 871,
																"name": "erc20Supplies",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 587,
																"src": "4114:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$577_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply storage ref)"
																}
															},
															"id": 873,
															"indexExpression": {
																"id": 872,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "4128:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4114:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Supply_$577_storage",
																"typeString": "struct DegeneratorStaking.ERC20Supply storage ref"
															}
														},
														"id": 874,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4143:19:5",
														"memberName": "remainingPoolSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 572,
														"src": "4114:48:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 875,
														"name": "_poolSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "4165:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4114:62:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "4114:62:5"
											},
											{
												"expression": {
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 878,
																"name": "erc20Supplies",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 587,
																"src": "4187:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$577_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply storage ref)"
																}
															},
															"id": 880,
															"indexExpression": {
																"id": 879,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "4201:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4187:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Supply_$577_storage",
																"typeString": "struct DegeneratorStaking.ERC20Supply storage ref"
															}
														},
														"id": 881,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4216:25:5",
														"memberName": "degeneratorPoolSizeAtTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 574,
														"src": "4187:54:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 882,
														"name": "degeneratorStakingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "4244:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4187:79:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "4187:79:5"
											}
										]
									},
									"functionSelector": "8167ee72",
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 832,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 831,
												"name": "nonReentrant",
												"nameLocations": [
													"3821:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "3821:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3821:12:5"
										}
									],
									"name": "registerERC20Supply",
									"nameLocation": "3750:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "3778:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "3770:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "_poolSupply",
												"nameLocation": "3801:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "3793:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3793:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3769:44:5"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3834:0:5"
									},
									"scope": 1075,
									"src": "3741:532:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "4376:471:5",
										"statements": [
											{
												"body": {
													"id": 961,
													"nodeType": "Block",
													"src": "4439:402:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 909,
																					"name": "_tokenAddresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 889,
																					"src": "4481:15:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																						"typeString": "address[] calldata"
																					}
																				},
																				"id": 911,
																				"indexExpression": {
																					"id": 910,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "4497:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4481:18:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"expression": {
																					"id": 912,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4501:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 913,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4505:6:5",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4501:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 908,
																			"name": "getTokenEligibility",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 994,
																			"src": "4461:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4461:51:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 907,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4453:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4453:60:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 916,
															"nodeType": "ExpressionStatement",
															"src": "4453:60:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "4535:59:5",
																		"subExpression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 918,
																					"name": "addressWithdrewERC20Reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 593,
																					"src": "4536:26:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																						"typeString": "mapping(address => mapping(address => bool))"
																					}
																				},
																				"id": 922,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 919,
																						"name": "_tokenAddresses",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 889,
																						"src": "4563:15:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																							"typeString": "address[] calldata"
																						}
																					},
																					"id": 921,
																					"indexExpression": {
																						"id": 920,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 897,
																						"src": "4579:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4563:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4536:46:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 925,
																			"indexExpression": {
																				"expression": {
																					"id": 923,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4583:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 924,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4587:6:5",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4583:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4536:58:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 917,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4527:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4527:68:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 928,
															"nodeType": "ExpressionStatement",
															"src": "4527:68:5"
														},
														{
															"assignments": [
																930
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 930,
																	"mutability": "mutable",
																	"name": "tokenReward",
																	"nameLocation": "4617:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 961,
																	"src": "4609:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 929,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4609:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 938,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 932,
																			"name": "_tokenAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 889,
																			"src": "4646:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 934,
																		"indexExpression": {
																			"id": 933,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 897,
																			"src": "4662:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4646:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 935,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4666:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4670:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4666:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 931,
																	"name": "getTokenReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "4631:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:46:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4609:68:5"
														},
														{
															"expression": {
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 939,
																			"name": "addressWithdrewERC20Reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 593,
																			"src": "4691:26:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 945,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 940,
																				"name": "_tokenAddresses",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 889,
																				"src": "4718:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																					"typeString": "address[] calldata"
																				}
																			},
																			"id": 942,
																			"indexExpression": {
																				"id": 941,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 897,
																				"src": "4734:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4718:18:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4691:46:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 946,
																	"indexExpression": {
																		"expression": {
																			"id": 943,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4738:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4742:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4738:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4691:58:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4752:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "4691:65:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 949,
															"nodeType": "ExpressionStatement",
															"src": "4691:65:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 956,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4806:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4810:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4806:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 958,
																		"name": "tokenReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 930,
																		"src": "4818:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 951,
																					"name": "_tokenAddresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 889,
																					"src": "4777:15:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																						"typeString": "address[] calldata"
																					}
																				},
																				"id": 953,
																				"indexExpression": {
																					"id": 952,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "4793:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4777:18:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 950,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 290,
																			"src": "4770:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$290_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4770:26:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$290",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4797:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 257,
																	"src": "4770:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4770:60:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 960,
															"nodeType": "ExpressionStatement",
															"src": "4770:60:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 900,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "4406:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 901,
															"name": "_tokenAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "4410:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4426:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4410:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4406:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"initializationExpression": {
													"assignments": [
														897
													],
													"declarations": [
														{
															"constant": false,
															"id": 897,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4399:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 962,
															"src": "4391:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 896,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4391:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 899,
													"initialValue": {
														"hexValue": "30",
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4403:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4391:13:5"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4434:3:5",
														"subExpression": {
															"id": 904,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "4434:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 906,
													"nodeType": "ExpressionStatement",
													"src": "4434:3:5"
												},
												"nodeType": "ForStatement",
												"src": "4386:455:5"
											}
										]
									},
									"functionSelector": "62d76d06",
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 892,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 891,
												"name": "onlyStaker",
												"nameLocations": [
													"4352:10:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 531,
												"src": "4352:10:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4352:10:5"
										},
										{
											"id": 894,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 893,
												"name": "nonReentrant",
												"nameLocations": [
													"4363:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "4363:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4363:12:5"
										}
									],
									"name": "withdrawRewards",
									"nameLocation": "4293:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "_tokenAddresses",
												"nameLocation": "4328:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "4309:34:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 887,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4309:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 888,
													"nodeType": "ArrayTypeName",
													"src": "4309:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4308:36:5"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4376:0:5"
									},
									"scope": 1075,
									"src": "4284:563:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "4949:187:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 974,
																	"name": "erc20Supplies",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "4967:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$577_storage_$",
																		"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply storage ref)"
																	}
																},
																"id": 976,
																"indexExpression": {
																	"id": 975,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "4981:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4967:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Supply_$577_storage",
																	"typeString": "struct DegeneratorStaking.ERC20Supply storage ref"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4996:10:5",
															"memberName": "registered",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 576,
															"src": "4967:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 973,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4959:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4959:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "4959:48:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 980,
																			"name": "addressStake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "5025:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$566_storage_$",
																				"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																			}
																		},
																		"id": 982,
																		"indexExpression": {
																			"id": 981,
																			"name": "_account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 968,
																			"src": "5038:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5025:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$566_storage",
																			"typeString": "struct DegeneratorStaking.Stake storage ref"
																		}
																	},
																	"id": 983,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5048:11:5",
																	"memberName": "blockStaked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 561,
																	"src": "5025:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 984,
																	"name": "rewardBlackoutPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "5062:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5025:57:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 986,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5024:59:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 987,
																"name": "erc20Supplies",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 587,
																"src": "5087:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$577_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply storage ref)"
																}
															},
															"id": 989,
															"indexExpression": {
																"id": 988,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "5101:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5087:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Supply_$577_storage",
																"typeString": "struct DegeneratorStaking.ERC20Supply storage ref"
															}
														},
														"id": 990,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5116:13:5",
														"memberName": "blockSupplied",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 570,
														"src": "5087:42:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5024:105:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 972,
												"id": 992,
												"nodeType": "Return",
												"src": "5017:112:5"
											}
										]
									},
									"functionSelector": "acde6597",
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenEligibility",
									"nameLocation": "4862:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "4890:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "4882:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4882:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "4913:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "4905:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4905:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4881:41:5"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "4943:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 970,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4943:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4942:6:5"
									},
									"scope": 1075,
									"src": "4853:283:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "5236:354:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1005,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "5274:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1006,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "5289:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1004,
																"name": "getTokenEligibility",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "5254:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5254:44:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1003,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5246:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5246:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "5246:53:5"
											},
											{
												"assignments": [
													1011
												],
												"declarations": [
													{
														"constant": false,
														"id": 1011,
														"mutability": "mutable",
														"name": "poolSupply",
														"nameLocation": "5317:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "5309:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1010,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5309:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1016,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1012,
															"name": "erc20Supplies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "5330:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$577_storage_$",
																"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply storage ref)"
															}
														},
														"id": 1014,
														"indexExpression": {
															"id": 1013,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "5344:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5330:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Supply_$577_storage",
															"typeString": "struct DegeneratorStaking.ERC20Supply storage ref"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5359:10:5",
													"memberName": "poolSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 568,
													"src": "5330:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5309:60:5"
											},
											{
												"assignments": [
													1018
												],
												"declarations": [
													{
														"constant": false,
														"id": 1018,
														"mutability": "mutable",
														"name": "poolPortionAtTime",
														"nameLocation": "5387:17:5",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "5379:25:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1017,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5379:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1028,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1019,
																"name": "addressStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "5407:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$566_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																}
															},
															"id": 1021,
															"indexExpression": {
																"id": 1020,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "5420:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5407:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$566_storage",
																"typeString": "struct DegeneratorStaking.Stake storage ref"
															}
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5430:6:5",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 559,
														"src": "5407:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1023,
																"name": "erc20Supplies",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 587,
																"src": "5439:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$577_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply storage ref)"
																}
															},
															"id": 1025,
															"indexExpression": {
																"id": 1024,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "5453:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5439:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Supply_$577_storage",
																"typeString": "struct DegeneratorStaking.ERC20Supply storage ref"
															}
														},
														"id": 1026,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5468:25:5",
														"memberName": "degeneratorPoolSizeAtTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 574,
														"src": "5439:54:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5407:86:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5379:114:5"
											},
											{
												"assignments": [
													1030
												],
												"declarations": [
													{
														"constant": false,
														"id": 1030,
														"mutability": "mutable",
														"name": "tokenReward",
														"nameLocation": "5511:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "5503:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1029,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5503:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1034,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1031,
														"name": "poolPortionAtTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "5525:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1032,
														"name": "poolSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "5545:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5525:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5503:52:5"
											},
											{
												"expression": {
													"id": 1035,
													"name": "tokenReward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1030,
													"src": "5572:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1002,
												"id": 1036,
												"nodeType": "Return",
												"src": "5565:18:5"
											}
										]
									},
									"functionSelector": "a164959d",
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenReward",
									"nameLocation": "5151:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "5174:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "5166:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5166:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "5197:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "5189:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5189:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5165:41:5"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "5227:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5226:9:5"
									},
									"scope": 1075,
									"src": "5142:448:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "5664:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1046,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "5682:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5692:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5682:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1045,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5674:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5674:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "5674:20:5"
											},
											{
												"expression": {
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1051,
														"name": "minimumStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "5705:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1052,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "5726:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5705:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "5705:28:5"
											}
										]
									},
									"functionSelector": "0d29fcd4",
									"id": 1056,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1043,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1042,
												"name": "multiSigOnly",
												"nameLocations": [
													"5651:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 557,
												"src": "5651:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "5651:12:5"
										}
									],
									"name": "setMinimumStakeAmount",
									"nameLocation": "5605:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5635:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "5627:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5627:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5626:17:5"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5664:0:5"
									},
									"scope": 1075,
									"src": "5596:144:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "5816:78:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1064,
																"name": "_length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1058,
																"src": "5834:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5844:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5834:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1063,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "5826:20:5"
											},
											{
												"expression": {
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1069,
														"name": "rewardBlackoutPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "5857:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1070,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "5880:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5857:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "5857:30:5"
											}
										]
									},
									"functionSelector": "9b29d215",
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1061,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1060,
												"name": "multiSigOnly",
												"nameLocations": [
													"5803:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 557,
												"src": "5803:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "5803:12:5"
										}
									],
									"name": "setRewardBlackoutPeriod",
									"nameLocation": "5755:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "_length",
												"nameLocation": "5787:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "5779:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5779:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5778:17:5"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5816:0:5"
									},
									"scope": 1075,
									"src": "5746:148:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1076,
							"src": "424:5473:5",
							"usedErrors": [],
							"usedEvents": [
								601,
								607
							]
						}
					],
					"src": "32:5867:5"
				},
				"id": 5
			}
		}
	}
}