{
	"id": "a88dd05fdd1d0e2ac1c825a2c1d9b95c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"DegeneratorStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// Import Ownable contract from OpenZeppelin\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n//ERC20 Interface \nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n//Guard against reentrant vunerabilities \nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"./IFairLaunchFactory.sol\";\n\ncontract DegeneratorStaking is Context, ReentrancyGuard {\n    address public multiSigAddress;\n    address public tokenAddress;\n    uint256 public minimumStakeAmount;\n    uint256 public rewardBlackoutPeriod;\n    IFairLaunchFactoryV1 public factory;\n\n    uint256 public degeneratorStakingPool;\n    uint256 public degeneratorStakers;\n\n    bool public stakingOpen;\n    \n    modifier onlyStaker() {\n        require(addressStake[msg.sender].activeDeposit);\n        _;\n    }\n\n    modifier launchpadOnly() {\n        require(factory.isAddressLaunchpad(msg.sender) == true);\n        _; // Continue execution of the function\n    }\n\n    modifier multiSigOnly() {\n        require(msg.sender == multiSigAddress, \"Only multiSig address can call this function\");\n        _; // Continue execution of the function\n    }\n\n    struct Stake {\n        uint256 amount;\n        uint256 blockStaked;\n        bool withdrawn;\n        bool activeDeposit;\n    }\n\n    struct ERC20Supply {\n        uint256 poolSupply;\n        uint256 blockSupplied;\n        uint256 remainingPoolSupply;\n        uint256 degeneratorPoolSizeAtTime; \n        bool registered;\n    }\n\n    mapping(address => Stake) private addressStake;\n    mapping(address => ERC20Supply) public erc20Supplies;\n    mapping(address => mapping(address => bool)) public addressWithdrewERC20Reward;\n\n    event degeneratorStaked(address indexed staker, uint256 amount, uint256 blockStaked);\n    event degeneratorWithdrawn(address indexed staker, uint256 amount);\n\n    constructor( address _multiSigAddress , address _tokenAddress, uint256 _minimumStakeAmount, uint256 _rewardBlackoutPeriod) {\n        multiSigAddress = _multiSigAddress;\n        tokenAddress = _tokenAddress;\n        rewardBlackoutPeriod = _rewardBlackoutPeriod;\n        minimumStakeAmount = _minimumStakeAmount;\n        degeneratorStakingPool = 0;\n        degeneratorStakers = 0;\n    }\n\n    function stakeDegnerator(uint256 _amount) public nonReentrant {\n        IERC20 token = IERC20(tokenAddress);\n        require(stakingOpen);\n        require(_amount > minimumStakeAmount, \"Amount must be greater than zero\");\n        require(token.transferFrom(_msgSender(), address(this), _amount), \"Transfer failed\");\n        require(!addressStake[_msgSender()].activeDeposit);\n\n        addressStake[_msgSender()].amount += _amount;\n        addressStake[_msgSender()].blockStaked = block.number;\n        degeneratorStakingPool += _amount;\n        degeneratorStakers += 1;\n\n        emit degeneratorStaked(_msgSender(), _amount, block.number);\n\n    }\n\n    function withdrawDegenerator() public nonReentrant {\n        require(addressStake[_msgSender()].amount > 0, \"No stake found\");\n        require(!addressStake[_msgSender()].withdrawn, \"Stake already withdrawn\");\n        IERC20 token = IERC20(tokenAddress);\n        uint256 amount = addressStake[_msgSender()].amount;\n        addressStake[_msgSender()].withdrawn = true;\n        addressStake[_msgSender()].activeDeposit = false;\n\n        require(token.transfer(_msgSender(), amount), \"Transfer failed\");\n        degeneratorStakingPool -= amount;\n        degeneratorStakers -= 1;\n        addressStake[msg.sender].amount = 0;\n        addressStake[_msgSender()].blockStaked = 0;\n        emit degeneratorWithdrawn(_msgSender(), amount);\n    }\n\n    function registerERC20Supply(address _tokenAddress, uint256 _poolSupply) public nonReentrant {\n        require(IERC20(_tokenAddress).balanceOf(address(this)) == _poolSupply);\n        require(!erc20Supplies[_tokenAddress].registered);\n        erc20Supplies[_tokenAddress].blockSupplied = block.number;\n        erc20Supplies[_tokenAddress].poolSupply = _poolSupply; \n        erc20Supplies[_tokenAddress].remainingPoolSupply = _poolSupply; \n        erc20Supplies[_tokenAddress].degeneratorPoolSizeAtTime = degeneratorStakingPool;\n    }\n\n    \n    function withdrawRewards(address[] calldata _tokenAddresses) public onlyStaker nonReentrant {\n        for (uint256 i = 0; i < _tokenAddresses.length; i++) {\n            require(getTokenEligibility(_tokenAddresses[i], msg.sender));\n            require(!addressWithdrewERC20Reward[_tokenAddresses[i]][msg.sender]);\n            uint256 tokenReward = getTokenReward(_tokenAddresses[i], msg.sender);\n            addressWithdrewERC20Reward[_tokenAddresses[i]][msg.sender] = true;\n            IERC20(_tokenAddresses[i]).transfer(msg.sender, tokenReward);\n        }\n    }\n\n    function getTokenEligibility(address _tokenAddress, address _account) public view returns(bool) {\n        require(erc20Supplies[_tokenAddress].registered);\n        return (addressStake[_account].blockStaked + rewardBlackoutPeriod) <= erc20Supplies[_tokenAddress].blockSupplied;\n    }\n\n    function getTokenReward(address _tokenAddress, address _account) public view returns(uint256) {\n        require(getTokenEligibility(_tokenAddress, _account));\n        uint256 poolSupply = erc20Supplies[_tokenAddress].poolSupply;\n        uint256 poolPortionAtTime = addressStake[_account].amount / erc20Supplies[_tokenAddress].degeneratorPoolSizeAtTime;\n        uint256 tokenReward = poolPortionAtTime * poolSupply;\n        return tokenReward;\n    }\n\n    function setMinimumStakeAmount(uint256 _amount) public multiSigOnly {\n        require(_amount > 0); \n        minimumStakeAmount = _amount;\n    }\n\n    function setRewardBlackoutPeriod(uint256 _length) public multiSigOnly {\n        require(_length > 0); \n        rewardBlackoutPeriod = _length;\n    }\n\n}\n\n"
			},
			"IFairLaunchFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\ninterface IFairLaunchFactoryV1 {\n    function factoryFee() external view returns (uint256);\n    function factoryBaseFee() external view returns (uint256);\n    function stakingContract() external view returns (address);\n    function multiSigAddress() external view returns (address);\n    function factoryToken() external view returns (address);\n    function launchpadsGenerated() external view returns (uint256);\n    function factoryOpen() external view returns (bool);\n    function isFactoryToken(address _address) external view returns (bool);\n    function stakingContractFactoryTokenAllocations(address _address) external view returns (uint256);\n    function addressIsLaunchpad(address _address) external view returns (bool);\n\n    event LaunchPadGenerated(address indexed LaunchpaddAddress, uint256 indexed launchpadNumber, uint256 hardcap, uint256 softcap, address founderAddres);\n    event multiSigWithdrawal(address withdrawSender, uint256 withdrawalAmount);\n    event FactoryTokenRegistered(address indexed tokenAddress);\n    event FactoryFeeSet(uint256 newFee);\n    event FactoryBaseFeeSet(uint256 newBaseFee);\n    event StakingContractSet(address indexed newStakingContract);\n    event FactoryClosed(bool factoryOpen);\n\n    function createFairLaunchpad( \n        string memory _name,\n        string memory _symbol,\n        uint256 _totalSupply,\n        bool _presaleLaunchpad, \n        uint256 _presaleHardcap,\n        uint256 _presaleSoftcap,\n        uint256 _presaleLengthBlocks,\n        uint256 _presaleMaxContribution,\n        uint256 _presaleMinContribution,\n        uint256 _founderSupplyAllocation\n    ) external payable;\n\n    function withdrawToMultiSig() external;\n\n    function registerFactoryToken(address _address, uint256 _stakingContractAllocation) external;\n\n    function setFactoryFee(uint256 _newFee) external;\n\n    function setFactoryBaseFee(uint256 _newFee) external;\n\n    function setStakingContract(address _newStakingContract) external;\n\n    function closeFactory(bool _factoryOpen) external;\n\n    function isAddressLaunchpad(address _address) external view returns(bool);\n\n    function isAddressFactoryToken(address _address) external view returns(bool);\n\n    function getTokenStakingContractAllocation(address _address) external view returns (uint256);\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"DegeneratorStaking.sol": {
				"DegeneratorStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_multiSigAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_minimumStakeAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_rewardBlackoutPeriod",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockStaked",
									"type": "uint256"
								}
							],
							"name": "degeneratorStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "degeneratorWithdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "addressWithdrewERC20Reward",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "degeneratorStakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "degeneratorStakingPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "erc20Supplies",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "poolSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "blockSupplied",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "remainingPoolSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "degeneratorPoolSizeAtTime",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "registered",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "contract IFairLaunchFactoryV1",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "getTokenEligibility",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "getTokenReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minimumStakeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "multiSigAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_poolSupply",
									"type": "uint256"
								}
							],
							"name": "registerERC20Supply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardBlackoutPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "setMinimumStakeAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_length",
									"type": "uint256"
								}
							],
							"name": "setRewardBlackoutPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stakeDegnerator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawDegenerator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_tokenAddresses",
									"type": "address[]"
								}
							],
							"name": "withdrawRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DegeneratorStaking.sol\":424:5856  contract DegeneratorStaking is Context, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"DegeneratorStaking.sol\":1917:2301  constructor( address _multiSigAddress , address _tokenAddress, uint256 _minimumStakeAmount, uint256 _rewardBlackoutPeriod) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  dup2\n  sstore\n    /* \"DegeneratorStaking.sol\":2050:2084  multiSigAddress = _multiSigAddress */\n  dup2\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap8\n  dup9\n  and\n  or\n  swap1\n  swap3\n  sstore\n    /* \"DegeneratorStaking.sol\":2094:2106  tokenAddress */\n  0x02\n    /* \"DegeneratorStaking.sol\":2094:2122  tokenAddress = _tokenAddress */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  swap5\n  swap1\n  swap6\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"DegeneratorStaking.sol\":2132:2152  rewardBlackoutPeriod */\n  0x04\n    /* \"DegeneratorStaking.sol\":2132:2176  rewardBlackoutPeriod = _rewardBlackoutPeriod */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"DegeneratorStaking.sol\":2186:2204  minimumStakeAmount */\n  0x03\n    /* \"DegeneratorStaking.sol\":2186:2226  minimumStakeAmount = _minimumStakeAmount */\n  sstore\n    /* \"DegeneratorStaking.sol\":2236:2258  degeneratorStakingPool */\n  0x06\n    /* \"DegeneratorStaking.sol\":2236:2262  degeneratorStakingPool = 0 */\n  dup2\n  swap1\n  sstore\n    /* \"DegeneratorStaking.sol\":2272:2290  degeneratorStakers */\n  0x07\n    /* \"DegeneratorStaking.sol\":2272:2294  degeneratorStakers = 0 */\n  sstore\n    /* \"DegeneratorStaking.sol\":424:5856  contract DegeneratorStaking is Context, ReentrancyGuard {... */\n  jump(tag_10)\n    /* \"#utility.yul\":14:191   */\ntag_9:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_12\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_12:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:612   */\ntag_3:\n    /* \"#utility.yul\":293:299   */\n  0x00\n    /* \"#utility.yul\":301:307   */\n  dup1\n    /* \"#utility.yul\":309:315   */\n  0x00\n    /* \"#utility.yul\":317:323   */\n  dup1\n    /* \"#utility.yul\":370:373   */\n  0x80\n    /* \"#utility.yul\":358:367   */\n  dup6\n    /* \"#utility.yul\":349:356   */\n  dup8\n    /* \"#utility.yul\":345:368   */\n  sub\n    /* \"#utility.yul\":341:374   */\n  slt\n    /* \"#utility.yul\":338:391   */\n  iszero\n  tag_14\n  jumpi\n    /* \"#utility.yul\":387:388   */\n  0x00\n    /* \"#utility.yul\":384:385   */\n  dup1\n    /* \"#utility.yul\":377:389   */\n  revert\n    /* \"#utility.yul\":338:391   */\ntag_14:\n    /* \"#utility.yul\":410:450   */\n  tag_15\n    /* \"#utility.yul\":440:449   */\n  dup6\n    /* \"#utility.yul\":410:450   */\n  tag_9\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":400:450   */\n  swap4\n  pop\n    /* \"#utility.yul\":469:518   */\n  tag_16\n    /* \"#utility.yul\":514:516   */\n  0x20\n    /* \"#utility.yul\":503:512   */\n  dup7\n    /* \"#utility.yul\":499:517   */\n  add\n    /* \"#utility.yul\":469:518   */\n  tag_9\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":558:560   */\n  0x40\n    /* \"#utility.yul\":543:561   */\n  dup7\n  add\n    /* \"#utility.yul\":537:562   */\n  mload\n    /* \"#utility.yul\":602:604   */\n  0x60\n    /* \"#utility.yul\":587:605   */\n  swap1\n  swap7\n  add\n    /* \"#utility.yul\":581:606   */\n  mload\n    /* \"#utility.yul\":196:612   */\n  swap5\n  swap8\n    /* \"#utility.yul\":459:518   */\n  swap1\n  swap7\n  pop\n    /* \"#utility.yul\":196:612   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_10:\n    /* \"DegeneratorStaking.sol\":424:5856  contract DegeneratorStaking is Context, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"DegeneratorStaking.sol\":424:5856  contract DegeneratorStaking is Context, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9b29d215\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa164959d\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa164959d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xacde6597\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xad5a402b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xcaf10b57\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x9b29d215\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9d76ea58\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9f8932f4\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa163beea\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x609c878a\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x609c878a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x62d76d06\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6b036f45\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8167ee72\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95adb5ad\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x0d29fcd4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1516def7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x38760298\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x41fee557\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"DegeneratorStaking.sol\":5555:5699  function setMinimumStakeAmount(uint256 _amount) public multiSigOnly {... */\n    tag_3:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"DegeneratorStaking.sol\":486:516  address public multiSigAddress */\n    tag_4:\n      sload(0x01)\n      tag_28\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":363:395   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":345:396   */\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"DegeneratorStaking.sol\":486:516  address public multiSigAddress */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DegeneratorStaking.sol\":760:783  bool public stakingOpen */\n    tag_5:\n      sload(0x08)\n      tag_32\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":572:586   */\n      swap1\n      iszero\n        /* \"#utility.yul\":565:587   */\n      iszero\n        /* \"#utility.yul\":547:588   */\n      dup2\n      mstore\n        /* \"#utility.yul\":535:537   */\n      0x20\n        /* \"#utility.yul\":520:538   */\n      add\n        /* \"DegeneratorStaking.sol\":760:783  bool public stakingOpen */\n      tag_30\n        /* \"#utility.yul\":407:594   */\n      jump\n        /* \"DegeneratorStaking.sol\":2307:2953  function stakeDegnerator(uint256 _amount) public nonReentrant {... */\n    tag_6:\n      tag_24\n      tag_37\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n        /* \"DegeneratorStaking.sol\":1669:1747  mapping(address => mapping(address => bool)) public addressWithdrewERC20Reward */\n    tag_7:\n      tag_32\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      0x0b\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"DegeneratorStaking.sol\":4243:4806  function withdrawRewards(address[] calldata _tokenAddresses) public onlyStaker nonReentrant {... */\n    tag_8:\n      tag_24\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"DegeneratorStaking.sol\":555:588  uint256 public minimumStakeAmount */\n    tag_9:\n      tag_48\n      sload(0x03)\n      dup2\n      jump\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":1808:1833   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1796:1798   */\n      0x20\n        /* \"#utility.yul\":1781:1799   */\n      add\n        /* \"DegeneratorStaking.sol\":555:588  uint256 public minimumStakeAmount */\n      tag_30\n        /* \"#utility.yul\":1662:1839   */\n      jump\n        /* \"DegeneratorStaking.sol\":3700:4232  function registerERC20Supply(address _tokenAddress, uint256 _poolSupply) public nonReentrant {... */\n    tag_10:\n      tag_24\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"DegeneratorStaking.sol\":2959:3694  function withdrawDegenerator() public nonReentrant {... */\n    tag_11:\n      tag_24\n      tag_57\n      jump\t// in\n        /* \"DegeneratorStaking.sol\":5705:5853  function setRewardBlackoutPeriod(uint256 _length) public multiSigOnly {... */\n    tag_12:\n      tag_24\n      tag_59\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"DegeneratorStaking.sol\":522:549  address public tokenAddress */\n    tag_13:\n      sload(0x02)\n      tag_28\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"DegeneratorStaking.sol\":594:629  uint256 public rewardBlackoutPeriod */\n    tag_14:\n      tag_48\n      sload(0x04)\n      dup2\n      jump\n        /* \"DegeneratorStaking.sol\":720:753  uint256 public degeneratorStakers */\n    tag_15:\n      tag_48\n      sload(0x07)\n      dup2\n      jump\n        /* \"DegeneratorStaking.sol\":5101:5549  function getTokenReward(address _tokenAddress, address _account) public view returns(uint256) {... */\n    tag_16:\n      tag_48\n      tag_71\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n        /* \"DegeneratorStaking.sol\":4812:5095  function getTokenEligibility(address _tokenAddress, address _account) public view returns(bool) {... */\n    tag_17:\n      tag_32\n      tag_75\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"DegeneratorStaking.sol\":677:714  uint256 public degeneratorStakingPool */\n    tag_18:\n      tag_48\n      sload(0x06)\n      dup2\n      jump\n        /* \"DegeneratorStaking.sol\":635:670  IFairLaunchFactoryV1 public factory */\n    tag_19:\n      sload(0x05)\n      tag_28\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"DegeneratorStaking.sol\":1611:1663  mapping(address => ERC20Supply) public erc20Supplies */\n    tag_20:\n      tag_85\n      tag_86\n      calldatasize\n      0x04\n      tag_87\n      jump\t// in\n    tag_86:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      swap1\n      swap5\n      add\n      sload\n      swap3\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      0xff\n      and\n      dup6\n      jump\n    tag_85:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2784:2809   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":2840:2842   */\n      0x20\n        /* \"#utility.yul\":2825:2843   */\n      dup7\n      add\n        /* \"#utility.yul\":2818:2852   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":2868:2886   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":2861:2895   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2926:2928   */\n      0x60\n        /* \"#utility.yul\":2911:2929   */\n      dup4\n      add\n        /* \"#utility.yul\":2904:2938   */\n      mstore\n        /* \"#utility.yul\":2982:2996   */\n      iszero\n        /* \"#utility.yul\":2975:2997   */\n      iszero\n        /* \"#utility.yul\":2969:2972   */\n      0x80\n        /* \"#utility.yul\":2954:2973   */\n      dup3\n      add\n        /* \"#utility.yul\":2947:2998   */\n      mstore\n        /* \"#utility.yul\":2771:2774   */\n      0xa0\n        /* \"#utility.yul\":2756:2775   */\n      add\n        /* \"DegeneratorStaking.sol\":1611:1663  mapping(address => ERC20Supply) public erc20Supplies */\n      tag_30\n        /* \"#utility.yul\":2531:3004   */\n      jump\n        /* \"DegeneratorStaking.sol\":5555:5699  function setMinimumStakeAmount(uint256 _amount) public multiSigOnly {... */\n    tag_27:\n        /* \"DegeneratorStaking.sol\":1105:1120  multiSigAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"DegeneratorStaking.sol\":1091:1101  msg.sender */\n      caller\n        /* \"DegeneratorStaking.sol\":1091:1120  msg.sender == multiSigAddress */\n      eq\n        /* \"DegeneratorStaking.sol\":1083:1169  require(msg.sender == multiSigAddress, \"Only multiSig address can call this function\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"DegeneratorStaking.sol\":5651:5652  0 */\n      0x00\n        /* \"DegeneratorStaking.sol\":5641:5648  _amount */\n      dup2\n        /* \"DegeneratorStaking.sol\":5641:5652  _amount > 0 */\n      gt\n        /* \"DegeneratorStaking.sol\":5633:5653  require(_amount > 0) */\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n        /* \"DegeneratorStaking.sol\":5664:5682  minimumStakeAmount */\n      0x03\n        /* \"DegeneratorStaking.sol\":5664:5692  minimumStakeAmount = _amount */\n      sstore\n        /* \"DegeneratorStaking.sol\":5555:5699  function setMinimumStakeAmount(uint256 _amount) public multiSigOnly {... */\n      jump\t// out\n        /* \"DegeneratorStaking.sol\":2307:2953  function stakeDegnerator(uint256 _amount) public nonReentrant {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_98\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_99\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_98:\n        /* \"DegeneratorStaking.sol\":2401:2413  tokenAddress */\n      sload(0x02)\n        /* \"DegeneratorStaking.sol\":2432:2443  stakingOpen */\n      sload(0x08)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DegeneratorStaking.sol\":2401:2413  tokenAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DegeneratorStaking.sol\":2432:2443  stakingOpen */\n      0xff\n      and\n        /* \"DegeneratorStaking.sol\":2424:2444  require(stakingOpen) */\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n        /* \"DegeneratorStaking.sol\":2472:2490  minimumStakeAmount */\n      sload(0x03)\n        /* \"DegeneratorStaking.sol\":2462:2469  _amount */\n      dup3\n        /* \"DegeneratorStaking.sol\":2462:2490  _amount > minimumStakeAmount */\n      gt\n        /* \"DegeneratorStaking.sol\":2454:2527  require(_amount > minimumStakeAmount, \"Amount must be greater than zero\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3624:3626   */\n      0x20\n        /* \"DegeneratorStaking.sol\":2454:2527  require(_amount > minimumStakeAmount, \"Amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3606:3627   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3643:3661   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3636:3666   */\n      mstore\n        /* \"#utility.yul\":3702:3736   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":3682:3700   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3675:3737   */\n      mstore\n        /* \"#utility.yul\":3754:3772   */\n      0x64\n      add\n        /* \"DegeneratorStaking.sol\":2454:2527  require(_amount > minimumStakeAmount, \"Amount must be greater than zero\") */\n      tag_93\n        /* \"#utility.yul\":3422:3778   */\n      jump\n        /* \"DegeneratorStaking.sol\":2454:2527  require(_amount > minimumStakeAmount, \"Amount must be greater than zero\") */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DegeneratorStaking.sol\":2545:2563  token.transferFrom */\n      dup2\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"DegeneratorStaking.sol\":2545:2601  token.transferFrom(_msgSender(), address(this), _amount) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4041:4056   */\n      swap1\n      swap2\n      and\n        /* \"DegeneratorStaking.sol\":2545:2601  token.transferFrom(_msgSender(), address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4023:4057   */\n      mstore\n        /* \"DegeneratorStaking.sol\":2586:2590  this */\n      address\n        /* \"#utility.yul\":4073:4091   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4066:4109   */\n      mstore\n        /* \"#utility.yul\":4125:4143   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4118:4152   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":3958:3976   */\n      0x64\n      add\n        /* \"DegeneratorStaking.sol\":2545:2601  token.transferFrom(_msgSender(), address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"DegeneratorStaking.sol\":2537:2621  require(token.transferFrom(_msgSender(), address(this), _amount), \"Transfer failed\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4647:4649   */\n      0x20\n        /* \"DegeneratorStaking.sol\":2537:2621  require(token.transferFrom(_msgSender(), address(this), _amount), \"Transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4629:4650   */\n      mstore\n        /* \"#utility.yul\":4686:4688   */\n      0x0f\n        /* \"#utility.yul\":4666:4684   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4659:4689   */\n      mstore\n      shl(0x8a, 0x151c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":4705:4723   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4698:4743   */\n      mstore\n        /* \"#utility.yul\":4760:4778   */\n      0x64\n      add\n        /* \"DegeneratorStaking.sol\":2537:2621  require(token.transferFrom(_msgSender(), address(this), _amount), \"Transfer failed\") */\n      tag_93\n        /* \"#utility.yul\":4445:4784   */\n      jump\n        /* \"DegeneratorStaking.sol\":2537:2621  require(token.transferFrom(_msgSender(), address(this), _amount), \"Transfer failed\") */\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"DegeneratorStaking.sol\":2640:2666  addressStake[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DegeneratorStaking.sol\":2640:2652  addressStake */\n      0x09\n        /* \"DegeneratorStaking.sol\":2640:2666  addressStake[_msgSender()] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DegeneratorStaking.sol\":2640:2680  addressStake[_msgSender()].activeDeposit */\n      0x02\n      add\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"DegeneratorStaking.sol\":2639:2680  !addressStake[_msgSender()].activeDeposit */\n      iszero\n        /* \"DegeneratorStaking.sol\":2631:2681  require(!addressStake[_msgSender()].activeDeposit) */\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"DegeneratorStaking.sol\":2692:2718  addressStake[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DegeneratorStaking.sol\":2692:2704  addressStake */\n      0x09\n        /* \"DegeneratorStaking.sol\":2692:2718  addressStake[_msgSender()] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DegeneratorStaking.sol\":2692:2736  addressStake[_msgSender()].amount += _amount */\n      dup1\n      sload\n        /* \"DegeneratorStaking.sol\":2729:2736  _amount */\n      dup5\n      swap3\n        /* \"DegeneratorStaking.sol\":2692:2718  addressStake[_msgSender()] */\n      swap1\n        /* \"DegeneratorStaking.sol\":2692:2736  addressStake[_msgSender()].amount += _amount */\n      tag_119\n      swap1\n        /* \"DegeneratorStaking.sol\":2729:2736  _amount */\n      dup5\n      swap1\n        /* \"DegeneratorStaking.sol\":2692:2736  addressStake[_msgSender()].amount += _amount */\n      tag_120\n      jump\t// in\n    tag_119:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"DegeneratorStaking.sol\":2746:2772  addressStake[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DegeneratorStaking.sol\":2746:2758  addressStake */\n      0x09\n        /* \"DegeneratorStaking.sol\":2746:2772  addressStake[_msgSender()] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DegeneratorStaking.sol\":2787:2799  block.number */\n      number\n        /* \"DegeneratorStaking.sol\":2746:2784  addressStake[_msgSender()].blockStaked */\n      0x01\n      swap1\n      swap2\n      add\n        /* \"DegeneratorStaking.sol\":2746:2799  addressStake[_msgSender()].blockStaked = block.number */\n      sstore\n        /* \"DegeneratorStaking.sol\":2809:2831  degeneratorStakingPool */\n      0x06\n        /* \"DegeneratorStaking.sol\":2809:2842  degeneratorStakingPool += _amount */\n      dup1\n      sload\n        /* \"DegeneratorStaking.sol\":2835:2842  _amount */\n      dup5\n      swap3\n        /* \"DegeneratorStaking.sol\":2746:2772  addressStake[_msgSender()] */\n      swap1\n        /* \"DegeneratorStaking.sol\":2809:2842  degeneratorStakingPool += _amount */\n      tag_122\n      swap1\n        /* \"DegeneratorStaking.sol\":2835:2842  _amount */\n      dup5\n      swap1\n        /* \"DegeneratorStaking.sol\":2809:2842  degeneratorStakingPool += _amount */\n      tag_120\n      jump\t// in\n    tag_122:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DegeneratorStaking.sol\":2874:2875  1 */\n      0x01\n        /* \"DegeneratorStaking.sol\":2852:2870  degeneratorStakers */\n      0x07\n      0x00\n        /* \"DegeneratorStaking.sol\":2852:2875  degeneratorStakers += 1 */\n      dup3\n      dup3\n      sload\n      tag_123\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_123:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DegeneratorStaking.sol\":2891:2945  degeneratorStaked(_msgSender(), _amount, block.number) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5225:5250   */\n      dup4\n      dup2\n      mstore\n        /* \"DegeneratorStaking.sol\":2932:2944  block.number */\n      number\n        /* \"#utility.yul\":5281:5283   */\n      0x20\n        /* \"#utility.yul\":5266:5284   */\n      dup3\n      add\n        /* \"#utility.yul\":5259:5293   */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap2\n        /* \"DegeneratorStaking.sol\":2891:2945  degeneratorStaked(_msgSender(), _amount, block.number) */\n      0x0ae860169ef88b6e5a084a54675af932ac7be23de4abd34a1d99a5a8402a17cc\n      swap2\n        /* \"#utility.yul\":5198:5216   */\n      add\n        /* \"DegeneratorStaking.sol\":2891:2945  degeneratorStaked(_msgSender(), _amount, block.number) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"DegeneratorStaking.sol\":2369:2953  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_127\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_127:\n        /* \"DegeneratorStaking.sol\":2307:2953  function stakeDegnerator(uint256 _amount) public nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"DegeneratorStaking.sol\":4243:4806  function withdrawRewards(address[] calldata _tokenAddresses) public onlyStaker nonReentrant {... */\n    tag_47:\n        /* \"DegeneratorStaking.sol\":847:857  msg.sender */\n      caller\n        /* \"DegeneratorStaking.sol\":834:858  addressStake[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DegeneratorStaking.sol\":834:846  addressStake */\n      0x09\n        /* \"DegeneratorStaking.sol\":834:858  addressStake[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DegeneratorStaking.sol\":834:872  addressStake[msg.sender].activeDeposit */\n      0x02\n      add\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"DegeneratorStaking.sol\":826:873  require(addressStake[msg.sender].activeDeposit) */\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_132\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_99\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_132:\n        /* \"DegeneratorStaking.sol\":4350:4359  uint256 i */\n      0x00\n        /* \"DegeneratorStaking.sol\":4345:4800  for (uint256 i = 0; i < _tokenAddresses.length; i++) {... */\n    tag_134:\n        /* \"DegeneratorStaking.sol\":4365:4391  i < _tokenAddresses.length */\n      dup2\n      dup2\n      lt\n        /* \"DegeneratorStaking.sol\":4345:4800  for (uint256 i = 0; i < _tokenAddresses.length; i++) {... */\n      iszero\n      tag_135\n      jumpi\n        /* \"DegeneratorStaking.sol\":4420:4471  getTokenEligibility(_tokenAddresses[i], msg.sender) */\n      tag_137\n        /* \"DegeneratorStaking.sol\":4440:4455  _tokenAddresses */\n      dup4\n      dup4\n        /* \"DegeneratorStaking.sol\":4456:4457  i */\n      dup4\n        /* \"DegeneratorStaking.sol\":4440:4458  _tokenAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_139\n      jumpi\n      tag_139\n      tag_140\n      jump\t// in\n    tag_139:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_141:\n        /* \"DegeneratorStaking.sol\":4460:4470  msg.sender */\n      caller\n        /* \"DegeneratorStaking.sol\":4420:4439  getTokenEligibility */\n      tag_76\n        /* \"DegeneratorStaking.sol\":4420:4471  getTokenEligibility(_tokenAddresses[i], msg.sender) */\n      jump\t// in\n    tag_137:\n        /* \"DegeneratorStaking.sol\":4412:4472  require(getTokenEligibility(_tokenAddresses[i], msg.sender)) */\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n        /* \"DegeneratorStaking.sol\":4495:4521  addressWithdrewERC20Reward */\n      0x0b\n        /* \"DegeneratorStaking.sol\":4495:4541  addressWithdrewERC20Reward[_tokenAddresses[i]] */\n      0x00\n        /* \"DegeneratorStaking.sol\":4522:4537  _tokenAddresses */\n      dup5\n      dup5\n        /* \"DegeneratorStaking.sol\":4538:4539  i */\n      dup5\n        /* \"DegeneratorStaking.sol\":4522:4540  _tokenAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_144\n      jumpi\n      tag_144\n      tag_140\n      jump\t// in\n    tag_144:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DegeneratorStaking.sol\":4495:4541  addressWithdrewERC20Reward[_tokenAddresses[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"DegeneratorStaking.sol\":4542:4552  msg.sender */\n      caller\n        /* \"DegeneratorStaking.sol\":4495:4553  addressWithdrewERC20Reward[_tokenAddresses[i]][msg.sender] */\n      dup3\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"DegeneratorStaking.sol\":4494:4553  !addressWithdrewERC20Reward[_tokenAddresses[i]][msg.sender] */\n      iszero\n        /* \"DegeneratorStaking.sol\":4486:4554  require(!addressWithdrewERC20Reward[_tokenAddresses[i]][msg.sender]) */\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n        /* \"DegeneratorStaking.sol\":4568:4587  uint256 tokenReward */\n      0x00\n        /* \"DegeneratorStaking.sol\":4590:4636  getTokenReward(_tokenAddresses[i], msg.sender) */\n      tag_147\n        /* \"DegeneratorStaking.sol\":4605:4620  _tokenAddresses */\n      dup5\n      dup5\n        /* \"DegeneratorStaking.sol\":4621:4622  i */\n      dup5\n        /* \"DegeneratorStaking.sol\":4605:4623  _tokenAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_149\n      jumpi\n      tag_149\n      tag_140\n      jump\t// in\n    tag_149:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_150:\n        /* \"DegeneratorStaking.sol\":4625:4635  msg.sender */\n      caller\n        /* \"DegeneratorStaking.sol\":4590:4604  getTokenReward */\n      tag_72\n        /* \"DegeneratorStaking.sol\":4590:4636  getTokenReward(_tokenAddresses[i], msg.sender) */\n      jump\t// in\n    tag_147:\n        /* \"DegeneratorStaking.sol\":4568:4636  uint256 tokenReward = getTokenReward(_tokenAddresses[i], msg.sender) */\n      swap1\n      pop\n        /* \"DegeneratorStaking.sol\":4711:4715  true */\n      0x01\n        /* \"DegeneratorStaking.sol\":4650:4676  addressWithdrewERC20Reward */\n      0x0b\n        /* \"DegeneratorStaking.sol\":4650:4696  addressWithdrewERC20Reward[_tokenAddresses[i]] */\n      0x00\n        /* \"DegeneratorStaking.sol\":4677:4692  _tokenAddresses */\n      dup7\n      dup7\n        /* \"DegeneratorStaking.sol\":4693:4694  i */\n      dup7\n        /* \"DegeneratorStaking.sol\":4677:4695  _tokenAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_152\n      jumpi\n      tag_152\n      tag_140\n      jump\t// in\n    tag_152:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_153:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DegeneratorStaking.sol\":4650:4696  addressWithdrewERC20Reward[_tokenAddresses[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"DegeneratorStaking.sol\":4697:4707  msg.sender */\n      caller\n        /* \"DegeneratorStaking.sol\":4650:4708  addressWithdrewERC20Reward[_tokenAddresses[i]][msg.sender] */\n      dup3\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      keccak256\n        /* \"DegeneratorStaking.sol\":4650:4715  addressWithdrewERC20Reward[_tokenAddresses[i]][msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"DegeneratorStaking.sol\":4736:4751  _tokenAddresses */\n      dup4\n      dup4\n        /* \"DegeneratorStaking.sol\":4752:4753  i */\n      dup4\n        /* \"DegeneratorStaking.sol\":4736:4754  _tokenAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_155\n      jumpi\n      tag_155\n      tag_140\n      jump\t// in\n    tag_155:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_156:\n        /* \"DegeneratorStaking.sol\":4729:4789  IERC20(_tokenAddresses[i]).transfer(msg.sender, tokenReward) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"DegeneratorStaking.sol\":4765:4775  msg.sender */\n      caller\n        /* \"DegeneratorStaking.sol\":4729:4789  IERC20(_tokenAddresses[i]).transfer(msg.sender, tokenReward) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5610:5661   */\n      mstore\n        /* \"#utility.yul\":5677:5695   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5670:5704   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DegeneratorStaking.sol\":4729:4764  IERC20(_tokenAddresses[i]).transfer */\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":5583:5601   */\n      0x44\n      add\n        /* \"DegeneratorStaking.sol\":4729:4789  IERC20(_tokenAddresses[i]).transfer(msg.sender, tokenReward) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_160:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_161:\n      pop\n      pop\n        /* \"DegeneratorStaking.sol\":4393:4396  i++ */\n      0x01\n      add\n        /* \"DegeneratorStaking.sol\":4345:4800  for (uint256 i = 0; i < _tokenAddresses.length; i++) {... */\n      jump(tag_134)\n    tag_135:\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_162\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_162:\n        /* \"DegeneratorStaking.sol\":4243:4806  function withdrawRewards(address[] calldata _tokenAddresses) public onlyStaker nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DegeneratorStaking.sol\":3700:4232  function registerERC20Supply(address _tokenAddress, uint256 _poolSupply) public nonReentrant {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_164\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_99\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_164:\n        /* \"DegeneratorStaking.sol\":3811:3857  IERC20(_tokenAddress).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"DegeneratorStaking.sol\":3851:3855  this */\n      address\n        /* \"DegeneratorStaking.sol\":3811:3857  IERC20(_tokenAddress).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":345:396   */\n      mstore\n        /* \"DegeneratorStaking.sol\":3861:3872  _poolSupply */\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DegeneratorStaking.sol\":3811:3842  IERC20(_tokenAddress).balanceOf */\n      dup5\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":318:336   */\n      0x24\n      add\n        /* \"DegeneratorStaking.sol\":3811:3857  IERC20(_tokenAddress).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"DegeneratorStaking.sol\":3811:3872  IERC20(_tokenAddress).balanceOf(address(this)) == _poolSupply */\n      eq\n        /* \"DegeneratorStaking.sol\":3803:3873  require(IERC20(_tokenAddress).balanceOf(address(this)) == _poolSupply) */\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DegeneratorStaking.sol\":3892:3920  erc20Supplies[_tokenAddress] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DegeneratorStaking.sol\":3892:3905  erc20Supplies */\n      0x0a\n        /* \"DegeneratorStaking.sol\":3892:3920  erc20Supplies[_tokenAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DegeneratorStaking.sol\":3892:3931  erc20Supplies[_tokenAddress].registered */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"DegeneratorStaking.sol\":3891:3931  !erc20Supplies[_tokenAddress].registered */\n      iszero\n        /* \"DegeneratorStaking.sol\":3883:3932  require(!erc20Supplies[_tokenAddress].registered) */\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DegeneratorStaking.sol\":3942:3970  erc20Supplies[_tokenAddress] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DegeneratorStaking.sol\":3942:3955  erc20Supplies */\n      0x0a\n        /* \"DegeneratorStaking.sol\":3942:3970  erc20Supplies[_tokenAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DegeneratorStaking.sol\":3987:3999  block.number */\n      number\n        /* \"DegeneratorStaking.sol\":3942:3984  erc20Supplies[_tokenAddress].blockSupplied */\n      0x01\n      dup3\n      add\n        /* \"DegeneratorStaking.sol\":3942:3999  erc20Supplies[_tokenAddress].blockSupplied = block.number */\n      sstore\n        /* \"DegeneratorStaking.sol\":4009:4062  erc20Supplies[_tokenAddress].poolSupply = _poolSupply */\n      dup2\n      dup2\n      sstore\n        /* \"DegeneratorStaking.sol\":4073:4121  erc20Supplies[_tokenAddress].remainingPoolSupply */\n      0x02\n      dup2\n      add\n        /* \"DegeneratorStaking.sol\":4073:4135  erc20Supplies[_tokenAddress].remainingPoolSupply = _poolSupply */\n      dup3\n      swap1\n      sstore\n        /* \"DegeneratorStaking.sol\":4203:4225  degeneratorStakingPool */\n      sload(0x06)\n        /* \"DegeneratorStaking.sol\":4146:4200  erc20Supplies[_tokenAddress].degeneratorPoolSizeAtTime */\n      0x03\n      swap1\n      swap2\n      add\n        /* \"DegeneratorStaking.sol\":4146:4225  erc20Supplies[_tokenAddress].degeneratorPoolSizeAtTime = degeneratorStakingPool */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_162\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"DegeneratorStaking.sol\":2959:3694  function withdrawDegenerator() public nonReentrant {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_175\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_99\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"DegeneratorStaking.sol\":3064:3065  0 */\n      0x00\n        /* \"DegeneratorStaking.sol\":3028:3054  addressStake[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"DegeneratorStaking.sol\":3028:3040  addressStake */\n      0x09\n        /* \"DegeneratorStaking.sol\":3028:3054  addressStake[_msgSender()] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DegeneratorStaking.sol\":3028:3061  addressStake[_msgSender()].amount */\n      sload\n        /* \"DegeneratorStaking.sol\":3020:3084  require(addressStake[_msgSender()].amount > 0, \"No stake found\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6106:6108   */\n      0x20\n        /* \"DegeneratorStaking.sol\":3020:3084  require(addressStake[_msgSender()].amount > 0, \"No stake found\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6088:6109   */\n      mstore\n        /* \"#utility.yul\":6145:6147   */\n      0x0e\n        /* \"#utility.yul\":6125:6143   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6118:6148   */\n      mstore\n      shl(0x92, 0x139bc81cdd185ad948199bdd5b99)\n        /* \"#utility.yul\":6164:6182   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6157:6201   */\n      mstore\n        /* \"#utility.yul\":6218:6236   */\n      0x64\n      add\n        /* \"DegeneratorStaking.sol\":3020:3084  require(addressStake[_msgSender()].amount > 0, \"No stake found\") */\n      tag_93\n        /* \"#utility.yul\":5904:6242   */\n      jump\n        /* \"DegeneratorStaking.sol\":3020:3084  require(addressStake[_msgSender()].amount > 0, \"No stake found\") */\n    tag_178:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"DegeneratorStaking.sol\":3103:3129  addressStake[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DegeneratorStaking.sol\":3103:3115  addressStake */\n      0x09\n        /* \"DegeneratorStaking.sol\":3103:3129  addressStake[_msgSender()] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DegeneratorStaking.sol\":3103:3139  addressStake[_msgSender()].withdrawn */\n      0x02\n      add\n      sload\n      0xff\n      and\n        /* \"DegeneratorStaking.sol\":3102:3139  !addressStake[_msgSender()].withdrawn */\n      iszero\n        /* \"DegeneratorStaking.sol\":3094:3167  require(!addressStake[_msgSender()].withdrawn, \"Stake already withdrawn\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6449:6451   */\n      0x20\n        /* \"DegeneratorStaking.sol\":3094:3167  require(!addressStake[_msgSender()].withdrawn, \"Stake already withdrawn\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6431:6452   */\n      mstore\n        /* \"#utility.yul\":6488:6490   */\n      0x17\n        /* \"#utility.yul\":6468:6486   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6461:6491   */\n      mstore\n        /* \"#utility.yul\":6527:6552   */\n      0x5374616b6520616c72656164792077697468647261776e000000000000000000\n        /* \"#utility.yul\":6507:6525   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6500:6553   */\n      mstore\n        /* \"#utility.yul\":6570:6588   */\n      0x64\n      add\n        /* \"DegeneratorStaking.sol\":3094:3167  require(!addressStake[_msgSender()].withdrawn, \"Stake already withdrawn\") */\n      tag_93\n        /* \"#utility.yul\":6247:6594   */\n      jump\n        /* \"DegeneratorStaking.sol\":3094:3167  require(!addressStake[_msgSender()].withdrawn, \"Stake already withdrawn\") */\n    tag_182:\n        /* \"DegeneratorStaking.sol\":3199:3211  tokenAddress */\n      0x02\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"DegeneratorStaking.sol\":3177:3189  IERC20 token */\n      0x00\n        /* \"DegeneratorStaking.sol\":3239:3265  addressStake[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"DegeneratorStaking.sol\":3239:3251  addressStake */\n      0x09\n        /* \"DegeneratorStaking.sol\":3239:3265  addressStake[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DegeneratorStaking.sol\":3239:3272  addressStake[_msgSender()].amount */\n      dup1\n      sload\n        /* \"DegeneratorStaking.sol\":3282:3318  addressStake[_msgSender()].withdrawn */\n      swap7\n      add\n        /* \"DegeneratorStaking.sol\":3282:3325  addressStake[_msgSender()].withdrawn = true */\n      dup1\n      sload\n      not(0xffff)\n        /* \"DegeneratorStaking.sol\":3335:3383  addressStake[_msgSender()].activeDeposit = false */\n      and\n        /* \"DegeneratorStaking.sol\":3321:3325  true */\n      0x01\n        /* \"DegeneratorStaking.sol\":3335:3383  addressStake[_msgSender()].activeDeposit = false */\n      or\n      swap1\n      sstore\n        /* \"DegeneratorStaking.sol\":3402:3438  token.transfer(_msgSender(), amount) */\n      dup1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":5610:5661   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":5677:5695   */\n      0x24\n      dup5\n      add\n        /* \"#utility.yul\":5670:5704   */\n      dup7\n      swap1\n      mstore\n        /* \"DegeneratorStaking.sol\":3402:3438  token.transfer(_msgSender(), amount) */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DegeneratorStaking.sol\":3199:3211  tokenAddress */\n      swap1\n      swap5\n      and\n      swap5\n        /* \"DegeneratorStaking.sol\":3239:3272  addressStake[_msgSender()].amount */\n      swap4\n        /* \"DegeneratorStaking.sol\":3199:3211  tokenAddress */\n      dup6\n      swap4\n        /* \"DegeneratorStaking.sol\":3402:3416  token.transfer */\n      0xa9059cbb\n      swap4\n        /* \"#utility.yul\":5583:5601   */\n      0x44\n      dup1\n      dup4\n      add\n      swap5\n        /* \"DegeneratorStaking.sol\":3239:3265  addressStake[_msgSender()] */\n      swap4\n        /* \"DegeneratorStaking.sol\":3402:3438  token.transfer(_msgSender(), amount) */\n      swap3\n      dup4\n      swap1\n      sub\n      add\n      swap1\n      dup3\n      swap1\n        /* \"DegeneratorStaking.sol\":3199:3211  tokenAddress */\n      dup8\n        /* \"DegeneratorStaking.sol\":3402:3438  token.transfer(_msgSender(), amount) */\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_191\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_192\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_192:\n        /* \"DegeneratorStaking.sol\":3394:3458  require(token.transfer(_msgSender(), amount), \"Transfer failed\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4647:4649   */\n      0x20\n        /* \"DegeneratorStaking.sol\":3394:3458  require(token.transfer(_msgSender(), amount), \"Transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4629:4650   */\n      mstore\n        /* \"#utility.yul\":4686:4688   */\n      0x0f\n        /* \"#utility.yul\":4666:4684   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4659:4689   */\n      mstore\n      shl(0x8a, 0x151c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":4705:4723   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4698:4743   */\n      mstore\n        /* \"#utility.yul\":4760:4778   */\n      0x64\n      add\n        /* \"DegeneratorStaking.sol\":3394:3458  require(token.transfer(_msgSender(), amount), \"Transfer failed\") */\n      tag_93\n        /* \"#utility.yul\":4445:4784   */\n      jump\n        /* \"DegeneratorStaking.sol\":3394:3458  require(token.transfer(_msgSender(), amount), \"Transfer failed\") */\n    tag_193:\n        /* \"DegeneratorStaking.sol\":3494:3500  amount */\n      dup1\n        /* \"DegeneratorStaking.sol\":3468:3490  degeneratorStakingPool */\n      0x06\n      0x00\n        /* \"DegeneratorStaking.sol\":3468:3500  degeneratorStakingPool -= amount */\n      dup3\n      dup3\n      sload\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DegeneratorStaking.sol\":3532:3533  1 */\n      0x01\n        /* \"DegeneratorStaking.sol\":3510:3528  degeneratorStakers */\n      0x07\n      0x00\n        /* \"DegeneratorStaking.sol\":3510:3533  degeneratorStakers -= 1 */\n      dup3\n      dup3\n      sload\n      tag_197\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_197:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DegeneratorStaking.sol\":3556:3566  msg.sender */\n      caller\n        /* \"DegeneratorStaking.sol\":3577:3578  0 */\n      0x00\n        /* \"DegeneratorStaking.sol\":3543:3567  addressStake[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"DegeneratorStaking.sol\":3543:3555  addressStake */\n      0x09\n        /* \"DegeneratorStaking.sol\":3543:3567  addressStake[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"DegeneratorStaking.sol\":3543:3578  addressStake[msg.sender].amount = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"DegeneratorStaking.sol\":3577:3578  0 */\n      dup2\n        /* \"DegeneratorStaking.sol\":3601:3613  _msgSender() */\n      tag_198\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"DegeneratorStaking.sol\":3601:3613  _msgSender() */\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DegeneratorStaking.sol\":3588:3614  addressStake[_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"DegeneratorStaking.sol\":3588:3626  addressStake[_msgSender()].blockStaked */\n      0x01\n      add\n        /* \"DegeneratorStaking.sol\":3588:3630  addressStake[_msgSender()].blockStaked = 0 */\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DegeneratorStaking.sol\":3645:3687  degeneratorWithdrawn(_msgSender(), amount) */\n      and\n      0x14eed693e6d30152612ee94c12df593a490178621d3730e516b012e064eeef8f\n        /* \"DegeneratorStaking.sol\":3680:3686  amount */\n      dup3\n        /* \"DegeneratorStaking.sol\":3645:3687  degeneratorWithdrawn(_msgSender(), amount) */\n      mload(0x40)\n      tag_200\n      swap2\n        /* \"#utility.yul\":1808:1833   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1796:1798   */\n      0x20\n        /* \"#utility.yul\":1781:1799   */\n      add\n      swap1\n        /* \"#utility.yul\":1662:1839   */\n      jump\n        /* \"DegeneratorStaking.sol\":3645:3687  degeneratorWithdrawn(_msgSender(), amount) */\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"DegeneratorStaking.sol\":3010:3694  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_201\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_201:\n        /* \"DegeneratorStaking.sol\":2959:3694  function withdrawDegenerator() public nonReentrant {... */\n      jump\t// out\n        /* \"DegeneratorStaking.sol\":5705:5853  function setRewardBlackoutPeriod(uint256 _length) public multiSigOnly {... */\n    tag_60:\n        /* \"DegeneratorStaking.sol\":1105:1120  multiSigAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"DegeneratorStaking.sol\":1091:1101  msg.sender */\n      caller\n        /* \"DegeneratorStaking.sol\":1091:1120  msg.sender == multiSigAddress */\n      eq\n        /* \"DegeneratorStaking.sol\":1083:1169  require(msg.sender == multiSigAddress, \"Only multiSig address can call this function\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_203:\n        /* \"DegeneratorStaking.sol\":5803:5804  0 */\n      0x00\n        /* \"DegeneratorStaking.sol\":5793:5800  _length */\n      dup2\n        /* \"DegeneratorStaking.sol\":5793:5804  _length > 0 */\n      gt\n        /* \"DegeneratorStaking.sol\":5785:5805  require(_length > 0) */\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n        /* \"DegeneratorStaking.sol\":5816:5836  rewardBlackoutPeriod */\n      0x04\n        /* \"DegeneratorStaking.sol\":5816:5846  rewardBlackoutPeriod = _length */\n      sstore\n        /* \"DegeneratorStaking.sol\":5705:5853  function setRewardBlackoutPeriod(uint256 _length) public multiSigOnly {... */\n      jump\t// out\n        /* \"DegeneratorStaking.sol\":5101:5549  function getTokenReward(address _tokenAddress, address _account) public view returns(uint256) {... */\n    tag_72:\n        /* \"DegeneratorStaking.sol\":5186:5193  uint256 */\n      0x00\n        /* \"DegeneratorStaking.sol\":5213:5257  getTokenEligibility(_tokenAddress, _account) */\n      tag_208\n        /* \"DegeneratorStaking.sol\":5233:5246  _tokenAddress */\n      dup4\n        /* \"DegeneratorStaking.sol\":5248:5256  _account */\n      dup4\n        /* \"DegeneratorStaking.sol\":5213:5232  getTokenEligibility */\n      tag_76\n        /* \"DegeneratorStaking.sol\":5213:5257  getTokenEligibility(_tokenAddress, _account) */\n      jump\t// in\n    tag_208:\n        /* \"DegeneratorStaking.sol\":5205:5258  require(getTokenEligibility(_tokenAddress, _account)) */\n      tag_209\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_209:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DegeneratorStaking.sol\":5289:5317  erc20Supplies[_tokenAddress] */\n      dup1\n      dup5\n      and\n        /* \"DegeneratorStaking.sol\":5268:5286  uint256 poolSupply */\n      0x00\n        /* \"DegeneratorStaking.sol\":5289:5317  erc20Supplies[_tokenAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"DegeneratorStaking.sol\":5289:5302  erc20Supplies */\n      0x0a\n        /* \"DegeneratorStaking.sol\":5289:5317  erc20Supplies[_tokenAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DegeneratorStaking.sol\":5289:5328  erc20Supplies[_tokenAddress].poolSupply */\n      dup1\n      sload\n        /* \"DegeneratorStaking.sol\":5398:5452  erc20Supplies[_tokenAddress].degeneratorPoolSizeAtTime */\n      0x03\n      swap1\n      swap2\n      add\n      sload\n        /* \"DegeneratorStaking.sol\":5366:5388  addressStake[_account] */\n      swap5\n      dup8\n      and\n      dup5\n      mstore\n        /* \"DegeneratorStaking.sol\":5366:5378  addressStake */\n      0x09\n        /* \"DegeneratorStaking.sol\":5366:5388  addressStake[_account] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n        /* \"DegeneratorStaking.sol\":5366:5395  addressStake[_account].amount */\n      sload\n        /* \"DegeneratorStaking.sol\":5289:5328  erc20Supplies[_tokenAddress].poolSupply */\n      swap1\n      swap3\n        /* \"DegeneratorStaking.sol\":5366:5452  addressStake[_account].amount / erc20Supplies[_tokenAddress].degeneratorPoolSizeAtTime */\n      tag_210\n      swap2\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"DegeneratorStaking.sol\":5338:5452  uint256 poolPortionAtTime = addressStake[_account].amount / erc20Supplies[_tokenAddress].degeneratorPoolSizeAtTime */\n      swap1\n      pop\n        /* \"DegeneratorStaking.sol\":5462:5481  uint256 tokenReward */\n      0x00\n        /* \"DegeneratorStaking.sol\":5484:5514  poolPortionAtTime * poolSupply */\n      tag_212\n        /* \"DegeneratorStaking.sol\":5504:5514  poolSupply */\n      dup4\n        /* \"DegeneratorStaking.sol\":5338:5452  uint256 poolPortionAtTime = addressStake[_account].amount / erc20Supplies[_tokenAddress].degeneratorPoolSizeAtTime */\n      dup4\n        /* \"DegeneratorStaking.sol\":5484:5514  poolPortionAtTime * poolSupply */\n      tag_213\n      jump\t// in\n    tag_212:\n        /* \"DegeneratorStaking.sol\":5462:5514  uint256 tokenReward = poolPortionAtTime * poolSupply */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"DegeneratorStaking.sol\":5101:5549  function getTokenReward(address _tokenAddress, address _account) public view returns(uint256) {... */\n    tag_207:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DegeneratorStaking.sol\":4812:5095  function getTokenEligibility(address _tokenAddress, address _account) public view returns(bool) {... */\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DegeneratorStaking.sol\":4926:4954  erc20Supplies[_tokenAddress] */\n      dup3\n      and\n        /* \"DegeneratorStaking.sol\":4902:4906  bool */\n      0x00\n        /* \"DegeneratorStaking.sol\":4926:4954  erc20Supplies[_tokenAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"DegeneratorStaking.sol\":4926:4939  erc20Supplies */\n      0x0a\n        /* \"DegeneratorStaking.sol\":4926:4954  erc20Supplies[_tokenAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DegeneratorStaking.sol\":4926:4965  erc20Supplies[_tokenAddress].registered */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"DegeneratorStaking.sol\":4918:4966  require(erc20Supplies[_tokenAddress].registered) */\n      tag_215\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DegeneratorStaking.sol\":5046:5074  erc20Supplies[_tokenAddress] */\n      dup1\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DegeneratorStaking.sol\":5046:5059  erc20Supplies */\n      0x0a\n        /* \"DegeneratorStaking.sol\":5046:5074  erc20Supplies[_tokenAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DegeneratorStaking.sol\":5046:5088  erc20Supplies[_tokenAddress].blockSupplied */\n      0x01\n      swap1\n      dup2\n      add\n      sload\n        /* \"DegeneratorStaking.sol\":5021:5041  rewardBlackoutPeriod */\n      sload(0x04)\n        /* \"DegeneratorStaking.sol\":4984:5006  addressStake[_account] */\n      swap6\n      dup9\n      and\n      dup6\n      mstore\n        /* \"DegeneratorStaking.sol\":4984:4996  addressStake */\n      0x09\n        /* \"DegeneratorStaking.sol\":4984:5006  addressStake[_account] */\n      swap1\n      swap4\n      mstore\n      swap3\n      keccak256\n        /* \"DegeneratorStaking.sol\":4984:5018  addressStake[_account].blockStaked */\n      swap1\n      swap2\n      add\n      sload\n        /* \"DegeneratorStaking.sol\":5046:5088  erc20Supplies[_tokenAddress].blockSupplied */\n      swap1\n      swap2\n        /* \"DegeneratorStaking.sol\":4984:5041  addressStake[_account].blockStaked + rewardBlackoutPeriod */\n      tag_216\n      swap2\n      tag_120\n      jump\t// in\n    tag_216:\n        /* \"DegeneratorStaking.sol\":4983:5088  (addressStake[_account].blockStaked + rewardBlackoutPeriod) <= erc20Supplies[_tokenAddress].blockSupplied */\n      gt\n      iszero\n      swap4\n        /* \"DegeneratorStaking.sol\":4812:5095  function getTokenEligibility(address _tokenAddress, address _account) public view returns(bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7329:7331   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7311:7332   */\n      mstore\n        /* \"#utility.yul\":7368:7370   */\n      0x1f\n        /* \"#utility.yul\":7348:7366   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7341:7371   */\n      mstore\n        /* \"#utility.yul\":7407:7440   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7387:7405   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7380:7441   */\n      mstore\n        /* \"#utility.yul\":7458:7476   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_93\n        /* \"#utility.yul\":7127:7482   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_218:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_26:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_227:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":599:772   */\n    tag_223:\n        /* \"#utility.yul\":667:687   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":716:747   */\n      dup2\n      and\n        /* \"#utility.yul\":706:748   */\n      dup2\n      eq\n        /* \"#utility.yul\":696:766   */\n      tag_231\n      jumpi\n        /* \"#utility.yul\":762:763   */\n      0x00\n        /* \"#utility.yul\":759:760   */\n      dup1\n        /* \"#utility.yul\":752:764   */\n      revert\n        /* \"#utility.yul\":696:766   */\n    tag_231:\n        /* \"#utility.yul\":599:772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":777:1037   */\n    tag_41:\n        /* \"#utility.yul\":845:851   */\n      0x00\n        /* \"#utility.yul\":853:859   */\n      dup1\n        /* \"#utility.yul\":906:908   */\n      0x40\n        /* \"#utility.yul\":894:903   */\n      dup4\n        /* \"#utility.yul\":885:892   */\n      dup6\n        /* \"#utility.yul\":881:904   */\n      sub\n        /* \"#utility.yul\":877:909   */\n      slt\n        /* \"#utility.yul\":874:926   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":922:923   */\n      0x00\n        /* \"#utility.yul\":919:920   */\n      dup1\n        /* \"#utility.yul\":912:924   */\n      revert\n        /* \"#utility.yul\":874:926   */\n    tag_233:\n        /* \"#utility.yul\":945:974   */\n      tag_234\n        /* \"#utility.yul\":964:973   */\n      dup4\n        /* \"#utility.yul\":945:974   */\n      tag_223\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":935:974   */\n      swap2\n      pop\n        /* \"#utility.yul\":993:1031   */\n      tag_235\n        /* \"#utility.yul\":1027:1029   */\n      0x20\n        /* \"#utility.yul\":1016:1025   */\n      dup5\n        /* \"#utility.yul\":1012:1030   */\n      add\n        /* \"#utility.yul\":993:1031   */\n      tag_223\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":983:1031   */\n      swap1\n      pop\n        /* \"#utility.yul\":777:1037   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1657   */\n    tag_46:\n        /* \"#utility.yul\":1128:1134   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup1\n        /* \"#utility.yul\":1189:1191   */\n      0x20\n        /* \"#utility.yul\":1177:1186   */\n      dup4\n        /* \"#utility.yul\":1168:1175   */\n      dup6\n        /* \"#utility.yul\":1164:1187   */\n      sub\n        /* \"#utility.yul\":1160:1192   */\n      slt\n        /* \"#utility.yul\":1157:1209   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":1205:1206   */\n      0x00\n        /* \"#utility.yul\":1202:1203   */\n      dup1\n        /* \"#utility.yul\":1195:1207   */\n      revert\n        /* \"#utility.yul\":1157:1209   */\n    tag_237:\n        /* \"#utility.yul\":1245:1254   */\n      dup3\n        /* \"#utility.yul\":1232:1255   */\n      calldataload\n        /* \"#utility.yul\":1274:1292   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1315:1317   */\n      dup1\n        /* \"#utility.yul\":1307:1313   */\n      dup3\n        /* \"#utility.yul\":1304:1318   */\n      gt\n        /* \"#utility.yul\":1301:1335   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":1331:1332   */\n      0x00\n        /* \"#utility.yul\":1328:1329   */\n      dup1\n        /* \"#utility.yul\":1321:1333   */\n      revert\n        /* \"#utility.yul\":1301:1335   */\n    tag_238:\n        /* \"#utility.yul\":1369:1375   */\n      dup2\n        /* \"#utility.yul\":1358:1367   */\n      dup6\n        /* \"#utility.yul\":1354:1376   */\n      add\n        /* \"#utility.yul\":1344:1376   */\n      swap2\n      pop\n        /* \"#utility.yul\":1414:1421   */\n      dup6\n        /* \"#utility.yul\":1407:1411   */\n      0x1f\n        /* \"#utility.yul\":1403:1405   */\n      dup4\n        /* \"#utility.yul\":1399:1412   */\n      add\n        /* \"#utility.yul\":1395:1422   */\n      slt\n        /* \"#utility.yul\":1385:1440   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":1436:1437   */\n      0x00\n        /* \"#utility.yul\":1433:1434   */\n      dup1\n        /* \"#utility.yul\":1426:1438   */\n      revert\n        /* \"#utility.yul\":1385:1440   */\n    tag_239:\n        /* \"#utility.yul\":1476:1478   */\n      dup2\n        /* \"#utility.yul\":1463:1479   */\n      calldataload\n        /* \"#utility.yul\":1502:1504   */\n      dup2\n        /* \"#utility.yul\":1494:1500   */\n      dup2\n        /* \"#utility.yul\":1491:1505   */\n      gt\n        /* \"#utility.yul\":1488:1522   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":1518:1519   */\n      0x00\n        /* \"#utility.yul\":1515:1516   */\n      dup1\n        /* \"#utility.yul\":1508:1520   */\n      revert\n        /* \"#utility.yul\":1488:1522   */\n    tag_240:\n        /* \"#utility.yul\":1571:1578   */\n      dup7\n        /* \"#utility.yul\":1566:1568   */\n      0x20\n        /* \"#utility.yul\":1556:1562   */\n      dup3\n        /* \"#utility.yul\":1553:1554   */\n      0x05\n        /* \"#utility.yul\":1549:1563   */\n      shl\n        /* \"#utility.yul\":1545:1547   */\n      dup6\n        /* \"#utility.yul\":1541:1564   */\n      add\n        /* \"#utility.yul\":1537:1569   */\n      add\n        /* \"#utility.yul\":1534:1579   */\n      gt\n        /* \"#utility.yul\":1531:1596   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":1592:1593   */\n      0x00\n        /* \"#utility.yul\":1589:1590   */\n      dup1\n        /* \"#utility.yul\":1582:1594   */\n      revert\n        /* \"#utility.yul\":1531:1596   */\n    tag_241:\n        /* \"#utility.yul\":1623:1625   */\n      0x20\n        /* \"#utility.yul\":1615:1626   */\n      swap3\n      swap1\n      swap3\n      add\n      swap7\n        /* \"#utility.yul\":1645:1651   */\n      swap2\n      swap6\n      pop\n        /* \"#utility.yul\":1042:1657   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1844:2098   */\n    tag_54:\n        /* \"#utility.yul\":1912:1918   */\n      0x00\n        /* \"#utility.yul\":1920:1926   */\n      dup1\n        /* \"#utility.yul\":1973:1975   */\n      0x40\n        /* \"#utility.yul\":1961:1970   */\n      dup4\n        /* \"#utility.yul\":1952:1959   */\n      dup6\n        /* \"#utility.yul\":1948:1971   */\n      sub\n        /* \"#utility.yul\":1944:1976   */\n      slt\n        /* \"#utility.yul\":1941:1993   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":1989:1990   */\n      0x00\n        /* \"#utility.yul\":1986:1987   */\n      dup1\n        /* \"#utility.yul\":1979:1991   */\n      revert\n        /* \"#utility.yul\":1941:1993   */\n    tag_244:\n        /* \"#utility.yul\":2012:2041   */\n      tag_245\n        /* \"#utility.yul\":2031:2040   */\n      dup4\n        /* \"#utility.yul\":2012:2041   */\n      tag_223\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2002:2041   */\n      swap5\n        /* \"#utility.yul\":2088:2090   */\n      0x20\n        /* \"#utility.yul\":2073:2091   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2060:2092   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1844:2098   */\n      jump\t// out\n        /* \"#utility.yul\":2340:2526   */\n    tag_87:\n        /* \"#utility.yul\":2399:2405   */\n      0x00\n        /* \"#utility.yul\":2452:2454   */\n      0x20\n        /* \"#utility.yul\":2440:2449   */\n      dup3\n        /* \"#utility.yul\":2431:2438   */\n      dup5\n        /* \"#utility.yul\":2427:2450   */\n      sub\n        /* \"#utility.yul\":2423:2455   */\n      slt\n        /* \"#utility.yul\":2420:2472   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":2468:2469   */\n      0x00\n        /* \"#utility.yul\":2465:2466   */\n      dup1\n        /* \"#utility.yul\":2458:2470   */\n      revert\n        /* \"#utility.yul\":2420:2472   */\n    tag_248:\n        /* \"#utility.yul\":2491:2520   */\n      tag_249\n        /* \"#utility.yul\":2510:2519   */\n      dup3\n        /* \"#utility.yul\":2491:2520   */\n      tag_223\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":2481:2520   */\n      swap4\n        /* \"#utility.yul\":2340:2526   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3009:3417   */\n    tag_94:\n        /* \"#utility.yul\":3211:3213   */\n      0x20\n        /* \"#utility.yul\":3193:3214   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3250:3252   */\n      0x2c\n        /* \"#utility.yul\":3230:3248   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3223:3253   */\n      mstore\n        /* \"#utility.yul\":3289:3323   */\n      0x4f6e6c79206d756c746953696720616464726573732063616e2063616c6c2074\n        /* \"#utility.yul\":3284:3286   */\n      0x40\n        /* \"#utility.yul\":3269:3287   */\n      dup3\n      add\n        /* \"#utility.yul\":3262:3324   */\n      mstore\n      shl(0xa1, 0x3434b990333ab731ba34b7b7)\n        /* \"#utility.yul\":3355:3357   */\n      0x60\n        /* \"#utility.yul\":3340:3358   */\n      dup3\n      add\n        /* \"#utility.yul\":3333:3375   */\n      mstore\n        /* \"#utility.yul\":3407:3410   */\n      0x80\n        /* \"#utility.yul\":3392:3411   */\n      add\n      swap1\n        /* \"#utility.yul\":3009:3417   */\n      jump\t// out\n        /* \"#utility.yul\":4163:4440   */\n    tag_112:\n        /* \"#utility.yul\":4230:4236   */\n      0x00\n        /* \"#utility.yul\":4283:4285   */\n      0x20\n        /* \"#utility.yul\":4271:4280   */\n      dup3\n        /* \"#utility.yul\":4262:4269   */\n      dup5\n        /* \"#utility.yul\":4258:4281   */\n      sub\n        /* \"#utility.yul\":4254:4286   */\n      slt\n        /* \"#utility.yul\":4251:4303   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":4299:4300   */\n      0x00\n        /* \"#utility.yul\":4296:4297   */\n      dup1\n        /* \"#utility.yul\":4289:4301   */\n      revert\n        /* \"#utility.yul\":4251:4303   */\n    tag_255:\n        /* \"#utility.yul\":4331:4340   */\n      dup2\n        /* \"#utility.yul\":4325:4341   */\n      mload\n        /* \"#utility.yul\":4384:4389   */\n      dup1\n        /* \"#utility.yul\":4377:4390   */\n      iszero\n        /* \"#utility.yul\":4370:4391   */\n      iszero\n        /* \"#utility.yul\":4363:4368   */\n      dup2\n        /* \"#utility.yul\":4360:4392   */\n      eq\n        /* \"#utility.yul\":4350:4410   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":4406:4407   */\n      0x00\n        /* \"#utility.yul\":4403:4404   */\n      dup1\n        /* \"#utility.yul\":4396:4408   */\n      revert\n        /* \"#utility.yul\":4789:4916   */\n    tag_224:\n        /* \"#utility.yul\":4850:4860   */\n      0x4e487b71\n        /* \"#utility.yul\":4845:4848   */\n      0xe0\n        /* \"#utility.yul\":4841:4861   */\n      shl\n        /* \"#utility.yul\":4838:4839   */\n      0x00\n        /* \"#utility.yul\":4831:4862   */\n      mstore\n        /* \"#utility.yul\":4881:4885   */\n      0x11\n        /* \"#utility.yul\":4878:4879   */\n      0x04\n        /* \"#utility.yul\":4871:4886   */\n      mstore\n        /* \"#utility.yul\":4905:4909   */\n      0x24\n        /* \"#utility.yul\":4902:4903   */\n      0x00\n        /* \"#utility.yul\":4895:4910   */\n      revert\n        /* \"#utility.yul\":4921:5046   */\n    tag_120:\n        /* \"#utility.yul\":4986:4995   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5007:5017   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5004:5040   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":5020:5038   */\n      tag_207\n      tag_224\n      jump\t// in\n        /* \"#utility.yul\":5304:5431   */\n    tag_140:\n        /* \"#utility.yul\":5365:5375   */\n      0x4e487b71\n        /* \"#utility.yul\":5360:5363   */\n      0xe0\n        /* \"#utility.yul\":5356:5376   */\n      shl\n        /* \"#utility.yul\":5353:5354   */\n      0x00\n        /* \"#utility.yul\":5346:5377   */\n      mstore\n        /* \"#utility.yul\":5396:5400   */\n      0x32\n        /* \"#utility.yul\":5393:5394   */\n      0x04\n        /* \"#utility.yul\":5386:5401   */\n      mstore\n        /* \"#utility.yul\":5420:5424   */\n      0x24\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5410:5425   */\n      revert\n        /* \"#utility.yul\":5715:5899   */\n    tag_170:\n        /* \"#utility.yul\":5785:5791   */\n      0x00\n        /* \"#utility.yul\":5838:5840   */\n      0x20\n        /* \"#utility.yul\":5826:5835   */\n      dup3\n        /* \"#utility.yul\":5817:5824   */\n      dup5\n        /* \"#utility.yul\":5813:5836   */\n      sub\n        /* \"#utility.yul\":5809:5841   */\n      slt\n        /* \"#utility.yul\":5806:5858   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":5854:5855   */\n      0x00\n        /* \"#utility.yul\":5851:5852   */\n      dup1\n        /* \"#utility.yul\":5844:5856   */\n      revert\n        /* \"#utility.yul\":5806:5858   */\n    tag_266:\n      pop\n        /* \"#utility.yul\":5877:5893   */\n      mload\n      swap2\n        /* \"#utility.yul\":5715:5899   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6599:6727   */\n    tag_196:\n        /* \"#utility.yul\":6666:6675   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6687:6698   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6684:6721   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":6701:6719   */\n      tag_207\n      tag_224\n      jump\t// in\n        /* \"#utility.yul\":6732:6949   */\n    tag_211:\n        /* \"#utility.yul\":6772:6773   */\n      0x00\n        /* \"#utility.yul\":6798:6799   */\n      dup3\n        /* \"#utility.yul\":6788:6920   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":6842:6852   */\n      0x4e487b71\n        /* \"#utility.yul\":6837:6840   */\n      0xe0\n        /* \"#utility.yul\":6833:6853   */\n      shl\n        /* \"#utility.yul\":6830:6831   */\n      0x00\n        /* \"#utility.yul\":6823:6854   */\n      mstore\n        /* \"#utility.yul\":6877:6881   */\n      0x12\n        /* \"#utility.yul\":6874:6875   */\n      0x04\n        /* \"#utility.yul\":6867:6882   */\n      mstore\n        /* \"#utility.yul\":6905:6909   */\n      0x24\n        /* \"#utility.yul\":6902:6903   */\n      0x00\n        /* \"#utility.yul\":6895:6910   */\n      revert\n        /* \"#utility.yul\":6788:6920   */\n    tag_273:\n      pop\n        /* \"#utility.yul\":6934:6943   */\n      div\n      swap1\n        /* \"#utility.yul\":6732:6949   */\n      jump\t// out\n        /* \"#utility.yul\":6954:7122   */\n    tag_213:\n        /* \"#utility.yul\":7027:7036   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":7058:7067   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7075:7090   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":7069:7091   */\n      dup5\n      eq\n        /* \"#utility.yul\":7055:7092   */\n      or\n        /* \"#utility.yul\":7045:7116   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":7096:7114   */\n      tag_207\n      tag_224\n      jump\t// in\n\n    auxdata: 0xa26469706673582212207b8007d07bab1c03cf8c4e83ae29b887f584d48386ce68e25fb70e86f4ce605764736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_472": {
									"entryPoint": null,
									"id": 472,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory": {
									"entryPoint": 143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:614:6",
										"nodeType": "YulBlock",
										"src": "0:614:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:6",
													"nodeType": "YulBlock",
													"src": "74:117:6",
													"statements": [
														{
															"nativeSrc": "84:22:6",
															"nodeType": "YulAssignment",
															"src": "84:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:6"
																},
																"nativeSrc": "93:13:6",
																"nodeType": "YulFunctionCall",
																"src": "93:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:6",
																"nodeType": "YulBlock",
																"src": "169:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:6",
																					"nodeType": "YulLiteral",
																					"src": "178:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:6",
																					"nodeType": "YulLiteral",
																					"src": "181:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:6"
																			},
																			"nativeSrc": "171:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:6"
																		},
																		"nativeSrc": "171:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:6",
																										"nodeType": "YulLiteral",
																										"src": "154:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:6",
																										"nodeType": "YulLiteral",
																										"src": "159:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:6"
																								},
																								"nativeSrc": "150:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:6",
																								"nodeType": "YulLiteral",
																								"src": "163:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:6"
																						},
																						"nativeSrc": "146:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:6"
																				},
																				"nativeSrc": "135:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:6"
																		},
																		"nativeSrc": "125:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:6"
																},
																"nativeSrc": "118:50:6",
																"nodeType": "YulFunctionCall",
																"src": "118:50:6"
															},
															"nativeSrc": "115:70:6",
															"nodeType": "YulIf",
															"src": "115:70:6"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:6",
														"nodeType": "YulTypedName",
														"src": "53:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:6",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "14:177:6"
											},
											{
												"body": {
													"nativeSrc": "328:284:6",
													"nodeType": "YulBlock",
													"src": "328:284:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "375:16:6",
																"nodeType": "YulBlock",
																"src": "375:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "384:1:6",
																					"nodeType": "YulLiteral",
																					"src": "384:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "387:1:6",
																					"nodeType": "YulLiteral",
																					"src": "387:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "377:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "377:6:6"
																			},
																			"nativeSrc": "377:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "377:12:6"
																		},
																		"nativeSrc": "377:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "377:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "349:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "349:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "358:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "358:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "345:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:6"
																		},
																		"nativeSrc": "345:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "345:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "370:3:6",
																		"nodeType": "YulLiteral",
																		"src": "370:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "341:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:6"
																},
																"nativeSrc": "341:33:6",
																"nodeType": "YulFunctionCall",
																"src": "341:33:6"
															},
															"nativeSrc": "338:53:6",
															"nodeType": "YulIf",
															"src": "338:53:6"
														},
														{
															"nativeSrc": "400:50:6",
															"nodeType": "YulAssignment",
															"src": "400:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "440:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "440:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "410:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "410:29:6"
																},
																"nativeSrc": "410:40:6",
																"nodeType": "YulFunctionCall",
																"src": "410:40:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "400:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:6"
																}
															]
														},
														{
															"nativeSrc": "459:59:6",
															"nodeType": "YulAssignment",
															"src": "459:59:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "503:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "503:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "514:2:6",
																				"nodeType": "YulLiteral",
																				"src": "514:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "499:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:6"
																		},
																		"nativeSrc": "499:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "499:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "469:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "469:29:6"
																},
																"nativeSrc": "469:49:6",
																"nodeType": "YulFunctionCall",
																"src": "469:49:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "459:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "459:6:6"
																}
															]
														},
														{
															"nativeSrc": "527:35:6",
															"nodeType": "YulAssignment",
															"src": "527:35:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "547:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "547:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "558:2:6",
																				"nodeType": "YulLiteral",
																				"src": "558:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "543:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "543:3:6"
																		},
																		"nativeSrc": "543:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "543:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "537:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "537:5:6"
																},
																"nativeSrc": "537:25:6",
																"nodeType": "YulFunctionCall",
																"src": "537:25:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "527:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "527:6:6"
																}
															]
														},
														{
															"nativeSrc": "571:35:6",
															"nodeType": "YulAssignment",
															"src": "571:35:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "591:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "591:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "602:2:6",
																				"nodeType": "YulLiteral",
																				"src": "602:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "587:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "587:3:6"
																		},
																		"nativeSrc": "587:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "587:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "581:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "581:5:6"
																},
																"nativeSrc": "581:25:6",
																"nodeType": "YulFunctionCall",
																"src": "581:25:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "571:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "571:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory",
												"nativeSrc": "196:416:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "270:9:6",
														"nodeType": "YulTypedName",
														"src": "270:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "281:7:6",
														"nodeType": "YulTypedName",
														"src": "281:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "293:6:6",
														"nodeType": "YulTypedName",
														"src": "293:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "301:6:6",
														"nodeType": "YulTypedName",
														"src": "301:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "309:6:6",
														"nodeType": "YulTypedName",
														"src": "309:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "317:6:6",
														"nodeType": "YulTypedName",
														"src": "317:6:6",
														"type": ""
													}
												],
												"src": "196:416:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50604051610ee7380380610ee7833981016040819052602b91608f565b60015f81815581546001600160a01b03199081166001600160a01b0397881617909255600280549092169490951693909317909255600491909155600355600681905560075560ca565b80516001600160a01b0381168114608a575f80fd5b919050565b5f805f806080858703121560a1575f80fd5b60a8856075565b935060b4602086016075565b6040860151606090960151949790965092505050565b610e10806100d75f395ff3fe608060405234801561000f575f80fd5b5060043610610111575f3560e01c80639b29d2151161009e578063a164959d1161006e578063a164959d14610234578063acde659714610247578063ad5a402b1461025a578063c45a015514610263578063caf10b5714610276575f80fd5b80639b29d215146101fc5780639d76ea581461020f5780639f8932f414610222578063a163beea1461022b575f80fd5b8063609c878a116100e4578063609c878a1461018a57806362d76d06146101b75780636b036f45146101ca5780638167ee72146101e157806395adb5ad146101f4575f80fd5b80630d29fcd4146101155780631516def71461012a578063387602981461015a57806341fee55714610177575b5f80fd5b610128610123366004610bba565b6102df565b005b60015461013d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6008546101679060ff1681565b6040519015158152602001610151565b610128610185366004610bba565b610322565b610167610198366004610bec565b600b60209081525f928352604080842090915290825290205460ff1681565b6101286101c5366004610c1d565b61052c565b6101d360035481565b604051908152602001610151565b6101286101ef366004610c8c565b610736565b61012861080f565b61012861020a366004610bba565b610a54565b60025461013d906001600160a01b031681565b6101d360045481565b6101d360075481565b6101d3610242366004610bec565b610a8e565b610167610255366004610bec565b610af5565b6101d360065481565b60055461013d906001600160a01b031681565b6102b5610284366004610cb4565b600a6020525f9081526040902080546001820154600283015460038401546004909401549293919290919060ff1685565b6040805195865260208601949094529284019190915260608301521515608082015260a001610151565b6001546001600160a01b031633146103125760405162461bcd60e51b815260040161030990610cd4565b60405180910390fd5b5f811161031d575f80fd5b600355565b61032a610b63565b6002546008546001600160a01b039091169060ff16610347575f80fd5b60035482116103985760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610309565b6001600160a01b0381166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303815f875af11580156103f8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061041c9190610d20565b61045a5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610309565b335f90815260096020526040902060020154610100900460ff161561047d575f80fd5b335f908152600960205260408120805484929061049b908490610d53565b9091555050335f90815260096020526040812043600190910155600680548492906104c7908490610d53565b92505081905550600160075f8282546104e09190610d53565b90915550506040805183815243602082015233917f0ae860169ef88b6e5a084a54675af932ac7be23de4abd34a1d99a5a8402a17cc910160405180910390a25061052960015f55565b50565b335f90815260096020526040902060020154610100900460ff1661054e575f80fd5b610556610b63565b5f5b818110156107285761059083838381811061057557610575610d66565b905060200201602081019061058a9190610cb4565b33610af5565b610598575f80fd5b600b5f8484848181106105ad576105ad610d66565b90506020020160208101906105c29190610cb4565b6001600160a01b0316815260208082019290925260409081015f90812033825290925290205460ff16156105f4575f80fd5b5f61062584848481811061060a5761060a610d66565b905060200201602081019061061f9190610cb4565b33610a8e565b90506001600b5f86868681811061063e5761063e610d66565b90506020020160208101906106539190610cb4565b6001600160a01b0316815260208082019290925260409081015f9081203382529092529020805460ff191691151591909117905583838381811061069957610699610d66565b90506020020160208101906106ae9190610cb4565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044016020604051808303815f875af11580156106fa573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061071e9190610d20565b5050600101610558565b5061073260015f55565b5050565b61073e610b63565b6040516370a0823160e01b815230600482015281906001600160a01b038416906370a0823190602401602060405180830381865afa158015610782573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a69190610d7a565b146107af575f80fd5b6001600160a01b0382165f908152600a602052604090206004015460ff16156107d6575f80fd5b6001600160a01b0382165f908152600a602052604090204360018201558181556002810182905560065460039091015561073260015f55565b610817610b63565b335f908152600960205260409020546108635760405162461bcd60e51b815260206004820152600e60248201526d139bc81cdd185ad948199bdd5b9960921b6044820152606401610309565b335f9081526009602052604090206002015460ff16156108c55760405162461bcd60e51b815260206004820152601760248201527f5374616b6520616c72656164792077697468647261776e0000000000000000006044820152606401610309565b60028054335f81815260096020908152604080832080549601805461ffff19166001179055805163a9059cbb60e01b8152600481019490945260248401869052516001600160a01b039094169493859363a9059cbb93604480830194939283900301908290875af115801561093c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109609190610d20565b61099e5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610309565b8060065f8282546109af9190610d91565b92505081905550600160075f8282546109c89190610d91565b9091555050335f9081526009602081905260408220829055816109e83390565b6001600160a01b0316815260208101919091526040015f2060010155336001600160a01b03167f14eed693e6d30152612ee94c12df593a490178621d3730e516b012e064eeef8f82604051610a3f91815260200190565b60405180910390a25050610a5260015f55565b565b6001546001600160a01b03163314610a7e5760405162461bcd60e51b815260040161030990610cd4565b5f8111610a89575f80fd5b600455565b5f610a998383610af5565b610aa1575f80fd5b6001600160a01b038084165f908152600a602090815260408083208054600390910154948716845260099092528220549092610adc91610da4565b90505f610ae98383610dc3565b93505050505b92915050565b6001600160a01b0382165f908152600a602052604081206004015460ff16610b1b575f80fd5b6001600160a01b038084165f908152600a60209081526040808320600190810154600454958816855260099093529220909101549091610b5a91610d53565b11159392505050565b60025f5403610bb45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610309565b60025f55565b5f60208284031215610bca575f80fd5b5035919050565b80356001600160a01b0381168114610be7575f80fd5b919050565b5f8060408385031215610bfd575f80fd5b610c0683610bd1565b9150610c1460208401610bd1565b90509250929050565b5f8060208385031215610c2e575f80fd5b823567ffffffffffffffff80821115610c45575f80fd5b818501915085601f830112610c58575f80fd5b813581811115610c66575f80fd5b8660208260051b8501011115610c7a575f80fd5b60209290920196919550909350505050565b5f8060408385031215610c9d575f80fd5b610ca683610bd1565b946020939093013593505050565b5f60208284031215610cc4575f80fd5b610ccd82610bd1565b9392505050565b6020808252602c908201527f4f6e6c79206d756c746953696720616464726573732063616e2063616c6c207460408201526b3434b990333ab731ba34b7b760a11b606082015260800190565b5f60208284031215610d30575f80fd5b81518015158114610ccd575f80fd5b634e487b7160e01b5f52601160045260245ffd5b80820180821115610aef57610aef610d3f565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215610d8a575f80fd5b5051919050565b81810381811115610aef57610aef610d3f565b5f82610dbe57634e487b7160e01b5f52601260045260245ffd5b500490565b8082028115828204841417610aef57610aef610d3f56fea26469706673582212207b8007d07bab1c03cf8c4e83ae29b887f584d48386ce68e25fb70e86f4ce605764736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xEE7 CODESIZE SUB DUP1 PUSH2 0xEE7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x2B SWAP2 PUSH1 0x8F JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 DUP2 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP3 AND SWAP5 SWAP1 SWAP6 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SSTORE PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x7 SSTORE PUSH1 0xCA JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0x8A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH1 0xA1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xA8 DUP6 PUSH1 0x75 JUMP JUMPDEST SWAP4 POP PUSH1 0xB4 PUSH1 0x20 DUP7 ADD PUSH1 0x75 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xE10 DUP1 PUSH2 0xD7 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x111 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B29D215 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xA164959D GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA164959D EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xACDE6597 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xAD5A402B EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xCAF10B57 EQ PUSH2 0x276 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B29D215 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x9F8932F4 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xA163BEEA EQ PUSH2 0x22B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x609C878A GT PUSH2 0xE4 JUMPI DUP1 PUSH4 0x609C878A EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x62D76D06 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x6B036F45 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x8167EE72 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x95ADB5AD EQ PUSH2 0x1F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD29FCD4 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x1516DEF7 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x38760298 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x41FEE557 EQ PUSH2 0x177 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x128 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x13D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x167 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH2 0x167 PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC1D JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST PUSH2 0x1D3 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x736 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x80F JUMP JUMPDEST PUSH2 0x128 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0xA54 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x13D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1D3 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D3 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0xBEC JUMP JUMPDEST PUSH2 0xA8E JUMP JUMPDEST PUSH2 0x167 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0xBEC JUMP JUMPDEST PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x1D3 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x13D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x309 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x31D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x32A PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0xFF AND PUSH2 0x347 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP3 GT PUSH2 0x398 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH4 0x23B872DD CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x47D JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x49B SWAP1 DUP5 SWAP1 PUSH2 0xD53 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 NUMBER PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x6 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4C7 SWAP1 DUP5 SWAP1 PUSH2 0xD53 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0xD53 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE NUMBER PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0xAE860169EF88B6E5A084A54675AF932AC7BE23DE4ABD34A1D99A5A8402A17CC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x529 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x54E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x556 PUSH2 0xB63 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x728 JUMPI PUSH2 0x590 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x575 JUMPI PUSH2 0x575 PUSH2 0xD66 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x58A SWAP2 SWAP1 PUSH2 0xCB4 JUMP JUMPDEST CALLER PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x598 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xB PUSH0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x5AD JUMPI PUSH2 0x5AD PUSH2 0xD66 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x625 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x60A JUMPI PUSH2 0x60A PUSH2 0xD66 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x61F SWAP2 SWAP1 PUSH2 0xCB4 JUMP JUMPDEST CALLER PUSH2 0xA8E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0xB PUSH0 DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x63E JUMPI PUSH2 0x63E PUSH2 0xD66 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x653 SWAP2 SWAP1 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x699 JUMPI PUSH2 0x699 PUSH2 0xD66 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6AE SWAP2 SWAP1 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6FA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71E SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x558 JUMP JUMPDEST POP PUSH2 0x732 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x73E PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x782 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A6 SWAP2 SWAP1 PUSH2 0xD7A JUMP JUMPDEST EQ PUSH2 0x7AF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 NUMBER PUSH1 0x1 DUP3 ADD SSTORE DUP2 DUP2 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH2 0x732 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x817 PUSH2 0xB63 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x863 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BC81CDD185AD948199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B6520616C72656164792077697468647261776E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP7 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x24 DUP5 ADD DUP7 SWAP1 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP5 SWAP4 DUP6 SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP4 ADD SWAP5 SWAP4 SWAP3 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x93C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x960 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9AF SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP3 SWAP1 SSTORE DUP2 PUSH2 0x9E8 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SSTORE CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x14EED693E6D30152612EE94C12DF593A490178621D3730E516B012E064EEEF8F DUP3 PUSH1 0x40 MLOAD PUSH2 0xA3F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xA52 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x309 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xA89 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0xA99 DUP4 DUP4 PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0xAA1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD SWAP5 DUP8 AND DUP5 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP1 SWAP3 PUSH2 0xADC SWAP2 PUSH2 0xDA4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xAE9 DUP4 DUP4 PUSH2 0xDC3 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0xB1B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD PUSH1 0x4 SLOAD SWAP6 DUP9 AND DUP6 MSTORE PUSH1 0x9 SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 PUSH2 0xB5A SWAP2 PUSH2 0xD53 JUMP JUMPDEST GT ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xBB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBCA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBFD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC06 DUP4 PUSH2 0xBD1 JUMP JUMPDEST SWAP2 POP PUSH2 0xC14 PUSH1 0x20 DUP5 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC2E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC45 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC58 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xC66 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xC7A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC9D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCA6 DUP4 PUSH2 0xBD1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCCD DUP3 PUSH2 0xBD1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206D756C746953696720616464726573732063616E2063616C6C2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x3434B990333AB731BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD30 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCCD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xAEF JUMPI PUSH2 0xAEF PUSH2 0xD3F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xAEF JUMPI PUSH2 0xAEF PUSH2 0xD3F JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xDBE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xAEF JUMPI PUSH2 0xAEF PUSH2 0xD3F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x8007D07BAB1C03CF8C4E83AE29B887F584D48386CE68E25FB70E86F4 0xCE PUSH1 0x57 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "424:5432:4:-:0;;;1917:384;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:1;1821:7;:22;;;2050:34:4;;-1:-1:-1;;;;;;2050:34:4;;;-1:-1:-1;;;;;2050:34:4;;;;;;;2094:12;:28;;;;;;;;;;;;;;;;2132:20;:44;;;;2186:18;:40;2236:22;:26;;;2272:18;:22;424:5432;;14:177:6;93:13;;-1:-1:-1;;;;;135:31:6;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:416::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;558:2;543:18;;537:25;602:2;587:18;;;581:25;196:416;;459:59;;-1:-1:-1;196:416:6;-1:-1:-1;;;196:416:6:o;:::-;424:5432:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_302": {
									"entryPoint": null,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": null,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 2915,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addressWithdrewERC20Reward_422": {
									"entryPoint": null,
									"id": 422,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@degeneratorStakers_346": {
									"entryPoint": null,
									"id": 346,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@degeneratorStakingPool_344": {
									"entryPoint": null,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc20Supplies_416": {
									"entryPoint": null,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@factory_342": {
									"entryPoint": null,
									"id": 342,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getTokenEligibility_821": {
									"entryPoint": 2805,
									"id": 821,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getTokenReward_865": {
									"entryPoint": 2702,
									"id": 865,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@minimumStakeAmount_337": {
									"entryPoint": null,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@multiSigAddress_333": {
									"entryPoint": null,
									"id": 333,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@registerERC20Supply_713": {
									"entryPoint": 1846,
									"id": 713,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@rewardBlackoutPeriod_339": {
									"entryPoint": null,
									"id": 339,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMinimumStakeAmount_883": {
									"entryPoint": 735,
									"id": 883,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardBlackoutPeriod_901": {
									"entryPoint": 2644,
									"id": 901,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeDegnerator_554": {
									"entryPoint": 802,
									"id": 554,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakingOpen_348": {
									"entryPoint": null,
									"id": 348,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenAddress_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawDegenerator_652": {
									"entryPoint": 2063,
									"id": 652,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawRewards_791": {
									"entryPoint": 1324,
									"id": 791,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 3101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IFairLaunchFactoryV1_$1073__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_644e8db99e7c305cbaf9ab7cf4dfbbf8e9d24808e86a7c505456e21dd10275ce__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a89e8792d12ab2935107c47df3d6e37408b35c7947605d9909710024cead9a50__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3391,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3430,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7484:6",
										"nodeType": "YulBlock",
										"src": "0:7484:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:6",
													"nodeType": "YulBlock",
													"src": "84:110:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:6",
																"nodeType": "YulBlock",
																"src": "130:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:6",
																					"nodeType": "YulLiteral",
																					"src": "139:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:6",
																					"nodeType": "YulLiteral",
																					"src": "142:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:6"
																			},
																			"nativeSrc": "132:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:6"
																		},
																		"nativeSrc": "132:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:6"
																		},
																		"nativeSrc": "101:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:6",
																		"nodeType": "YulLiteral",
																		"src": "126:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:6"
																},
																"nativeSrc": "97:32:6",
																"nodeType": "YulFunctionCall",
																"src": "97:32:6"
															},
															"nativeSrc": "94:52:6",
															"nodeType": "YulIf",
															"src": "94:52:6"
														},
														{
															"nativeSrc": "155:33:6",
															"nodeType": "YulAssignment",
															"src": "155:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:6"
																},
																"nativeSrc": "165:23:6",
																"nodeType": "YulFunctionCall",
																"src": "165:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:180:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:6",
														"nodeType": "YulTypedName",
														"src": "50:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:6",
														"nodeType": "YulTypedName",
														"src": "61:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:6",
														"nodeType": "YulTypedName",
														"src": "73:6:6",
														"type": ""
													}
												],
												"src": "14:180:6"
											},
											{
												"body": {
													"nativeSrc": "300:102:6",
													"nodeType": "YulBlock",
													"src": "300:102:6",
													"statements": [
														{
															"nativeSrc": "310:26:6",
															"nodeType": "YulAssignment",
															"src": "310:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "322:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "333:2:6",
																		"nodeType": "YulLiteral",
																		"src": "333:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "318:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:6"
																},
																"nativeSrc": "318:18:6",
																"nodeType": "YulFunctionCall",
																"src": "318:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "310:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "352:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "367:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "367:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "383:3:6",
																								"nodeType": "YulLiteral",
																								"src": "383:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "388:1:6",
																								"nodeType": "YulLiteral",
																								"src": "388:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "379:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "379:3:6"
																						},
																						"nativeSrc": "379:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "379:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "392:1:6",
																						"nodeType": "YulLiteral",
																						"src": "392:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "375:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "375:3:6"
																				},
																				"nativeSrc": "375:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "375:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "363:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "363:3:6"
																		},
																		"nativeSrc": "363:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "363:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "345:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:6"
																},
																"nativeSrc": "345:51:6",
																"nodeType": "YulFunctionCall",
																"src": "345:51:6"
															},
															"nativeSrc": "345:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "345:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "199:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "269:9:6",
														"nodeType": "YulTypedName",
														"src": "269:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "280:6:6",
														"nodeType": "YulTypedName",
														"src": "280:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "291:4:6",
														"nodeType": "YulTypedName",
														"src": "291:4:6",
														"type": ""
													}
												],
												"src": "199:203:6"
											},
											{
												"body": {
													"nativeSrc": "502:92:6",
													"nodeType": "YulBlock",
													"src": "502:92:6",
													"statements": [
														{
															"nativeSrc": "512:26:6",
															"nodeType": "YulAssignment",
															"src": "512:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "524:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "524:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "535:2:6",
																		"nodeType": "YulLiteral",
																		"src": "535:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "520:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "520:3:6"
																},
																"nativeSrc": "520:18:6",
																"nodeType": "YulFunctionCall",
																"src": "520:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "512:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "512:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "554:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "554:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "579:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "579:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "572:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "572:6:6"
																				},
																				"nativeSrc": "572:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "572:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "565:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "565:6:6"
																		},
																		"nativeSrc": "565:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "565:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "547:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "547:6:6"
																},
																"nativeSrc": "547:41:6",
																"nodeType": "YulFunctionCall",
																"src": "547:41:6"
															},
															"nativeSrc": "547:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "547:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "407:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "471:9:6",
														"nodeType": "YulTypedName",
														"src": "471:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "482:6:6",
														"nodeType": "YulTypedName",
														"src": "482:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "493:4:6",
														"nodeType": "YulTypedName",
														"src": "493:4:6",
														"type": ""
													}
												],
												"src": "407:187:6"
											},
											{
												"body": {
													"nativeSrc": "648:124:6",
													"nodeType": "YulBlock",
													"src": "648:124:6",
													"statements": [
														{
															"nativeSrc": "658:29:6",
															"nodeType": "YulAssignment",
															"src": "658:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "680:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "680:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "667:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "667:12:6"
																},
																"nativeSrc": "667:20:6",
																"nodeType": "YulFunctionCall",
																"src": "667:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "658:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "658:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "750:16:6",
																"nodeType": "YulBlock",
																"src": "750:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "759:1:6",
																					"nodeType": "YulLiteral",
																					"src": "759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "762:1:6",
																					"nodeType": "YulLiteral",
																					"src": "762:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "752:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "752:6:6"
																			},
																			"nativeSrc": "752:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "752:12:6"
																		},
																		"nativeSrc": "752:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "752:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "709:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "709:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "720:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "720:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "735:3:6",
																										"nodeType": "YulLiteral",
																										"src": "735:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "740:1:6",
																										"nodeType": "YulLiteral",
																										"src": "740:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "731:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "731:3:6"
																								},
																								"nativeSrc": "731:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "731:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "744:1:6",
																								"nodeType": "YulLiteral",
																								"src": "744:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "727:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "727:3:6"
																						},
																						"nativeSrc": "727:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "727:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "716:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "716:3:6"
																				},
																				"nativeSrc": "716:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "716:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "706:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "706:2:6"
																		},
																		"nativeSrc": "706:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "706:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "699:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "699:6:6"
																},
																"nativeSrc": "699:50:6",
																"nodeType": "YulFunctionCall",
																"src": "699:50:6"
															},
															"nativeSrc": "696:70:6",
															"nodeType": "YulIf",
															"src": "696:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "599:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "627:6:6",
														"nodeType": "YulTypedName",
														"src": "627:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "638:5:6",
														"nodeType": "YulTypedName",
														"src": "638:5:6",
														"type": ""
													}
												],
												"src": "599:173:6"
											},
											{
												"body": {
													"nativeSrc": "864:173:6",
													"nodeType": "YulBlock",
													"src": "864:173:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "910:16:6",
																"nodeType": "YulBlock",
																"src": "910:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "919:1:6",
																					"nodeType": "YulLiteral",
																					"src": "919:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "922:1:6",
																					"nodeType": "YulLiteral",
																					"src": "922:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "912:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "912:6:6"
																			},
																			"nativeSrc": "912:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "912:12:6"
																		},
																		"nativeSrc": "912:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "912:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "885:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "885:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "894:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "894:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "881:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "881:3:6"
																		},
																		"nativeSrc": "881:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "881:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:2:6",
																		"nodeType": "YulLiteral",
																		"src": "906:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "877:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "877:3:6"
																},
																"nativeSrc": "877:32:6",
																"nodeType": "YulFunctionCall",
																"src": "877:32:6"
															},
															"nativeSrc": "874:52:6",
															"nodeType": "YulIf",
															"src": "874:52:6"
														},
														{
															"nativeSrc": "935:39:6",
															"nodeType": "YulAssignment",
															"src": "935:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "964:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "964:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "945:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "945:18:6"
																},
																"nativeSrc": "945:29:6",
																"nodeType": "YulFunctionCall",
																"src": "945:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "935:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "935:6:6"
																}
															]
														},
														{
															"nativeSrc": "983:48:6",
															"nodeType": "YulAssignment",
															"src": "983:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1016:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1016:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1027:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1027:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1012:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1012:3:6"
																		},
																		"nativeSrc": "1012:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1012:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "993:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "993:18:6"
																},
																"nativeSrc": "993:38:6",
																"nodeType": "YulFunctionCall",
																"src": "993:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "983:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "983:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "777:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "822:9:6",
														"nodeType": "YulTypedName",
														"src": "822:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "833:7:6",
														"nodeType": "YulTypedName",
														"src": "833:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "845:6:6",
														"nodeType": "YulTypedName",
														"src": "845:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "853:6:6",
														"nodeType": "YulTypedName",
														"src": "853:6:6",
														"type": ""
													}
												],
												"src": "777:260:6"
											},
											{
												"body": {
													"nativeSrc": "1147:510:6",
													"nodeType": "YulBlock",
													"src": "1147:510:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1193:16:6",
																"nodeType": "YulBlock",
																"src": "1193:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1202:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1202:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1205:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1205:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1195:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1195:6:6"
																			},
																			"nativeSrc": "1195:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1195:12:6"
																		},
																		"nativeSrc": "1195:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1195:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1168:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1168:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1177:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1177:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1164:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1164:3:6"
																		},
																		"nativeSrc": "1164:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1164:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1189:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1189:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1160:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1160:3:6"
																},
																"nativeSrc": "1160:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1160:32:6"
															},
															"nativeSrc": "1157:52:6",
															"nodeType": "YulIf",
															"src": "1157:52:6"
														},
														{
															"nativeSrc": "1218:37:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1218:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1245:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1232:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1232:12:6"
																},
																"nativeSrc": "1232:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1232:23:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1222:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1222:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1264:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1274:18:6",
																"nodeType": "YulLiteral",
																"src": "1274:18:6",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1268:2:6",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1319:16:6",
																"nodeType": "YulBlock",
																"src": "1319:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1328:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1331:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1321:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:6"
																			},
																			"nativeSrc": "1321:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:6"
																		},
																		"nativeSrc": "1321:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1307:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1315:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1304:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:6"
																},
																"nativeSrc": "1304:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1304:14:6"
															},
															"nativeSrc": "1301:34:6",
															"nodeType": "YulIf",
															"src": "1301:34:6"
														},
														{
															"nativeSrc": "1344:32:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1344:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1358:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1358:9:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1369:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1369:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1354:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:6"
																},
																"nativeSrc": "1354:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1354:22:6"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "1348:2:6",
																	"nodeType": "YulTypedName",
																	"src": "1348:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1424:16:6",
																"nodeType": "YulBlock",
																"src": "1424:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1433:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1433:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1436:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1436:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1426:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1426:6:6"
																			},
																			"nativeSrc": "1426:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1426:12:6"
																		},
																		"nativeSrc": "1426:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1426:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1403:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "1403:2:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1407:4:6",
																						"nodeType": "YulLiteral",
																						"src": "1407:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1399:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1399:3:6"
																				},
																				"nativeSrc": "1399:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1399:13:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1414:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1414:7:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1395:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1395:3:6"
																		},
																		"nativeSrc": "1395:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1395:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1388:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1388:6:6"
																},
																"nativeSrc": "1388:35:6",
																"nodeType": "YulFunctionCall",
																"src": "1388:35:6"
															},
															"nativeSrc": "1385:55:6",
															"nodeType": "YulIf",
															"src": "1385:55:6"
														},
														{
															"nativeSrc": "1449:30:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1449:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "1476:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1476:2:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1463:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1463:12:6"
																},
																"nativeSrc": "1463:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1463:16:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1453:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1453:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1506:16:6",
																"nodeType": "YulBlock",
																"src": "1506:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1515:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1515:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1518:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1518:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1508:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1508:6:6"
																			},
																			"nativeSrc": "1508:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1508:12:6"
																		},
																		"nativeSrc": "1508:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1508:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1494:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1494:6:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1502:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1502:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1491:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1491:2:6"
																},
																"nativeSrc": "1491:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1491:14:6"
															},
															"nativeSrc": "1488:34:6",
															"nodeType": "YulIf",
															"src": "1488:34:6"
														},
														{
															"body": {
																"nativeSrc": "1580:16:6",
																"nodeType": "YulBlock",
																"src": "1580:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1589:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1592:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1592:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1582:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1582:6:6"
																			},
																			"nativeSrc": "1582:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1582:12:6"
																		},
																		"nativeSrc": "1582:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1582:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1545:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "1545:2:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1553:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1553:1:6",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "1556:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "1556:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1549:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1549:3:6"
																						},
																						"nativeSrc": "1549:14:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1549:14:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:6"
																				},
																				"nativeSrc": "1541:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:23:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1566:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1566:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1537:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1537:3:6"
																		},
																		"nativeSrc": "1537:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1537:32:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1571:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1571:7:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1534:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1534:2:6"
																},
																"nativeSrc": "1534:45:6",
																"nodeType": "YulFunctionCall",
																"src": "1534:45:6"
															},
															"nativeSrc": "1531:65:6",
															"nodeType": "YulIf",
															"src": "1531:65:6"
														},
														{
															"nativeSrc": "1605:21:6",
															"nodeType": "YulAssignment",
															"src": "1605:21:6",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "1619:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1619:2:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1623:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1623:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1615:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1615:3:6"
																},
																"nativeSrc": "1615:11:6",
																"nodeType": "YulFunctionCall",
																"src": "1615:11:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1605:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1605:6:6"
																}
															]
														},
														{
															"nativeSrc": "1635:16:6",
															"nodeType": "YulAssignment",
															"src": "1635:16:6",
															"value": {
																"name": "length",
																"nativeSrc": "1645:6:6",
																"nodeType": "YulIdentifier",
																"src": "1645:6:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1635:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1635:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "1042:615:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1105:9:6",
														"nodeType": "YulTypedName",
														"src": "1105:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1116:7:6",
														"nodeType": "YulTypedName",
														"src": "1116:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1128:6:6",
														"nodeType": "YulTypedName",
														"src": "1128:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1136:6:6",
														"nodeType": "YulTypedName",
														"src": "1136:6:6",
														"type": ""
													}
												],
												"src": "1042:615:6"
											},
											{
												"body": {
													"nativeSrc": "1763:76:6",
													"nodeType": "YulBlock",
													"src": "1763:76:6",
													"statements": [
														{
															"nativeSrc": "1773:26:6",
															"nodeType": "YulAssignment",
															"src": "1773:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1785:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1785:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1796:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1796:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1781:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1781:3:6"
																},
																"nativeSrc": "1781:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1781:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1773:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1773:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1815:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1815:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1826:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1826:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1808:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:6"
																},
																"nativeSrc": "1808:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1808:25:6"
															},
															"nativeSrc": "1808:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "1808:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1662:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1732:9:6",
														"nodeType": "YulTypedName",
														"src": "1732:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1743:6:6",
														"nodeType": "YulTypedName",
														"src": "1743:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1754:4:6",
														"nodeType": "YulTypedName",
														"src": "1754:4:6",
														"type": ""
													}
												],
												"src": "1662:177:6"
											},
											{
												"body": {
													"nativeSrc": "1931:167:6",
													"nodeType": "YulBlock",
													"src": "1931:167:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1977:16:6",
																"nodeType": "YulBlock",
																"src": "1977:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1986:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1986:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1989:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1989:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1979:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1979:6:6"
																			},
																			"nativeSrc": "1979:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1979:12:6"
																		},
																		"nativeSrc": "1979:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1979:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1952:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1952:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1961:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1961:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1948:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1948:3:6"
																		},
																		"nativeSrc": "1948:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1948:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1973:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1973:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1944:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1944:3:6"
																},
																"nativeSrc": "1944:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1944:32:6"
															},
															"nativeSrc": "1941:52:6",
															"nodeType": "YulIf",
															"src": "1941:52:6"
														},
														{
															"nativeSrc": "2002:39:6",
															"nodeType": "YulAssignment",
															"src": "2002:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2031:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2031:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2012:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2012:18:6"
																},
																"nativeSrc": "2012:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2012:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2002:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2002:6:6"
																}
															]
														},
														{
															"nativeSrc": "2050:42:6",
															"nodeType": "YulAssignment",
															"src": "2050:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2077:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2077:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2088:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2088:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2073:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2073:3:6"
																		},
																		"nativeSrc": "2073:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2073:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2060:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2060:12:6"
																},
																"nativeSrc": "2060:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2060:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2050:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2050:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1844:254:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1889:9:6",
														"nodeType": "YulTypedName",
														"src": "1889:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1900:7:6",
														"nodeType": "YulTypedName",
														"src": "1900:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1912:6:6",
														"nodeType": "YulTypedName",
														"src": "1912:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1920:6:6",
														"nodeType": "YulTypedName",
														"src": "1920:6:6",
														"type": ""
													}
												],
												"src": "1844:254:6"
											},
											{
												"body": {
													"nativeSrc": "2233:102:6",
													"nodeType": "YulBlock",
													"src": "2233:102:6",
													"statements": [
														{
															"nativeSrc": "2243:26:6",
															"nodeType": "YulAssignment",
															"src": "2243:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2255:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2255:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2266:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2266:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2251:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2251:3:6"
																},
																"nativeSrc": "2251:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2251:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2243:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2243:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2285:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2285:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2300:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2300:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2316:3:6",
																								"nodeType": "YulLiteral",
																								"src": "2316:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2321:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2321:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2312:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2312:3:6"
																						},
																						"nativeSrc": "2312:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2312:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2325:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2325:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2308:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2308:3:6"
																				},
																				"nativeSrc": "2308:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2308:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2296:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2296:3:6"
																		},
																		"nativeSrc": "2296:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2296:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2278:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2278:6:6"
																},
																"nativeSrc": "2278:51:6",
																"nodeType": "YulFunctionCall",
																"src": "2278:51:6"
															},
															"nativeSrc": "2278:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "2278:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IFairLaunchFactoryV1_$1073__to_t_address__fromStack_reversed",
												"nativeSrc": "2103:232:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2202:9:6",
														"nodeType": "YulTypedName",
														"src": "2202:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2213:6:6",
														"nodeType": "YulTypedName",
														"src": "2213:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2224:4:6",
														"nodeType": "YulTypedName",
														"src": "2224:4:6",
														"type": ""
													}
												],
												"src": "2103:232:6"
											},
											{
												"body": {
													"nativeSrc": "2410:116:6",
													"nodeType": "YulBlock",
													"src": "2410:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2456:16:6",
																"nodeType": "YulBlock",
																"src": "2456:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2465:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2465:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2468:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2468:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2458:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2458:6:6"
																			},
																			"nativeSrc": "2458:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2458:12:6"
																		},
																		"nativeSrc": "2458:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2458:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2431:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2431:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2440:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2440:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2427:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2427:3:6"
																		},
																		"nativeSrc": "2427:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2427:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2452:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2452:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2423:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2423:3:6"
																},
																"nativeSrc": "2423:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2423:32:6"
															},
															"nativeSrc": "2420:52:6",
															"nodeType": "YulIf",
															"src": "2420:52:6"
														},
														{
															"nativeSrc": "2481:39:6",
															"nodeType": "YulAssignment",
															"src": "2481:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2510:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2510:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2491:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2491:18:6"
																},
																"nativeSrc": "2491:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2491:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2481:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2481:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2340:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2376:9:6",
														"nodeType": "YulTypedName",
														"src": "2376:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2387:7:6",
														"nodeType": "YulTypedName",
														"src": "2387:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2399:6:6",
														"nodeType": "YulTypedName",
														"src": "2399:6:6",
														"type": ""
													}
												],
												"src": "2340:186:6"
											},
											{
												"body": {
													"nativeSrc": "2738:266:6",
													"nodeType": "YulBlock",
													"src": "2738:266:6",
													"statements": [
														{
															"nativeSrc": "2748:27:6",
															"nodeType": "YulAssignment",
															"src": "2748:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2760:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2760:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2771:3:6",
																		"nodeType": "YulLiteral",
																		"src": "2771:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2756:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2756:3:6"
																},
																"nativeSrc": "2756:19:6",
																"nodeType": "YulFunctionCall",
																"src": "2756:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2748:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2748:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2791:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2791:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2802:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2802:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2784:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2784:6:6"
																},
																"nativeSrc": "2784:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2784:25:6"
															},
															"nativeSrc": "2784:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "2784:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2829:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2829:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2840:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2840:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2825:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2825:3:6"
																		},
																		"nativeSrc": "2825:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2825:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2845:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2845:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2818:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2818:6:6"
																},
																"nativeSrc": "2818:34:6",
																"nodeType": "YulFunctionCall",
																"src": "2818:34:6"
															},
															"nativeSrc": "2818:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "2818:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2872:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2872:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2883:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2883:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2868:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2868:3:6"
																		},
																		"nativeSrc": "2868:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2868:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "2888:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2888:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2861:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2861:6:6"
																},
																"nativeSrc": "2861:34:6",
																"nodeType": "YulFunctionCall",
																"src": "2861:34:6"
															},
															"nativeSrc": "2861:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "2861:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2915:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2915:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2926:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2926:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2911:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2911:3:6"
																		},
																		"nativeSrc": "2911:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2911:18:6"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "2931:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2931:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2904:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2904:6:6"
																},
																"nativeSrc": "2904:34:6",
																"nodeType": "YulFunctionCall",
																"src": "2904:34:6"
															},
															"nativeSrc": "2904:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "2904:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2958:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2958:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2969:3:6",
																				"nodeType": "YulLiteral",
																				"src": "2969:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2954:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2954:3:6"
																		},
																		"nativeSrc": "2954:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2954:19:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nativeSrc": "2989:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2989:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2982:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2982:6:6"
																				},
																				"nativeSrc": "2982:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2982:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2975:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2975:6:6"
																		},
																		"nativeSrc": "2975:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2975:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2947:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2947:6:6"
																},
																"nativeSrc": "2947:51:6",
																"nodeType": "YulFunctionCall",
																"src": "2947:51:6"
															},
															"nativeSrc": "2947:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "2947:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "2531:473:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2675:9:6",
														"nodeType": "YulTypedName",
														"src": "2675:9:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2686:6:6",
														"nodeType": "YulTypedName",
														"src": "2686:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2694:6:6",
														"nodeType": "YulTypedName",
														"src": "2694:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2702:6:6",
														"nodeType": "YulTypedName",
														"src": "2702:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2710:6:6",
														"nodeType": "YulTypedName",
														"src": "2710:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2718:6:6",
														"nodeType": "YulTypedName",
														"src": "2718:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2729:4:6",
														"nodeType": "YulTypedName",
														"src": "2729:4:6",
														"type": ""
													}
												],
												"src": "2531:473:6"
											},
											{
												"body": {
													"nativeSrc": "3183:234:6",
													"nodeType": "YulBlock",
													"src": "3183:234:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3200:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3200:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3211:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3211:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3193:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3193:6:6"
																},
																"nativeSrc": "3193:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3193:21:6"
															},
															"nativeSrc": "3193:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3193:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3234:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3234:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3245:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3245:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3230:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3230:3:6"
																		},
																		"nativeSrc": "3230:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3230:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3250:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3250:2:6",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3223:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3223:6:6"
																},
																"nativeSrc": "3223:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3223:30:6"
															},
															"nativeSrc": "3223:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3223:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3273:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3273:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3284:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3284:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3269:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:6"
																		},
																		"nativeSrc": "3269:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3269:18:6"
																	},
																	{
																		"hexValue": "4f6e6c79206d756c746953696720616464726573732063616e2063616c6c2074",
																		"kind": "string",
																		"nativeSrc": "3289:34:6",
																		"nodeType": "YulLiteral",
																		"src": "3289:34:6",
																		"type": "",
																		"value": "Only multiSig address can call t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3262:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3262:6:6"
																},
																"nativeSrc": "3262:62:6",
																"nodeType": "YulFunctionCall",
																"src": "3262:62:6"
															},
															"nativeSrc": "3262:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "3262:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3344:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3344:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3355:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3355:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3340:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3340:3:6"
																		},
																		"nativeSrc": "3340:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3340:18:6"
																	},
																	{
																		"hexValue": "6869732066756e6374696f6e",
																		"kind": "string",
																		"nativeSrc": "3360:14:6",
																		"nodeType": "YulLiteral",
																		"src": "3360:14:6",
																		"type": "",
																		"value": "his function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3333:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3333:6:6"
																},
																"nativeSrc": "3333:42:6",
																"nodeType": "YulFunctionCall",
																"src": "3333:42:6"
															},
															"nativeSrc": "3333:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "3333:42:6"
														},
														{
															"nativeSrc": "3384:27:6",
															"nodeType": "YulAssignment",
															"src": "3384:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3396:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3396:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3407:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3407:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3392:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3392:3:6"
																},
																"nativeSrc": "3392:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3392:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3384:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3384:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a89e8792d12ab2935107c47df3d6e37408b35c7947605d9909710024cead9a50__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3009:408:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3160:9:6",
														"nodeType": "YulTypedName",
														"src": "3160:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3174:4:6",
														"nodeType": "YulTypedName",
														"src": "3174:4:6",
														"type": ""
													}
												],
												"src": "3009:408:6"
											},
											{
												"body": {
													"nativeSrc": "3596:182:6",
													"nodeType": "YulBlock",
													"src": "3596:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3613:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3613:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3624:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3624:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3606:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:6"
																},
																"nativeSrc": "3606:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3606:21:6"
															},
															"nativeSrc": "3606:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3606:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3647:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3647:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3658:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3658:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3643:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3643:3:6"
																		},
																		"nativeSrc": "3643:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3643:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3663:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3663:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3636:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3636:6:6"
																},
																"nativeSrc": "3636:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3636:30:6"
															},
															"nativeSrc": "3636:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3636:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3686:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3686:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3697:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3697:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3682:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3682:3:6"
																		},
																		"nativeSrc": "3682:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3682:18:6"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "3702:34:6",
																		"nodeType": "YulLiteral",
																		"src": "3702:34:6",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3675:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:6"
																},
																"nativeSrc": "3675:62:6",
																"nodeType": "YulFunctionCall",
																"src": "3675:62:6"
															},
															"nativeSrc": "3675:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "3675:62:6"
														},
														{
															"nativeSrc": "3746:26:6",
															"nodeType": "YulAssignment",
															"src": "3746:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3758:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3758:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3769:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3769:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3754:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3754:3:6"
																},
																"nativeSrc": "3754:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3754:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3746:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3746:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3422:356:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3573:9:6",
														"nodeType": "YulTypedName",
														"src": "3573:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3587:4:6",
														"nodeType": "YulTypedName",
														"src": "3587:4:6",
														"type": ""
													}
												],
												"src": "3422:356:6"
											},
											{
												"body": {
													"nativeSrc": "3940:218:6",
													"nodeType": "YulBlock",
													"src": "3940:218:6",
													"statements": [
														{
															"nativeSrc": "3950:26:6",
															"nodeType": "YulAssignment",
															"src": "3950:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3962:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3962:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3973:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3973:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3958:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3958:3:6"
																},
																"nativeSrc": "3958:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3958:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3950:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3950:4:6"
																}
															]
														},
														{
															"nativeSrc": "3985:29:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3985:29:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4003:3:6",
																				"nodeType": "YulLiteral",
																				"src": "4003:3:6",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4008:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4008:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3999:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:6"
																		},
																		"nativeSrc": "3999:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4012:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4012:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3995:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3995:3:6"
																},
																"nativeSrc": "3995:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3995:19:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3989:2:6",
																	"nodeType": "YulTypedName",
																	"src": "3989:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4030:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4030:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4045:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4045:6:6"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4053:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "4053:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4041:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4041:3:6"
																		},
																		"nativeSrc": "4041:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4041:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4023:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4023:6:6"
																},
																"nativeSrc": "4023:34:6",
																"nodeType": "YulFunctionCall",
																"src": "4023:34:6"
															},
															"nativeSrc": "4023:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "4023:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4077:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4077:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4088:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4088:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4073:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4073:3:6"
																		},
																		"nativeSrc": "4073:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4073:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "4097:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4097:6:6"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4105:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "4105:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4093:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4093:3:6"
																		},
																		"nativeSrc": "4093:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4066:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4066:6:6"
																},
																"nativeSrc": "4066:43:6",
																"nodeType": "YulFunctionCall",
																"src": "4066:43:6"
															},
															"nativeSrc": "4066:43:6",
															"nodeType": "YulExpressionStatement",
															"src": "4066:43:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4129:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4129:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4140:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4140:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4125:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4125:3:6"
																		},
																		"nativeSrc": "4125:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4125:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4145:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4145:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4118:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4118:6:6"
																},
																"nativeSrc": "4118:34:6",
																"nodeType": "YulFunctionCall",
																"src": "4118:34:6"
															},
															"nativeSrc": "4118:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "4118:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3783:375:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3893:9:6",
														"nodeType": "YulTypedName",
														"src": "3893:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3904:6:6",
														"nodeType": "YulTypedName",
														"src": "3904:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3912:6:6",
														"nodeType": "YulTypedName",
														"src": "3912:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3920:6:6",
														"nodeType": "YulTypedName",
														"src": "3920:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3931:4:6",
														"nodeType": "YulTypedName",
														"src": "3931:4:6",
														"type": ""
													}
												],
												"src": "3783:375:6"
											},
											{
												"body": {
													"nativeSrc": "4241:199:6",
													"nodeType": "YulBlock",
													"src": "4241:199:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4287:16:6",
																"nodeType": "YulBlock",
																"src": "4287:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4296:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4296:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4299:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4299:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4289:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4289:6:6"
																			},
																			"nativeSrc": "4289:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4289:12:6"
																		},
																		"nativeSrc": "4289:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4289:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4262:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4262:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4271:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4271:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4258:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4258:3:6"
																		},
																		"nativeSrc": "4258:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4258:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4283:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4283:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4254:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4254:3:6"
																},
																"nativeSrc": "4254:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4254:32:6"
															},
															"nativeSrc": "4251:52:6",
															"nodeType": "YulIf",
															"src": "4251:52:6"
														},
														{
															"nativeSrc": "4312:29:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4312:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4331:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4331:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4325:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4325:5:6"
																},
																"nativeSrc": "4325:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4325:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4316:5:6",
																	"nodeType": "YulTypedName",
																	"src": "4316:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4394:16:6",
																"nodeType": "YulBlock",
																"src": "4394:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4403:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4403:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4406:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4406:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4396:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4396:6:6"
																			},
																			"nativeSrc": "4396:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4396:12:6"
																		},
																		"nativeSrc": "4396:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4396:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4363:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4363:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "4384:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "4384:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "4377:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "4377:6:6"
																						},
																						"nativeSrc": "4377:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4377:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4370:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4370:6:6"
																				},
																				"nativeSrc": "4370:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4370:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4360:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4360:2:6"
																		},
																		"nativeSrc": "4360:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4360:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4353:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4353:6:6"
																},
																"nativeSrc": "4353:40:6",
																"nodeType": "YulFunctionCall",
																"src": "4353:40:6"
															},
															"nativeSrc": "4350:60:6",
															"nodeType": "YulIf",
															"src": "4350:60:6"
														},
														{
															"nativeSrc": "4419:15:6",
															"nodeType": "YulAssignment",
															"src": "4419:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "4429:5:6",
																"nodeType": "YulIdentifier",
																"src": "4429:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4419:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4419:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "4163:277:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4207:9:6",
														"nodeType": "YulTypedName",
														"src": "4207:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4218:7:6",
														"nodeType": "YulTypedName",
														"src": "4218:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4230:6:6",
														"nodeType": "YulTypedName",
														"src": "4230:6:6",
														"type": ""
													}
												],
												"src": "4163:277:6"
											},
											{
												"body": {
													"nativeSrc": "4619:165:6",
													"nodeType": "YulBlock",
													"src": "4619:165:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4636:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4636:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4647:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4647:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4629:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4629:6:6"
																},
																"nativeSrc": "4629:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4629:21:6"
															},
															"nativeSrc": "4629:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4629:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4670:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4670:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4681:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4681:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4666:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4666:3:6"
																		},
																		"nativeSrc": "4666:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4666:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4686:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4686:2:6",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4659:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4659:6:6"
																},
																"nativeSrc": "4659:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4659:30:6"
															},
															"nativeSrc": "4659:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4659:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4709:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4709:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4720:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4720:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4705:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4705:3:6"
																		},
																		"nativeSrc": "4705:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4705:18:6"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "4725:17:6",
																		"nodeType": "YulLiteral",
																		"src": "4725:17:6",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4698:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4698:6:6"
																},
																"nativeSrc": "4698:45:6",
																"nodeType": "YulFunctionCall",
																"src": "4698:45:6"
															},
															"nativeSrc": "4698:45:6",
															"nodeType": "YulExpressionStatement",
															"src": "4698:45:6"
														},
														{
															"nativeSrc": "4752:26:6",
															"nodeType": "YulAssignment",
															"src": "4752:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4764:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4764:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4775:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4775:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4760:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4760:3:6"
																},
																"nativeSrc": "4760:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4760:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4752:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4752:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4445:339:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4596:9:6",
														"nodeType": "YulTypedName",
														"src": "4596:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4610:4:6",
														"nodeType": "YulTypedName",
														"src": "4610:4:6",
														"type": ""
													}
												],
												"src": "4445:339:6"
											},
											{
												"body": {
													"nativeSrc": "4821:95:6",
													"nodeType": "YulBlock",
													"src": "4821:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4838:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4838:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4845:3:6",
																				"nodeType": "YulLiteral",
																				"src": "4845:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4850:10:6",
																				"nodeType": "YulLiteral",
																				"src": "4850:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4841:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4841:3:6"
																		},
																		"nativeSrc": "4841:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4841:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4831:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4831:6:6"
																},
																"nativeSrc": "4831:31:6",
																"nodeType": "YulFunctionCall",
																"src": "4831:31:6"
															},
															"nativeSrc": "4831:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "4831:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4878:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4878:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4881:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4881:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4871:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4871:6:6"
																},
																"nativeSrc": "4871:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4871:15:6"
															},
															"nativeSrc": "4871:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4871:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4902:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4902:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4905:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4905:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4895:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4895:6:6"
																},
																"nativeSrc": "4895:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4895:15:6"
															},
															"nativeSrc": "4895:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4895:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4789:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4789:127:6"
											},
											{
												"body": {
													"nativeSrc": "4969:77:6",
													"nodeType": "YulBlock",
													"src": "4969:77:6",
													"statements": [
														{
															"nativeSrc": "4979:16:6",
															"nodeType": "YulAssignment",
															"src": "4979:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4990:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4990:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4993:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4993:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4986:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4986:3:6"
																},
																"nativeSrc": "4986:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4986:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4979:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4979:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5018:22:6",
																"nodeType": "YulBlock",
																"src": "5018:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5020:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5020:16:6"
																			},
																			"nativeSrc": "5020:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5020:18:6"
																		},
																		"nativeSrc": "5020:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5020:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5010:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5010:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5013:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5013:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5007:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5007:2:6"
																},
																"nativeSrc": "5007:10:6",
																"nodeType": "YulFunctionCall",
																"src": "5007:10:6"
															},
															"nativeSrc": "5004:36:6",
															"nodeType": "YulIf",
															"src": "5004:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4921:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4952:1:6",
														"nodeType": "YulTypedName",
														"src": "4952:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4955:1:6",
														"nodeType": "YulTypedName",
														"src": "4955:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4961:3:6",
														"nodeType": "YulTypedName",
														"src": "4961:3:6",
														"type": ""
													}
												],
												"src": "4921:125:6"
											},
											{
												"body": {
													"nativeSrc": "5180:119:6",
													"nodeType": "YulBlock",
													"src": "5180:119:6",
													"statements": [
														{
															"nativeSrc": "5190:26:6",
															"nodeType": "YulAssignment",
															"src": "5190:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5202:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5202:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5213:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5213:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5198:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5198:3:6"
																},
																"nativeSrc": "5198:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5198:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5190:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5190:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5232:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5232:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5243:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5243:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5225:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5225:6:6"
																},
																"nativeSrc": "5225:25:6",
																"nodeType": "YulFunctionCall",
																"src": "5225:25:6"
															},
															"nativeSrc": "5225:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "5225:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5270:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5270:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5281:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5281:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5266:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5266:3:6"
																		},
																		"nativeSrc": "5266:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5266:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5286:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5286:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5259:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5259:6:6"
																},
																"nativeSrc": "5259:34:6",
																"nodeType": "YulFunctionCall",
																"src": "5259:34:6"
															},
															"nativeSrc": "5259:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "5259:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5051:248:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5141:9:6",
														"nodeType": "YulTypedName",
														"src": "5141:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5152:6:6",
														"nodeType": "YulTypedName",
														"src": "5152:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5160:6:6",
														"nodeType": "YulTypedName",
														"src": "5160:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5171:4:6",
														"nodeType": "YulTypedName",
														"src": "5171:4:6",
														"type": ""
													}
												],
												"src": "5051:248:6"
											},
											{
												"body": {
													"nativeSrc": "5336:95:6",
													"nodeType": "YulBlock",
													"src": "5336:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5353:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5353:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5360:3:6",
																				"nodeType": "YulLiteral",
																				"src": "5360:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5365:10:6",
																				"nodeType": "YulLiteral",
																				"src": "5365:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5356:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5356:3:6"
																		},
																		"nativeSrc": "5356:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5356:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5346:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5346:6:6"
																},
																"nativeSrc": "5346:31:6",
																"nodeType": "YulFunctionCall",
																"src": "5346:31:6"
															},
															"nativeSrc": "5346:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "5346:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5393:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5393:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5396:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5396:4:6",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5386:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5386:6:6"
																},
																"nativeSrc": "5386:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5386:15:6"
															},
															"nativeSrc": "5386:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5386:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5417:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5417:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5420:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5420:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5410:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5410:6:6"
																},
																"nativeSrc": "5410:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5410:15:6"
															},
															"nativeSrc": "5410:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5410:15:6"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "5304:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5304:127:6"
											},
											{
												"body": {
													"nativeSrc": "5565:145:6",
													"nodeType": "YulBlock",
													"src": "5565:145:6",
													"statements": [
														{
															"nativeSrc": "5575:26:6",
															"nodeType": "YulAssignment",
															"src": "5575:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5587:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5587:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5598:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5598:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5583:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5583:3:6"
																},
																"nativeSrc": "5583:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5583:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5575:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5575:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5617:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5617:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5632:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5632:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5648:3:6",
																								"nodeType": "YulLiteral",
																								"src": "5648:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5653:1:6",
																								"nodeType": "YulLiteral",
																								"src": "5653:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5644:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "5644:3:6"
																						},
																						"nativeSrc": "5644:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "5644:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5657:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5657:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5640:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5640:3:6"
																				},
																				"nativeSrc": "5640:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5640:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5628:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5628:3:6"
																		},
																		"nativeSrc": "5628:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5628:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5610:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5610:6:6"
																},
																"nativeSrc": "5610:51:6",
																"nodeType": "YulFunctionCall",
																"src": "5610:51:6"
															},
															"nativeSrc": "5610:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "5610:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5681:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5681:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5692:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5692:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5677:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5677:3:6"
																		},
																		"nativeSrc": "5677:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5677:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5697:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5697:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5670:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5670:6:6"
																},
																"nativeSrc": "5670:34:6",
																"nodeType": "YulFunctionCall",
																"src": "5670:34:6"
															},
															"nativeSrc": "5670:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "5670:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5436:274:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5526:9:6",
														"nodeType": "YulTypedName",
														"src": "5526:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5537:6:6",
														"nodeType": "YulTypedName",
														"src": "5537:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5545:6:6",
														"nodeType": "YulTypedName",
														"src": "5545:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5556:4:6",
														"nodeType": "YulTypedName",
														"src": "5556:4:6",
														"type": ""
													}
												],
												"src": "5436:274:6"
											},
											{
												"body": {
													"nativeSrc": "5796:103:6",
													"nodeType": "YulBlock",
													"src": "5796:103:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5842:16:6",
																"nodeType": "YulBlock",
																"src": "5842:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5851:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5851:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5854:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5854:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5844:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5844:6:6"
																			},
																			"nativeSrc": "5844:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5844:12:6"
																		},
																		"nativeSrc": "5844:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5844:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5817:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5817:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5826:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5826:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5813:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5813:3:6"
																		},
																		"nativeSrc": "5813:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5813:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5838:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5838:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5809:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5809:3:6"
																},
																"nativeSrc": "5809:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5809:32:6"
															},
															"nativeSrc": "5806:52:6",
															"nodeType": "YulIf",
															"src": "5806:52:6"
														},
														{
															"nativeSrc": "5867:26:6",
															"nodeType": "YulAssignment",
															"src": "5867:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5883:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5883:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5877:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5877:5:6"
																},
																"nativeSrc": "5877:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5877:16:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5867:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5867:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "5715:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5762:9:6",
														"nodeType": "YulTypedName",
														"src": "5762:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5773:7:6",
														"nodeType": "YulTypedName",
														"src": "5773:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5785:6:6",
														"nodeType": "YulTypedName",
														"src": "5785:6:6",
														"type": ""
													}
												],
												"src": "5715:184:6"
											},
											{
												"body": {
													"nativeSrc": "6078:164:6",
													"nodeType": "YulBlock",
													"src": "6078:164:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6095:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6095:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6106:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6106:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6088:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6088:6:6"
																},
																"nativeSrc": "6088:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6088:21:6"
															},
															"nativeSrc": "6088:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6088:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6129:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6129:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6140:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6140:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6125:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6125:3:6"
																		},
																		"nativeSrc": "6125:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6125:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6145:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6145:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6118:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6118:6:6"
																},
																"nativeSrc": "6118:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6118:30:6"
															},
															"nativeSrc": "6118:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6118:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6168:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6168:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6179:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6179:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6164:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6164:3:6"
																		},
																		"nativeSrc": "6164:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6164:18:6"
																	},
																	{
																		"hexValue": "4e6f207374616b6520666f756e64",
																		"kind": "string",
																		"nativeSrc": "6184:16:6",
																		"nodeType": "YulLiteral",
																		"src": "6184:16:6",
																		"type": "",
																		"value": "No stake found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6157:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6157:6:6"
																},
																"nativeSrc": "6157:44:6",
																"nodeType": "YulFunctionCall",
																"src": "6157:44:6"
															},
															"nativeSrc": "6157:44:6",
															"nodeType": "YulExpressionStatement",
															"src": "6157:44:6"
														},
														{
															"nativeSrc": "6210:26:6",
															"nodeType": "YulAssignment",
															"src": "6210:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6222:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6222:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6233:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6233:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6218:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6218:3:6"
																},
																"nativeSrc": "6218:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6218:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6210:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6210:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5904:338:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6055:9:6",
														"nodeType": "YulTypedName",
														"src": "6055:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6069:4:6",
														"nodeType": "YulTypedName",
														"src": "6069:4:6",
														"type": ""
													}
												],
												"src": "5904:338:6"
											},
											{
												"body": {
													"nativeSrc": "6421:173:6",
													"nodeType": "YulBlock",
													"src": "6421:173:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6438:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6438:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6449:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6449:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6431:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6431:6:6"
																},
																"nativeSrc": "6431:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6431:21:6"
															},
															"nativeSrc": "6431:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6431:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6472:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6472:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6483:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6483:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6468:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6468:3:6"
																		},
																		"nativeSrc": "6468:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6468:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6488:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6488:2:6",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6461:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6461:6:6"
																},
																"nativeSrc": "6461:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6461:30:6"
															},
															"nativeSrc": "6461:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6461:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6511:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6511:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6522:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6522:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6507:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6507:3:6"
																		},
																		"nativeSrc": "6507:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6507:18:6"
																	},
																	{
																		"hexValue": "5374616b6520616c72656164792077697468647261776e",
																		"kind": "string",
																		"nativeSrc": "6527:25:6",
																		"nodeType": "YulLiteral",
																		"src": "6527:25:6",
																		"type": "",
																		"value": "Stake already withdrawn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6500:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6500:6:6"
																},
																"nativeSrc": "6500:53:6",
																"nodeType": "YulFunctionCall",
																"src": "6500:53:6"
															},
															"nativeSrc": "6500:53:6",
															"nodeType": "YulExpressionStatement",
															"src": "6500:53:6"
														},
														{
															"nativeSrc": "6562:26:6",
															"nodeType": "YulAssignment",
															"src": "6562:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6574:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6574:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6585:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6570:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6570:3:6"
																},
																"nativeSrc": "6570:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6570:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6562:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6562:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_644e8db99e7c305cbaf9ab7cf4dfbbf8e9d24808e86a7c505456e21dd10275ce__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6247:347:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6398:9:6",
														"nodeType": "YulTypedName",
														"src": "6398:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6412:4:6",
														"nodeType": "YulTypedName",
														"src": "6412:4:6",
														"type": ""
													}
												],
												"src": "6247:347:6"
											},
											{
												"body": {
													"nativeSrc": "6648:79:6",
													"nodeType": "YulBlock",
													"src": "6648:79:6",
													"statements": [
														{
															"nativeSrc": "6658:17:6",
															"nodeType": "YulAssignment",
															"src": "6658:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6670:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6670:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6673:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6673:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6666:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6666:3:6"
																},
																"nativeSrc": "6666:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6666:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6658:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6658:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6699:22:6",
																"nodeType": "YulBlock",
																"src": "6699:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6701:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6701:16:6"
																			},
																			"nativeSrc": "6701:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6701:18:6"
																		},
																		"nativeSrc": "6701:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6701:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6690:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6690:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6696:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6696:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6687:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6687:2:6"
																},
																"nativeSrc": "6687:11:6",
																"nodeType": "YulFunctionCall",
																"src": "6687:11:6"
															},
															"nativeSrc": "6684:37:6",
															"nodeType": "YulIf",
															"src": "6684:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6599:128:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6630:1:6",
														"nodeType": "YulTypedName",
														"src": "6630:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6633:1:6",
														"nodeType": "YulTypedName",
														"src": "6633:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6639:4:6",
														"nodeType": "YulTypedName",
														"src": "6639:4:6",
														"type": ""
													}
												],
												"src": "6599:128:6"
											},
											{
												"body": {
													"nativeSrc": "6778:171:6",
													"nodeType": "YulBlock",
													"src": "6778:171:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6809:111:6",
																"nodeType": "YulBlock",
																"src": "6809:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6830:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6830:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6837:3:6",
																							"nodeType": "YulLiteral",
																							"src": "6837:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6842:10:6",
																							"nodeType": "YulLiteral",
																							"src": "6842:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6833:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6833:3:6"
																					},
																					"nativeSrc": "6833:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6833:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6823:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6823:6:6"
																			},
																			"nativeSrc": "6823:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6823:31:6"
																		},
																		"nativeSrc": "6823:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6823:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6874:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6874:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6877:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6877:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6867:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6867:6:6"
																			},
																			"nativeSrc": "6867:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6867:15:6"
																		},
																		"nativeSrc": "6867:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6867:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6902:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6902:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6905:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6905:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6895:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6895:6:6"
																			},
																			"nativeSrc": "6895:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6895:15:6"
																		},
																		"nativeSrc": "6895:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6895:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6798:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6798:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6791:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6791:6:6"
																},
																"nativeSrc": "6791:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6791:9:6"
															},
															"nativeSrc": "6788:132:6",
															"nodeType": "YulIf",
															"src": "6788:132:6"
														},
														{
															"nativeSrc": "6929:14:6",
															"nodeType": "YulAssignment",
															"src": "6929:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6938:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6938:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6941:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6941:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6934:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6934:3:6"
																},
																"nativeSrc": "6934:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6934:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6929:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6929:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6732:217:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6763:1:6",
														"nodeType": "YulTypedName",
														"src": "6763:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6766:1:6",
														"nodeType": "YulTypedName",
														"src": "6766:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6772:1:6",
														"nodeType": "YulTypedName",
														"src": "6772:1:6",
														"type": ""
													}
												],
												"src": "6732:217:6"
											},
											{
												"body": {
													"nativeSrc": "7006:116:6",
													"nodeType": "YulBlock",
													"src": "7006:116:6",
													"statements": [
														{
															"nativeSrc": "7016:20:6",
															"nodeType": "YulAssignment",
															"src": "7016:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7031:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7031:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7034:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7034:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7027:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7027:3:6"
																},
																"nativeSrc": "7027:9:6",
																"nodeType": "YulFunctionCall",
																"src": "7027:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7016:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "7016:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7094:22:6",
																"nodeType": "YulBlock",
																"src": "7094:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7096:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7096:16:6"
																			},
																			"nativeSrc": "7096:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7096:18:6"
																		},
																		"nativeSrc": "7096:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7096:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7065:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7065:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7058:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "7058:6:6"
																				},
																				"nativeSrc": "7058:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7058:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7072:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7072:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7079:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "7079:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7088:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "7088:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7075:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "7075:3:6"
																						},
																						"nativeSrc": "7075:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "7075:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7069:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "7069:2:6"
																				},
																				"nativeSrc": "7069:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7069:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7055:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7055:2:6"
																		},
																		"nativeSrc": "7055:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7055:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7048:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7048:6:6"
																},
																"nativeSrc": "7048:45:6",
																"nodeType": "YulFunctionCall",
																"src": "7048:45:6"
															},
															"nativeSrc": "7045:71:6",
															"nodeType": "YulIf",
															"src": "7045:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6954:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6985:1:6",
														"nodeType": "YulTypedName",
														"src": "6985:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6988:1:6",
														"nodeType": "YulTypedName",
														"src": "6988:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6994:7:6",
														"nodeType": "YulTypedName",
														"src": "6994:7:6",
														"type": ""
													}
												],
												"src": "6954:168:6"
											},
											{
												"body": {
													"nativeSrc": "7301:181:6",
													"nodeType": "YulBlock",
													"src": "7301:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7318:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7318:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7329:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7329:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7311:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7311:6:6"
																},
																"nativeSrc": "7311:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7311:21:6"
															},
															"nativeSrc": "7311:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7311:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7352:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7352:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7363:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7363:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7348:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:6"
																		},
																		"nativeSrc": "7348:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7348:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7368:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7368:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7341:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7341:6:6"
																},
																"nativeSrc": "7341:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7341:30:6"
															},
															"nativeSrc": "7341:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7341:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7391:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7391:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7402:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7402:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7387:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7387:3:6"
																		},
																		"nativeSrc": "7387:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7387:18:6"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "7407:33:6",
																		"nodeType": "YulLiteral",
																		"src": "7407:33:6",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7380:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7380:6:6"
																},
																"nativeSrc": "7380:61:6",
																"nodeType": "YulFunctionCall",
																"src": "7380:61:6"
															},
															"nativeSrc": "7380:61:6",
															"nodeType": "YulExpressionStatement",
															"src": "7380:61:6"
														},
														{
															"nativeSrc": "7450:26:6",
															"nodeType": "YulAssignment",
															"src": "7450:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7462:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7462:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7473:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7473:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7458:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7458:3:6"
																},
																"nativeSrc": "7458:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7458:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7450:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7450:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7127:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7278:9:6",
														"nodeType": "YulTypedName",
														"src": "7278:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7292:4:6",
														"nodeType": "YulTypedName",
														"src": "7292:4:6",
														"type": ""
													}
												],
												"src": "7127:355:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IFairLaunchFactoryV1_$1073__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_t_stringliteral_a89e8792d12ab2935107c47df3d6e37408b35c7947605d9909710024cead9a50__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Only multiSig address can call t\")\n        mstore(add(headStart, 96), \"his function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"No stake found\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_644e8db99e7c305cbaf9ab7cf4dfbbf8e9d24808e86a7c505456e21dd10275ce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Stake already withdrawn\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610111575f3560e01c80639b29d2151161009e578063a164959d1161006e578063a164959d14610234578063acde659714610247578063ad5a402b1461025a578063c45a015514610263578063caf10b5714610276575f80fd5b80639b29d215146101fc5780639d76ea581461020f5780639f8932f414610222578063a163beea1461022b575f80fd5b8063609c878a116100e4578063609c878a1461018a57806362d76d06146101b75780636b036f45146101ca5780638167ee72146101e157806395adb5ad146101f4575f80fd5b80630d29fcd4146101155780631516def71461012a578063387602981461015a57806341fee55714610177575b5f80fd5b610128610123366004610bba565b6102df565b005b60015461013d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6008546101679060ff1681565b6040519015158152602001610151565b610128610185366004610bba565b610322565b610167610198366004610bec565b600b60209081525f928352604080842090915290825290205460ff1681565b6101286101c5366004610c1d565b61052c565b6101d360035481565b604051908152602001610151565b6101286101ef366004610c8c565b610736565b61012861080f565b61012861020a366004610bba565b610a54565b60025461013d906001600160a01b031681565b6101d360045481565b6101d360075481565b6101d3610242366004610bec565b610a8e565b610167610255366004610bec565b610af5565b6101d360065481565b60055461013d906001600160a01b031681565b6102b5610284366004610cb4565b600a6020525f9081526040902080546001820154600283015460038401546004909401549293919290919060ff1685565b6040805195865260208601949094529284019190915260608301521515608082015260a001610151565b6001546001600160a01b031633146103125760405162461bcd60e51b815260040161030990610cd4565b60405180910390fd5b5f811161031d575f80fd5b600355565b61032a610b63565b6002546008546001600160a01b039091169060ff16610347575f80fd5b60035482116103985760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610309565b6001600160a01b0381166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303815f875af11580156103f8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061041c9190610d20565b61045a5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610309565b335f90815260096020526040902060020154610100900460ff161561047d575f80fd5b335f908152600960205260408120805484929061049b908490610d53565b9091555050335f90815260096020526040812043600190910155600680548492906104c7908490610d53565b92505081905550600160075f8282546104e09190610d53565b90915550506040805183815243602082015233917f0ae860169ef88b6e5a084a54675af932ac7be23de4abd34a1d99a5a8402a17cc910160405180910390a25061052960015f55565b50565b335f90815260096020526040902060020154610100900460ff1661054e575f80fd5b610556610b63565b5f5b818110156107285761059083838381811061057557610575610d66565b905060200201602081019061058a9190610cb4565b33610af5565b610598575f80fd5b600b5f8484848181106105ad576105ad610d66565b90506020020160208101906105c29190610cb4565b6001600160a01b0316815260208082019290925260409081015f90812033825290925290205460ff16156105f4575f80fd5b5f61062584848481811061060a5761060a610d66565b905060200201602081019061061f9190610cb4565b33610a8e565b90506001600b5f86868681811061063e5761063e610d66565b90506020020160208101906106539190610cb4565b6001600160a01b0316815260208082019290925260409081015f9081203382529092529020805460ff191691151591909117905583838381811061069957610699610d66565b90506020020160208101906106ae9190610cb4565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044016020604051808303815f875af11580156106fa573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061071e9190610d20565b5050600101610558565b5061073260015f55565b5050565b61073e610b63565b6040516370a0823160e01b815230600482015281906001600160a01b038416906370a0823190602401602060405180830381865afa158015610782573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a69190610d7a565b146107af575f80fd5b6001600160a01b0382165f908152600a602052604090206004015460ff16156107d6575f80fd5b6001600160a01b0382165f908152600a602052604090204360018201558181556002810182905560065460039091015561073260015f55565b610817610b63565b335f908152600960205260409020546108635760405162461bcd60e51b815260206004820152600e60248201526d139bc81cdd185ad948199bdd5b9960921b6044820152606401610309565b335f9081526009602052604090206002015460ff16156108c55760405162461bcd60e51b815260206004820152601760248201527f5374616b6520616c72656164792077697468647261776e0000000000000000006044820152606401610309565b60028054335f81815260096020908152604080832080549601805461ffff19166001179055805163a9059cbb60e01b8152600481019490945260248401869052516001600160a01b039094169493859363a9059cbb93604480830194939283900301908290875af115801561093c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109609190610d20565b61099e5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610309565b8060065f8282546109af9190610d91565b92505081905550600160075f8282546109c89190610d91565b9091555050335f9081526009602081905260408220829055816109e83390565b6001600160a01b0316815260208101919091526040015f2060010155336001600160a01b03167f14eed693e6d30152612ee94c12df593a490178621d3730e516b012e064eeef8f82604051610a3f91815260200190565b60405180910390a25050610a5260015f55565b565b6001546001600160a01b03163314610a7e5760405162461bcd60e51b815260040161030990610cd4565b5f8111610a89575f80fd5b600455565b5f610a998383610af5565b610aa1575f80fd5b6001600160a01b038084165f908152600a602090815260408083208054600390910154948716845260099092528220549092610adc91610da4565b90505f610ae98383610dc3565b93505050505b92915050565b6001600160a01b0382165f908152600a602052604081206004015460ff16610b1b575f80fd5b6001600160a01b038084165f908152600a60209081526040808320600190810154600454958816855260099093529220909101549091610b5a91610d53565b11159392505050565b60025f5403610bb45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610309565b60025f55565b5f60208284031215610bca575f80fd5b5035919050565b80356001600160a01b0381168114610be7575f80fd5b919050565b5f8060408385031215610bfd575f80fd5b610c0683610bd1565b9150610c1460208401610bd1565b90509250929050565b5f8060208385031215610c2e575f80fd5b823567ffffffffffffffff80821115610c45575f80fd5b818501915085601f830112610c58575f80fd5b813581811115610c66575f80fd5b8660208260051b8501011115610c7a575f80fd5b60209290920196919550909350505050565b5f8060408385031215610c9d575f80fd5b610ca683610bd1565b946020939093013593505050565b5f60208284031215610cc4575f80fd5b610ccd82610bd1565b9392505050565b6020808252602c908201527f4f6e6c79206d756c746953696720616464726573732063616e2063616c6c207460408201526b3434b990333ab731ba34b7b760a11b606082015260800190565b5f60208284031215610d30575f80fd5b81518015158114610ccd575f80fd5b634e487b7160e01b5f52601160045260245ffd5b80820180821115610aef57610aef610d3f565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215610d8a575f80fd5b5051919050565b81810381811115610aef57610aef610d3f565b5f82610dbe57634e487b7160e01b5f52601260045260245ffd5b500490565b8082028115828204841417610aef57610aef610d3f56fea26469706673582212207b8007d07bab1c03cf8c4e83ae29b887f584d48386ce68e25fb70e86f4ce605764736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x111 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B29D215 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xA164959D GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA164959D EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xACDE6597 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xAD5A402B EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xCAF10B57 EQ PUSH2 0x276 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B29D215 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x9F8932F4 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xA163BEEA EQ PUSH2 0x22B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x609C878A GT PUSH2 0xE4 JUMPI DUP1 PUSH4 0x609C878A EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x62D76D06 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x6B036F45 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x8167EE72 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x95ADB5AD EQ PUSH2 0x1F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD29FCD4 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x1516DEF7 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x38760298 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x41FEE557 EQ PUSH2 0x177 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x128 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x13D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x167 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH2 0x167 PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC1D JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST PUSH2 0x1D3 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x736 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x80F JUMP JUMPDEST PUSH2 0x128 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0xA54 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x13D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1D3 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D3 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0xBEC JUMP JUMPDEST PUSH2 0xA8E JUMP JUMPDEST PUSH2 0x167 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0xBEC JUMP JUMPDEST PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x1D3 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x13D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x309 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x31D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x32A PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0xFF AND PUSH2 0x347 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP3 GT PUSH2 0x398 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH4 0x23B872DD CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x47D JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x49B SWAP1 DUP5 SWAP1 PUSH2 0xD53 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 NUMBER PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x6 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4C7 SWAP1 DUP5 SWAP1 PUSH2 0xD53 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0xD53 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE NUMBER PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0xAE860169EF88B6E5A084A54675AF932AC7BE23DE4ABD34A1D99A5A8402A17CC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x529 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x54E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x556 PUSH2 0xB63 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x728 JUMPI PUSH2 0x590 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x575 JUMPI PUSH2 0x575 PUSH2 0xD66 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x58A SWAP2 SWAP1 PUSH2 0xCB4 JUMP JUMPDEST CALLER PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x598 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xB PUSH0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x5AD JUMPI PUSH2 0x5AD PUSH2 0xD66 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x625 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x60A JUMPI PUSH2 0x60A PUSH2 0xD66 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x61F SWAP2 SWAP1 PUSH2 0xCB4 JUMP JUMPDEST CALLER PUSH2 0xA8E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0xB PUSH0 DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x63E JUMPI PUSH2 0x63E PUSH2 0xD66 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x653 SWAP2 SWAP1 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x699 JUMPI PUSH2 0x699 PUSH2 0xD66 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6AE SWAP2 SWAP1 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6FA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71E SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x558 JUMP JUMPDEST POP PUSH2 0x732 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x73E PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x782 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A6 SWAP2 SWAP1 PUSH2 0xD7A JUMP JUMPDEST EQ PUSH2 0x7AF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 NUMBER PUSH1 0x1 DUP3 ADD SSTORE DUP2 DUP2 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH2 0x732 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x817 PUSH2 0xB63 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x863 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BC81CDD185AD948199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B6520616C72656164792077697468647261776E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP7 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x24 DUP5 ADD DUP7 SWAP1 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP5 SWAP4 DUP6 SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP4 ADD SWAP5 SWAP4 SWAP3 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x93C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x960 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9AF SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP3 SWAP1 SSTORE DUP2 PUSH2 0x9E8 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SSTORE CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x14EED693E6D30152612EE94C12DF593A490178621D3730E516B012E064EEEF8F DUP3 PUSH1 0x40 MLOAD PUSH2 0xA3F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xA52 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x309 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xA89 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0xA99 DUP4 DUP4 PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0xAA1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD SWAP5 DUP8 AND DUP5 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP1 SWAP3 PUSH2 0xADC SWAP2 PUSH2 0xDA4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xAE9 DUP4 DUP4 PUSH2 0xDC3 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0xB1B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD PUSH1 0x4 SLOAD SWAP6 DUP9 AND DUP6 MSTORE PUSH1 0x9 SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 PUSH2 0xB5A SWAP2 PUSH2 0xD53 JUMP JUMPDEST GT ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xBB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBCA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBFD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC06 DUP4 PUSH2 0xBD1 JUMP JUMPDEST SWAP2 POP PUSH2 0xC14 PUSH1 0x20 DUP5 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC2E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC45 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC58 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xC66 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xC7A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC9D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCA6 DUP4 PUSH2 0xBD1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCCD DUP3 PUSH2 0xBD1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206D756C746953696720616464726573732063616E2063616C6C2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x3434B990333AB731BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD30 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCCD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xAEF JUMPI PUSH2 0xAEF PUSH2 0xD3F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xAEF JUMPI PUSH2 0xAEF PUSH2 0xD3F JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xDBE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xAEF JUMPI PUSH2 0xAEF PUSH2 0xD3F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x8007D07BAB1C03CF8C4E83AE29B887F584D48386CE68E25FB70E86F4 0xCE PUSH1 0x57 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "424:5432:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5555:144;;;;;;:::i;:::-;;:::i;:::-;;486:30;;;;;-1:-1:-1;;;;;486:30:4;;;;;;-1:-1:-1;;;;;363:32:6;;;345:51;;333:2;318:18;486:30:4;;;;;;;;760:23;;;;;;;;;;;;572:14:6;;565:22;547:41;;535:2;520:18;760:23:4;407:187:6;2307:646:4;;;;;;:::i;:::-;;:::i;1669:78::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4243:563;;;;;;:::i;:::-;;:::i;555:33::-;;;;;;;;;1808:25:6;;;1796:2;1781:18;555:33:4;1662:177:6;3700:532:4;;;;;;:::i;:::-;;:::i;2959:735::-;;;:::i;5705:148::-;;;;;;:::i;:::-;;:::i;522:27::-;;;;;-1:-1:-1;;;;;522:27:4;;;594:35;;;;;;720:33;;;;;;5101:448;;;;;;:::i;:::-;;:::i;4812:283::-;;;;;;:::i;:::-;;:::i;677:37::-;;;;;;635:35;;;;;-1:-1:-1;;;;;635:35:4;;;1611:52;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2784:25:6;;;2840:2;2825:18;;2818:34;;;;2868:18;;;2861:34;;;;2926:2;2911:18;;2904:34;2982:14;2975:22;2969:3;2954:19;;2947:51;2771:3;2756:19;1611:52:4;2531:473:6;5555:144:4;1105:15;;-1:-1:-1;;;;;1105:15:4;1091:10;:29;1083:86;;;;-1:-1:-1;;;1083:86:4;;;;;;;:::i;:::-;;;;;;;;;5651:1:::1;5641:7;:11;5633:20;;;::::0;::::1;;5664:18;:28:::0;5555:144::o;2307:646::-;2261:21:1;:19;:21::i;:::-;2401:12:4::1;::::0;2432:11:::1;::::0;-1:-1:-1;;;;;2401:12:4;;::::1;::::0;2432:11:::1;;2424:20;;;::::0;::::1;;2472:18;;2462:7;:28;2454:73;;;::::0;-1:-1:-1;;;2454:73:4;;3624:2:6;2454:73:4::1;::::0;::::1;3606:21:6::0;;;3643:18;;;3636:30;3702:34;3682:18;;;3675:62;3754:18;;2454:73:4::1;3422:356:6::0;2454:73:4::1;-1:-1:-1::0;;;;;2545:18:4;::::1;;735:10:3::0;2545:56:4::1;::::0;-1:-1:-1;;;;;;2545:56:4::1;::::0;;;;;;-1:-1:-1;;;;;4041:15:6;;;2545:56:4::1;::::0;::::1;4023:34:6::0;2586:4:4::1;4073:18:6::0;;;4066:43;4125:18;;;4118:34;;;3958:18;;2545:56:4::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2537:84;;;::::0;-1:-1:-1;;;2537:84:4;;4647:2:6;2537:84:4::1;::::0;::::1;4629:21:6::0;4686:2;4666:18;;;4659:30;-1:-1:-1;;;4705:18:6;;;4698:45;4760:18;;2537:84:4::1;4445:339:6::0;2537:84:4::1;735:10:3::0;2640:26:4::1;::::0;;;:12:::1;:26;::::0;;;;:40:::1;;::::0;::::1;::::0;::::1;;;2639:41;2631:50;;;::::0;::::1;;735:10:3::0;2692:26:4::1;::::0;;;:12:::1;:26;::::0;;;;:44;;2729:7;;2692:26;:44:::1;::::0;2729:7;;2692:44:::1;:::i;:::-;::::0;;;-1:-1:-1;;735:10:3;2746:26:4::1;::::0;;;:12:::1;:26;::::0;;;;2787:12:::1;2746:38;::::0;;::::1;:53:::0;2809:22:::1;:33:::0;;2835:7;;2746:26;2809:33:::1;::::0;2835:7;;2809:33:::1;:::i;:::-;;;;;;;;2874:1;2852:18;;:23;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2891:54:4::1;::::0;;5225:25:6;;;2932:12:4::1;5281:2:6::0;5266:18;;5259:34;735:10:3;;2891:54:4::1;::::0;5198:18:6;2891:54:4::1;;;;;;;2369:584;2303:20:1::0;1716:1;2809:7;:22;2629:209;2303:20;2307:646:4;:::o;4243:563::-;847:10;834:24;;;;:12;:24;;;;;:38;;;;;;;;826:47;;;;;;2261:21:1::1;:19;:21::i;:::-;4350:9:4::2;4345:455;4365:26:::0;;::::2;4345:455;;;4420:51;4440:15;;4456:1;4440:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4460:10;4420:19;:51::i;:::-;4412:60;;;::::0;::::2;;4495:26;:46;4522:15;;4538:1;4522:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4495:46:4::2;::::0;;::::2;::::0;;::::2;::::0;;;;;;;;-1:-1:-1;4495:46:4;;;4542:10:::2;4495:58:::0;;;;;;;;::::2;;4494:59;4486:68;;;::::0;::::2;;4568:19;4590:46;4605:15;;4621:1;4605:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4625:10;4590:14;:46::i;:::-;4568:68;;4711:4;4650:26;:46;4677:15;;4693:1;4677:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4650:46:4::2;::::0;;::::2;::::0;;::::2;::::0;;;;;;;;-1:-1:-1;4650:46:4;;;4697:10:::2;4650:58:::0;;;;;;;:65;;-1:-1:-1;;4650:65:4::2;::::0;::::2;;::::0;;;::::2;::::0;;4736:15;;4752:1;4736:18;;::::2;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4729:60;::::0;-1:-1:-1;;;4729:60:4;;4765:10:::2;4729:60;::::0;::::2;5610:51:6::0;5677:18;;;5670:34;;;-1:-1:-1;;;;;4729:35:4;;;::::2;::::0;::::2;::::0;5583:18:6;;4729:60:4::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;4393:3:4::2;;4345:455;;;;2303:20:1::1;1716:1:::0;2809:7;:22;2629:209;2303:20:::1;4243:563:4::0;;:::o;3700:532::-;2261:21:1;:19;:21::i;:::-;3811:46:4::1;::::0;-1:-1:-1;;;3811:46:4;;3851:4:::1;3811:46;::::0;::::1;345:51:6::0;3861:11:4;;-1:-1:-1;;;;;3811:31:4;::::1;::::0;::::1;::::0;318:18:6;;3811:46:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;3803:70;;;::::0;::::1;;-1:-1:-1::0;;;;;3892:28:4;::::1;;::::0;;;:13:::1;:28;::::0;;;;:39:::1;;::::0;::::1;;3891:40;3883:49;;;::::0;::::1;;-1:-1:-1::0;;;;;3942:28:4;::::1;;::::0;;;:13:::1;:28;::::0;;;;3987:12:::1;3942:42;::::0;::::1;:57:::0;4009:53;;;4073:48:::1;::::0;::::1;:62:::0;;;4203:22:::1;::::0;4146:54:::1;::::0;;::::1;:79:::0;2303:20:1;1716:1;2809:7;:22;2629:209;2959:735:4;2261:21:1;:19;:21::i;:::-;735:10:3;3064:1:4::1;3028:26:::0;;;:12:::1;:26;::::0;;;;:33;3020:64:::1;;;::::0;-1:-1:-1;;;3020:64:4;;6106:2:6;3020:64:4::1;::::0;::::1;6088:21:6::0;6145:2;6125:18;;;6118:30;-1:-1:-1;;;6164:18:6;;;6157:44;6218:18;;3020:64:4::1;5904:338:6::0;3020:64:4::1;735:10:3::0;3103:26:4::1;::::0;;;:12:::1;:26;::::0;;;;:36:::1;;::::0;::::1;;3102:37;3094:73;;;::::0;-1:-1:-1;;;3094:73:4;;6449:2:6;3094:73:4::1;::::0;::::1;6431:21:6::0;6488:2;6468:18;;;6461:30;6527:25;6507:18;;;6500:53;6570:18;;3094:73:4::1;6247:347:6::0;3094:73:4::1;3199:12;::::0;;735:10:3;3177:12:4::1;3239:26:::0;;;:12:::1;:26;::::0;;;;;;;:33;;3282:36;::::1;:43:::0;;-1:-1:-1;;3335:48:4;3321:4:::1;3335:48:::0;;;3402:36;;-1:-1:-1;;;3402:36:4;;::::1;::::0;::::1;5610:51:6::0;;;;5677:18;;;5670:34;;;3402:36:4;-1:-1:-1;;;;;3199:12:4;;::::1;::::0;3239:33;3199:12;;3402:14:::1;::::0;5583:18:6;;;;;3239:26:4;3402:36;;;;;;;;3199:12;3402:36:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3394:64;;;::::0;-1:-1:-1;;;3394:64:4;;4647:2:6;3394:64:4::1;::::0;::::1;4629:21:6::0;4686:2;4666:18;;;4659:30;-1:-1:-1;;;4705:18:6;;;4698:45;4760:18;;3394:64:4::1;4445:339:6::0;3394:64:4::1;3494:6;3468:22;;:32;;;;;;;:::i;:::-;;;;;;;;3532:1;3510:18;;:23;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3556:10:4::1;3577:1;3543:24:::0;;;:12:::1;:24;::::0;;;;;;:35;;;3577:1;3601:12:::1;735:10:3::0;;656:96;3601:12:4::1;-1:-1:-1::0;;;;;3588:26:4::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;3588:26:4;:38:::1;;:42:::0;735:10:3;-1:-1:-1;;;;;3645:42:4::1;;3680:6;3645:42;;;;1808:25:6::0;;1796:2;1781:18;;1662:177;3645:42:4::1;;;;;;;;3010:684;;2303:20:1::0;1716:1;2809:7;:22;2629:209;2303:20;2959:735:4:o;5705:148::-;1105:15;;-1:-1:-1;;;;;1105:15:4;1091:10;:29;1083:86;;;;-1:-1:-1;;;1083:86:4;;;;;;;:::i;:::-;5803:1:::1;5793:7;:11;5785:20;;;::::0;::::1;;5816;:30:::0;5705:148::o;5101:448::-;5186:7;5213:44;5233:13;5248:8;5213:19;:44::i;:::-;5205:53;;;;;;-1:-1:-1;;;;;5289:28:4;;;5268:18;5289:28;;;:13;:28;;;;;;;;:39;;5398:54;;;;;5366:22;;;;;:12;:22;;;;;:29;5289:39;;5366:86;;;:::i;:::-;5338:114;-1:-1:-1;5462:19:4;5484:30;5504:10;5338:114;5484:30;:::i;:::-;5462:52;-1:-1:-1;;;;5101:448:4;;;;;:::o;4812:283::-;-1:-1:-1;;;;;4926:28:4;;4902:4;4926:28;;;:13;:28;;;;;:39;;;;;4918:48;;;;;;-1:-1:-1;;;;;5046:28:4;;;;;;;:13;:28;;;;;;;;:42;;;;;5021:20;;4984:22;;;;;:12;:22;;;;;:34;;;;5046:42;;4984:57;;;:::i;:::-;4983:105;;;4812:283;-1:-1:-1;;;4812:283:4:o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:1;;7329:2:6;2460:63:1;;;7311:21:6;7368:2;7348:18;;;7341:30;7407:33;7387:18;;;7380:61;7458:18;;2460:63:1;7127:355:6;2460:63:1;1759:1;2598:7;:18;2336:287::o;14:180:6:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:6;;14:180;-1:-1:-1;14:180:6:o;599:173::-;667:20;;-1:-1:-1;;;;;716:31:6;;706:42;;696:70;;762:1;759;752:12;696:70;599:173;;;:::o;777:260::-;845:6;853;906:2;894:9;885:7;881:23;877:32;874:52;;;922:1;919;912:12;874:52;945:29;964:9;945:29;:::i;:::-;935:39;;993:38;1027:2;1016:9;1012:18;993:38;:::i;:::-;983:48;;777:260;;;;;:::o;1042:615::-;1128:6;1136;1189:2;1177:9;1168:7;1164:23;1160:32;1157:52;;;1205:1;1202;1195:12;1157:52;1245:9;1232:23;1274:18;1315:2;1307:6;1304:14;1301:34;;;1331:1;1328;1321:12;1301:34;1369:6;1358:9;1354:22;1344:32;;1414:7;1407:4;1403:2;1399:13;1395:27;1385:55;;1436:1;1433;1426:12;1385:55;1476:2;1463:16;1502:2;1494:6;1491:14;1488:34;;;1518:1;1515;1508:12;1488:34;1571:7;1566:2;1556:6;1553:1;1549:14;1545:2;1541:23;1537:32;1534:45;1531:65;;;1592:1;1589;1582:12;1531:65;1623:2;1615:11;;;;;1645:6;;-1:-1:-1;1042:615:6;;-1:-1:-1;;;;1042:615:6:o;1844:254::-;1912:6;1920;1973:2;1961:9;1952:7;1948:23;1944:32;1941:52;;;1989:1;1986;1979:12;1941:52;2012:29;2031:9;2012:29;:::i;:::-;2002:39;2088:2;2073:18;;;;2060:32;;-1:-1:-1;;;1844:254:6:o;2340:186::-;2399:6;2452:2;2440:9;2431:7;2427:23;2423:32;2420:52;;;2468:1;2465;2458:12;2420:52;2491:29;2510:9;2491:29;:::i;:::-;2481:39;2340:186;-1:-1:-1;;;2340:186:6:o;3009:408::-;3211:2;3193:21;;;3250:2;3230:18;;;3223:30;3289:34;3284:2;3269:18;;3262:62;-1:-1:-1;;;3355:2:6;3340:18;;3333:42;3407:3;3392:19;;3009:408::o;4163:277::-;4230:6;4283:2;4271:9;4262:7;4258:23;4254:32;4251:52;;;4299:1;4296;4289:12;4251:52;4331:9;4325:16;4384:5;4377:13;4370:21;4363:5;4360:32;4350:60;;4406:1;4403;4396:12;4789:127;4850:10;4845:3;4841:20;4838:1;4831:31;4881:4;4878:1;4871:15;4905:4;4902:1;4895:15;4921:125;4986:9;;;5007:10;;;5004:36;;;5020:18;;:::i;5304:127::-;5365:10;5360:3;5356:20;5353:1;5346:31;5396:4;5393:1;5386:15;5420:4;5417:1;5410:15;5715:184;5785:6;5838:2;5826:9;5817:7;5813:23;5809:32;5806:52;;;5854:1;5851;5844:12;5806:52;-1:-1:-1;5877:16:6;;5715:184;-1:-1:-1;5715:184:6:o;6599:128::-;6666:9;;;6687:11;;;6684:37;;;6701:18;;:::i;6732:217::-;6772:1;6798;6788:132;;6842:10;6837:3;6833:20;6830:1;6823:31;6877:4;6874:1;6867:15;6905:4;6902:1;6895:15;6788:132;-1:-1:-1;6934:9:6;;6732:217::o;6954:168::-;7027:9;;;7058;;7075:15;;;7069:22;;7055:37;7045:71;;7096:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "720000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addressWithdrewERC20Reward(address,address)": "infinite",
								"degeneratorStakers()": "2383",
								"degeneratorStakingPool()": "2360",
								"erc20Supplies(address)": "11182",
								"factory()": "2413",
								"getTokenEligibility(address,address)": "infinite",
								"getTokenReward(address,address)": "infinite",
								"minimumStakeAmount()": "2361",
								"multiSigAddress()": "2371",
								"registerERC20Supply(address,uint256)": "infinite",
								"rewardBlackoutPeriod()": "2361",
								"setMinimumStakeAmount(uint256)": "24508",
								"setRewardBlackoutPeriod(uint256)": "24507",
								"stakeDegnerator(uint256)": "infinite",
								"stakingOpen()": "2377",
								"tokenAddress()": "2370",
								"withdrawDegenerator()": "infinite",
								"withdrawRewards(address[])": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 5856,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 424,
									"end": 5856,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 424,
									"end": 5856,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1917,
									"end": 2301,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1917,
									"end": 2301,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2084,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2050,
									"end": 2084,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2050,
									"end": 2084,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2050,
									"end": 2084,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2050,
									"end": 2084,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2050,
									"end": 2084,
									"name": "SWAP8",
									"source": 4
								},
								{
									"begin": 2050,
									"end": 2084,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 2050,
									"end": 2084,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2050,
									"end": 2084,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2050,
									"end": 2084,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2050,
									"end": 2084,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2050,
									"end": 2084,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2094,
									"end": 2106,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2094,
									"end": 2122,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2094,
									"end": 2122,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2094,
									"end": 2122,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2094,
									"end": 2122,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2094,
									"end": 2122,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2094,
									"end": 2122,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 2094,
									"end": 2122,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2094,
									"end": 2122,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 2094,
									"end": 2122,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2094,
									"end": 2122,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2094,
									"end": 2122,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2094,
									"end": 2122,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2094,
									"end": 2122,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2094,
									"end": 2122,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2094,
									"end": 2122,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2094,
									"end": 2122,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2132,
									"end": 2152,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2132,
									"end": 2176,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2132,
									"end": 2176,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2132,
									"end": 2176,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2132,
									"end": 2176,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2186,
									"end": 2204,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2186,
									"end": 2226,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2236,
									"end": 2258,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2236,
									"end": 2262,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2236,
									"end": 2262,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2236,
									"end": 2262,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2272,
									"end": 2290,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2272,
									"end": 2294,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 424,
									"end": 5856,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 424,
									"end": 5856,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 612,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 612,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 293,
									"end": 299,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 307,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 309,
									"end": 315,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 323,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 370,
									"end": 373,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 367,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 349,
									"end": 356,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 345,
									"end": 368,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 341,
									"end": 374,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 338,
									"end": 391,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 338,
									"end": 391,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 387,
									"end": 388,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 385,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 377,
									"end": 389,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 338,
									"end": 391,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 440,
									"end": 449,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 410,
									"end": 450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 410,
									"end": 450,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 410,
									"end": 450,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 400,
									"end": 450,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 400,
									"end": 450,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 514,
									"end": 516,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 503,
									"end": 512,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 499,
									"end": 517,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 469,
									"end": 518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 469,
									"end": 518,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 469,
									"end": 518,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 558,
									"end": 560,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 543,
									"end": 561,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 543,
									"end": 561,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 537,
									"end": 562,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 602,
									"end": 604,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 587,
									"end": 605,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 587,
									"end": 605,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 587,
									"end": 605,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 581,
									"end": 606,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 196,
									"end": 612,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 196,
									"end": 612,
									"name": "SWAP8",
									"source": 6
								},
								{
									"begin": 459,
									"end": 518,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 459,
									"end": 518,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 196,
									"end": 612,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 196,
									"end": 612,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 612,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 196,
									"end": 612,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 424,
									"end": 5856,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 5856,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 424,
									"end": 5856,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 5856,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 5856,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 424,
									"end": 5856,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 5856,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207b8007d07bab1c03cf8c4e83ae29b887f584d48386ce68e25fb70e86f4ce605764736f6c63430008190033",
									".code": [
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "9B29D215"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "A164959D"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "A164959D"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "ACDE6597"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "AD5A402B"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "C45A0155"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "CAF10B57"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "9B29D215"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "9D76EA58"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "9F8932F4"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "A163BEEA"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "609C878A"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "609C878A"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "62D76D06"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "6B036F45"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "8167EE72"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "95ADB5AD"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "D29FCD4"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "1516DEF7"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "38760298"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "41FEE557"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 5856,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5555,
											"end": 5699,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5555,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5555,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5555,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 5555,
											"end": 5699,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5555,
											"end": 5699,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5555,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 5555,
											"end": 5699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5555,
											"end": 5699,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 5555,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5555,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 5555,
											"end": 5699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5555,
											"end": 5699,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5555,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5555,
											"end": 5699,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 486,
											"end": 516,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 486,
											"end": 516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 486,
											"end": 516,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 486,
											"end": 516,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 486,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 486,
											"end": 516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 486,
											"end": 516,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 486,
											"end": 516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 486,
											"end": 516,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 486,
											"end": 516,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 486,
											"end": 516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 486,
											"end": 516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 486,
											"end": 516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 363,
											"end": 395,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 395,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 363,
											"end": 395,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 345,
											"end": 396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 486,
											"end": 516,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 486,
											"end": 516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 486,
											"end": 516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 486,
											"end": 516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 486,
											"end": 516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 486,
											"end": 516,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 486,
											"end": 516,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 486,
											"end": 516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 486,
											"end": 516,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 760,
											"end": 783,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 760,
											"end": 783,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 760,
											"end": 783,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 760,
											"end": 783,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 760,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 760,
											"end": 783,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 760,
											"end": 783,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 760,
											"end": 783,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 760,
											"end": 783,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 760,
											"end": 783,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 760,
											"end": 783,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 760,
											"end": 783,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 760,
											"end": 783,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 783,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 572,
											"end": 586,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 586,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 565,
											"end": 587,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 547,
											"end": 588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 547,
											"end": 588,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 535,
											"end": 537,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 520,
											"end": 538,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 760,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 407,
											"end": 594,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2953,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2307,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2307,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2307,
											"end": 2953,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2953,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2307,
											"end": 2953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2953,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2307,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2307,
											"end": 2953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1669,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1669,
											"end": 1747,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4806,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4243,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4243,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4243,
											"end": 4806,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4806,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4243,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4243,
											"end": 4806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4806,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4243,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4243,
											"end": 4806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 555,
											"end": 588,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 555,
											"end": 588,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 555,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 555,
											"end": 588,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 555,
											"end": 588,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 555,
											"end": 588,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 555,
											"end": 588,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 555,
											"end": 588,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 555,
											"end": 588,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 555,
											"end": 588,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 588,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1833,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1799,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 555,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1662,
											"end": 1839,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 4232,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3700,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3700,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3700,
											"end": 4232,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 4232,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3700,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3700,
											"end": 4232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 4232,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3700,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3700,
											"end": 4232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 3694,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2959,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2959,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2959,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 5705,
											"end": 5853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5705,
											"end": 5853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 522,
											"end": 549,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 522,
											"end": 549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 522,
											"end": 549,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 522,
											"end": 549,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 522,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 522,
											"end": 549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 522,
											"end": 549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 522,
											"end": 549,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 522,
											"end": 549,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 594,
											"end": 629,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 594,
											"end": 629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 594,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 594,
											"end": 629,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 594,
											"end": 629,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 594,
											"end": 629,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 594,
											"end": 629,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 720,
											"end": 753,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 720,
											"end": 753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 720,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 720,
											"end": 753,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 720,
											"end": 753,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 720,
											"end": 753,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 720,
											"end": 753,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5549,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 5101,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5101,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 5101,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5549,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5101,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5101,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5549,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 5101,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5101,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4812,
											"end": 5095,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 4812,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4812,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4812,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4812,
											"end": 5095,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4812,
											"end": 5095,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4812,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4812,
											"end": 5095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4812,
											"end": 5095,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4812,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4812,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4812,
											"end": 5095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 677,
											"end": 714,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 677,
											"end": 714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 677,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 677,
											"end": 714,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 677,
											"end": 714,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 677,
											"end": 714,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 677,
											"end": 714,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 635,
											"end": 670,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 635,
											"end": 670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 635,
											"end": 670,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 635,
											"end": 670,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 635,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 635,
											"end": 670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 635,
											"end": 670,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 635,
											"end": 670,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 635,
											"end": 670,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1611,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2784,
											"end": 2809,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2784,
											"end": 2809,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2784,
											"end": 2809,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2840,
											"end": 2842,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2825,
											"end": 2843,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2818,
											"end": 2852,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2818,
											"end": 2852,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2818,
											"end": 2852,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2818,
											"end": 2852,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2926,
											"end": 2928,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2911,
											"end": 2929,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2929,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2904,
											"end": 2938,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2997,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 2972,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2954,
											"end": 2973,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 2998,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2771,
											"end": 2774,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 2756,
											"end": 2775,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2531,
											"end": 3004,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5699,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 5555,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1120,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1105,
											"end": 1120,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1105,
											"end": 1120,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1101,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1120,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1083,
											"end": 1169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5651,
											"end": 5652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5648,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5652,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5653,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5633,
											"end": 5653,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5633,
											"end": 5653,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5653,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5653,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5633,
											"end": 5653,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5664,
											"end": 5682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5664,
											"end": 5692,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5555,
											"end": 5699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2953,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2307,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2401,
											"end": 2413,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2432,
											"end": 2443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2432,
											"end": 2443,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2401,
											"end": 2413,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2413,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2413,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2413,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2432,
											"end": 2443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2432,
											"end": 2443,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2424,
											"end": 2444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2424,
											"end": 2444,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2424,
											"end": 2444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2424,
											"end": 2444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2424,
											"end": 2444,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2424,
											"end": 2444,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2424,
											"end": 2444,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2472,
											"end": 2490,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2462,
											"end": 2469,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2462,
											"end": 2490,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2527,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2454,
											"end": 2527,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2454,
											"end": 2527,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2454,
											"end": 2527,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2527,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2454,
											"end": 2527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2454,
											"end": 2527,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2527,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3606,
											"end": 3627,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3627,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3643,
											"end": 3661,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 3661,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3666,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3702,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 3682,
											"end": 3700,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3682,
											"end": 3700,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3682,
											"end": 3700,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3737,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3754,
											"end": 3772,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3754,
											"end": 3772,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2527,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3422,
											"end": 3778,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2527,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2454,
											"end": 2527,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2545,
											"end": 2563,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2563,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2601,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2545,
											"end": 2601,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4041,
											"end": 4056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4041,
											"end": 4056,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4041,
											"end": 4056,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2545,
											"end": 2601,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4023,
											"end": 4057,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2590,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4109,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4152,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4152,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 3976,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3958,
											"end": 3976,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2545,
											"end": 2601,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2545,
											"end": 2601,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2545,
											"end": 2601,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2537,
											"end": 2621,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2537,
											"end": 2621,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2537,
											"end": 2621,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2621,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4647,
											"end": 4649,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2537,
											"end": 2621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2537,
											"end": 2621,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2621,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4629,
											"end": 4650,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4688,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 4666,
											"end": 4684,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4666,
											"end": 4684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4659,
											"end": 4689,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4743,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4445,
											"end": 4784,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2537,
											"end": 2621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2666,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 2666,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 2666,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2640,
											"end": 2666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2640,
											"end": 2666,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 2666,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2640,
											"end": 2666,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 2666,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 2680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2640,
											"end": 2680,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 2680,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 2680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2640,
											"end": 2680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 2680,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 2680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2640,
											"end": 2680,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2680,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2681,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2631,
											"end": 2681,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2681,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2681,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2681,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2631,
											"end": 2681,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2718,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2718,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2692,
											"end": 2718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2692,
											"end": 2718,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2718,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2718,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2718,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2736,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2736,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2692,
											"end": 2736,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2736,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2692,
											"end": 2736,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2772,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2772,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2772,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2746,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2746,
											"end": 2772,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2772,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2746,
											"end": 2772,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2772,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2787,
											"end": 2799,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2746,
											"end": 2784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2784,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2784,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2799,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2842,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2772,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2809,
											"end": 2842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2809,
											"end": 2842,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2842,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2809,
											"end": 2842,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2842,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2842,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2842,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2842,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2842,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2842,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2842,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2852,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2852,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2875,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2875,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2875,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2875,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2852,
											"end": 2875,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2875,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2875,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2852,
											"end": 2875,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2875,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2852,
											"end": 2875,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2875,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2875,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2875,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2891,
											"end": 2945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2891,
											"end": 2945,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2945,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5225,
											"end": 5250,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5250,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2944,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 5281,
											"end": 5283,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5266,
											"end": 5284,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5266,
											"end": 5284,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5259,
											"end": 5293,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 2945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "AE860169EF88B6E5A084A54675AF932AC7BE23DE4ABD34A1D99A5A8402A17CC"
										},
										{
											"begin": 2891,
											"end": 2945,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2891,
											"end": 2945,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2945,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2945,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2945,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2945,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2953,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2953,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4806,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4243,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 847,
											"end": 857,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 834,
											"end": 858,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 834,
											"end": 858,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 834,
											"end": 858,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 834,
											"end": 858,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 834,
											"end": 846,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 834,
											"end": 858,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 834,
											"end": 858,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 834,
											"end": 858,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 834,
											"end": 858,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 834,
											"end": 858,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 834,
											"end": 872,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 834,
											"end": 872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 834,
											"end": 872,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 834,
											"end": 872,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 834,
											"end": 872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 834,
											"end": 872,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 834,
											"end": 872,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 834,
											"end": 872,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 826,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 826,
											"end": 873,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 826,
											"end": 873,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 873,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 826,
											"end": 873,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 826,
											"end": 873,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 826,
											"end": 873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4359,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4345,
											"end": 4800,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4345,
											"end": 4800,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4365,
											"end": 4391,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4365,
											"end": 4391,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4365,
											"end": 4391,
											"modifierDepth": 2,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4800,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4800,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4345,
											"end": 4800,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4471,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 4440,
											"end": 4455,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4455,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4456,
											"end": 4457,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 4440,
											"end": 4458,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4440,
											"end": 4458,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4440,
											"end": 4458,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4470,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4439,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4420,
											"end": 4471,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4471,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 4420,
											"end": 4471,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4412,
											"end": 4472,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4412,
											"end": 4472,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4412,
											"end": 4472,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4412,
											"end": 4472,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4412,
											"end": 4472,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4412,
											"end": 4472,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4412,
											"end": 4472,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4521,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 4495,
											"end": 4541,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4522,
											"end": 4537,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4537,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4539,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 4522,
											"end": 4540,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4522,
											"end": 4540,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 4522,
											"end": 4540,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4495,
											"end": 4541,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4541,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4541,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4495,
											"end": 4541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4541,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4541,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4541,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4541,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4541,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4541,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4495,
											"end": 4541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4495,
											"end": 4541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4541,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4542,
											"end": 4552,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4553,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4553,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4553,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4553,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4553,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4553,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4553,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4553,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4553,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4495,
											"end": 4553,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4494,
											"end": 4553,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4486,
											"end": 4554,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4486,
											"end": 4554,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4486,
											"end": 4554,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4554,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4486,
											"end": 4554,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4486,
											"end": 4554,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4486,
											"end": 4554,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4568,
											"end": 4587,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4636,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4605,
											"end": 4620,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4620,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4621,
											"end": 4622,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 4605,
											"end": 4623,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4605,
											"end": 4623,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4605,
											"end": 4623,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 4635,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4590,
											"end": 4604,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4590,
											"end": 4636,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4590,
											"end": 4636,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4590,
											"end": 4636,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4568,
											"end": 4636,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4568,
											"end": 4636,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4711,
											"end": 4715,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4650,
											"end": 4676,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 4650,
											"end": 4696,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4677,
											"end": 4692,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4692,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4693,
											"end": 4694,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 4677,
											"end": 4695,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4677,
											"end": 4695,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4677,
											"end": 4695,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4650,
											"end": 4696,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4696,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4696,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4696,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4650,
											"end": 4696,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4696,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4696,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4696,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4696,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4696,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4696,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4696,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4650,
											"end": 4696,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4696,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4696,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4650,
											"end": 4696,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4696,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4696,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4697,
											"end": 4707,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4708,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4708,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4708,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4708,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4708,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4715,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4715,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4650,
											"end": 4715,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4715,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4715,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4715,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4715,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4715,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4715,
											"modifierDepth": 2,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4715,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4751,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4751,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4752,
											"end": 4753,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 4736,
											"end": 4754,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4736,
											"end": 4754,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4736,
											"end": 4754,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4729,
											"end": 4789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4729,
											"end": 4789,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4765,
											"end": 4775,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4729,
											"end": 4789,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5661,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5670,
											"end": 5704,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5670,
											"end": 5704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5670,
											"end": 5704,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4729,
											"end": 4764,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4764,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4764,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4764,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 4729,
											"end": 4764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5583,
											"end": 5601,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5583,
											"end": 5601,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4729,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4729,
											"end": 4789,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4729,
											"end": 4789,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4393,
											"end": 4396,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4393,
											"end": 4396,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4800,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4345,
											"end": 4800,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4800,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4345,
											"end": 4800,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4800,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 4232,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3700,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3857,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3811,
											"end": 3857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3851,
											"end": 3855,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 3857,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 3872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3811,
											"end": 3842,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3842,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 3811,
											"end": 3842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3857,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 3811,
											"end": 3857,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 3811,
											"end": 3857,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3872,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3873,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3803,
											"end": 3873,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3873,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3873,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3873,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3803,
											"end": 3873,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3892,
											"end": 3920,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3920,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3920,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 3892,
											"end": 3920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 3920,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3920,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3892,
											"end": 3931,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3931,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3892,
											"end": 3931,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 3931,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 3932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3883,
											"end": 3932,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 3932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3932,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 3932,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 3932,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3883,
											"end": 3932,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 3970,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3942,
											"end": 3970,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3942,
											"end": 3970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3942,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3942,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3942,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 3942,
											"end": 3970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3942,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3942,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3942,
											"end": 3970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3942,
											"end": 3970,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 3999,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 3942,
											"end": 3984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3942,
											"end": 3984,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3942,
											"end": 3984,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3942,
											"end": 3999,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4009,
											"end": 4062,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4009,
											"end": 4062,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4009,
											"end": 4062,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4073,
											"end": 4121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4073,
											"end": 4121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4073,
											"end": 4121,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4073,
											"end": 4135,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4073,
											"end": 4135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4073,
											"end": 4135,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4203,
											"end": 4225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4203,
											"end": 4225,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4146,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4146,
											"end": 4200,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4146,
											"end": 4200,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4146,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4146,
											"end": 4225,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 3694,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2959,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3028,
											"end": 3040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3028,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3028,
											"end": 3054,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3028,
											"end": 3061,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3020,
											"end": 3084,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3084,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3084,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6106,
											"end": 6108,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3020,
											"end": 3084,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3084,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6109,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6147,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 6125,
											"end": 6143,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6125,
											"end": 6143,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6125,
											"end": 6143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6118,
											"end": 6148,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81CDD185AD948199BDD5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6164,
											"end": 6182,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6164,
											"end": 6182,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6182,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6201,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6218,
											"end": 6236,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6218,
											"end": 6236,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 5904,
											"end": 6242,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3020,
											"end": 3084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3103,
											"end": 3129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3103,
											"end": 3129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3103,
											"end": 3139,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3139,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3103,
											"end": 3139,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3102,
											"end": 3139,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3094,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3094,
											"end": 3167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3094,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3094,
											"end": 3167,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3094,
											"end": 3167,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3094,
											"end": 3167,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6449,
											"end": 6451,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3094,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3094,
											"end": 3167,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3094,
											"end": 3167,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6452,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6488,
											"end": 6490,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 6468,
											"end": 6486,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6468,
											"end": 6486,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6468,
											"end": 6486,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6491,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6527,
											"end": 6552,
											"name": "PUSH",
											"source": 6,
											"value": "5374616B6520616C72656164792077697468647261776E000000000000000000"
										},
										{
											"begin": 6507,
											"end": 6525,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6507,
											"end": 6525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6500,
											"end": 6553,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6570,
											"end": 6588,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6570,
											"end": 6588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 6247,
											"end": 6594,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3094,
											"end": 3167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3177,
											"end": 3189,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3265,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3239,
											"end": 3265,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3239,
											"end": 3265,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3239,
											"end": 3251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3239,
											"end": 3265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3239,
											"end": 3265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3239,
											"end": 3265,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3239,
											"end": 3265,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3239,
											"end": 3265,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3239,
											"end": 3265,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3239,
											"end": 3265,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3239,
											"end": 3265,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3239,
											"end": 3272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3239,
											"end": 3272,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3318,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3318,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3325,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3325,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 3325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3335,
											"end": 3383,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3335,
											"end": 3383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3335,
											"end": 3383,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3402,
											"end": 3438,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3402,
											"end": 3438,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5661,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5661,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5661,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5670,
											"end": 5704,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5670,
											"end": 5704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5670,
											"end": 5704,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3402,
											"end": 3438,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3239,
											"end": 3272,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 3402,
											"end": 3416,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5583,
											"end": 5601,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5583,
											"end": 5601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 5601,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 5601,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 5601,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3239,
											"end": 3265,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3438,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3402,
											"end": 3438,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3402,
											"end": 3438,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3394,
											"end": 3458,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3394,
											"end": 3458,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3394,
											"end": 3458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4647,
											"end": 4649,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3394,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3394,
											"end": 3458,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3458,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4629,
											"end": 4650,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4688,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 4666,
											"end": 4684,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4666,
											"end": 4684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4659,
											"end": 4689,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4743,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4445,
											"end": 4784,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3458,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3394,
											"end": 3458,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3468,
											"end": 3490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3468,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3468,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3468,
											"end": 3500,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3500,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3468,
											"end": 3500,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3510,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3510,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3533,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3533,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3533,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3533,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3510,
											"end": 3533,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3533,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3533,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3510,
											"end": 3533,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3533,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3510,
											"end": 3533,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3533,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3533,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3533,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3556,
											"end": 3566,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3567,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3543,
											"end": 3567,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3543,
											"end": 3567,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3543,
											"end": 3555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3543,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3543,
											"end": 3567,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3543,
											"end": 3567,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3543,
											"end": 3567,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3543,
											"end": 3567,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3543,
											"end": 3567,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3543,
											"end": 3567,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3543,
											"end": 3578,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3543,
											"end": 3578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3543,
											"end": 3578,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3578,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3601,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 3601,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3588,
											"end": 3614,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3614,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3588,
											"end": 3614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3614,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3614,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3614,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3614,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3614,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3588,
											"end": 3614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3588,
											"end": 3614,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3588,
											"end": 3626,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3630,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3645,
											"end": 3687,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "14EED693E6D30152612EE94C12DF593A490178621D3730E516B012E064EEEF8F"
										},
										{
											"begin": 3680,
											"end": 3686,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3687,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 3645,
											"end": 3687,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1833,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1799,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1781,
											"end": 1799,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1662,
											"end": 1839,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3687,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 3645,
											"end": 3687,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3687,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3687,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3687,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3687,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3687,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3694,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3694,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 3694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1120,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1105,
											"end": 1120,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1105,
											"end": 1120,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1101,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1120,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1083,
											"end": 1169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 1083,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5803,
											"end": 5804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5793,
											"end": 5800,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5793,
											"end": 5804,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5785,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 5785,
											"end": 5805,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5785,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5785,
											"end": 5805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5785,
											"end": 5805,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5785,
											"end": 5805,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 5785,
											"end": 5805,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5816,
											"end": 5836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5816,
											"end": 5846,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5705,
											"end": 5853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5549,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5101,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5186,
											"end": 5193,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5213,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 5233,
											"end": 5246,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5248,
											"end": 5256,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5213,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5257,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 5213,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5205,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 5205,
											"end": 5258,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5205,
											"end": 5258,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5258,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5205,
											"end": 5258,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5205,
											"end": 5258,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 5205,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5289,
											"end": 5317,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5289,
											"end": 5317,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5289,
											"end": 5317,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5289,
											"end": 5317,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5289,
											"end": 5317,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5289,
											"end": 5317,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5289,
											"end": 5302,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 5289,
											"end": 5317,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5289,
											"end": 5317,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5289,
											"end": 5317,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5289,
											"end": 5317,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5289,
											"end": 5317,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5289,
											"end": 5317,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5289,
											"end": 5317,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5289,
											"end": 5317,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5289,
											"end": 5328,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5289,
											"end": 5328,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5398,
											"end": 5452,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5398,
											"end": 5452,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5398,
											"end": 5452,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5398,
											"end": 5452,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5398,
											"end": 5452,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5366,
											"end": 5388,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5366,
											"end": 5388,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5366,
											"end": 5388,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5366,
											"end": 5388,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5366,
											"end": 5388,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5366,
											"end": 5378,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 5366,
											"end": 5388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5366,
											"end": 5388,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5366,
											"end": 5388,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5366,
											"end": 5388,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5366,
											"end": 5388,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5366,
											"end": 5395,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5289,
											"end": 5328,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5289,
											"end": 5328,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5366,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 5366,
											"end": 5452,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5366,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 5366,
											"end": 5452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5366,
											"end": 5452,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 5366,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5452,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5462,
											"end": 5481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 5504,
											"end": 5514,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5452,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5484,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 5484,
											"end": 5514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5484,
											"end": 5514,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 5484,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5462,
											"end": 5514,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5101,
											"end": 5549,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 5101,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5549,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5549,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5549,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5549,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4812,
											"end": 5095,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4812,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4926,
											"end": 4954,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4926,
											"end": 4954,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4902,
											"end": 4906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4926,
											"end": 4954,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4926,
											"end": 4954,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4926,
											"end": 4954,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4926,
											"end": 4939,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 4926,
											"end": 4954,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4926,
											"end": 4954,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4926,
											"end": 4954,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4926,
											"end": 4954,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4926,
											"end": 4954,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4926,
											"end": 4965,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4926,
											"end": 4965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4926,
											"end": 4965,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4926,
											"end": 4965,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4926,
											"end": 4965,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4918,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 4918,
											"end": 4966,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4918,
											"end": 4966,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4918,
											"end": 4966,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4918,
											"end": 4966,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4918,
											"end": 4966,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 4918,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5046,
											"end": 5074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5074,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5046,
											"end": 5074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5059,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 5046,
											"end": 5074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5046,
											"end": 5074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5046,
											"end": 5074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5074,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5074,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5088,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5046,
											"end": 5088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5088,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5088,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 5006,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 5006,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 5006,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 5006,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 5006,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 4996,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 4984,
											"end": 5006,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 5006,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 5006,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 5006,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 5006,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 5018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 5018,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 5018,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 5018,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 4984,
											"end": 5041,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4984,
											"end": 5041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 5041,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 4984,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4983,
											"end": 5088,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4983,
											"end": 5088,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4983,
											"end": 5088,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4812,
											"end": 5095,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4812,
											"end": 5095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7311,
											"end": 7332,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7368,
											"end": 7370,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7341,
											"end": 7371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7407,
											"end": 7440,
											"name": "PUSH",
											"source": 6,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7387,
											"end": 7405,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7387,
											"end": 7405,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7387,
											"end": 7405,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7441,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7458,
											"end": 7476,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7458,
											"end": 7476,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 7127,
											"end": 7482,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 599,
											"end": 772,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 599,
											"end": 772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 667,
											"end": 687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 667,
											"end": 687,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 716,
											"end": 747,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 716,
											"end": 747,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 706,
											"end": 748,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 706,
											"end": 748,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 696,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 696,
											"end": 766,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 762,
											"end": 763,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 760,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 752,
											"end": 764,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 696,
											"end": 766,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 696,
											"end": 766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 599,
											"end": 772,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 599,
											"end": 772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 599,
											"end": 772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 599,
											"end": 772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 777,
											"end": 1037,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 777,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 845,
											"end": 851,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 859,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 906,
											"end": 908,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 903,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 885,
											"end": 892,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 881,
											"end": 904,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 877,
											"end": 909,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 874,
											"end": 926,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 874,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 874,
											"end": 926,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 922,
											"end": 923,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 912,
											"end": 924,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 874,
											"end": 926,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 874,
											"end": 926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 945,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 964,
											"end": 973,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 945,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 945,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 945,
											"end": 974,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 945,
											"end": 974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 935,
											"end": 974,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 935,
											"end": 974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 1027,
											"end": 1029,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1025,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 993,
											"end": 1031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1031,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 993,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 777,
											"end": 1037,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 777,
											"end": 1037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 777,
											"end": 1037,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 777,
											"end": 1037,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 777,
											"end": 1037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 777,
											"end": 1037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1657,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1042,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1189,
											"end": 1191,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1186,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1164,
											"end": 1187,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1209,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1157,
											"end": 1209,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1205,
											"end": 1206,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1209,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1157,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1232,
											"end": 1255,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1315,
											"end": 1317,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1335,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1301,
											"end": 1335,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1332,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1329,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1321,
											"end": 1333,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1335,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1301,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1369,
											"end": 1375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1354,
											"end": 1376,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1376,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 1411,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1403,
											"end": 1405,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1399,
											"end": 1412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1395,
											"end": 1422,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1385,
											"end": 1440,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1437,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1434,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1438,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1385,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1478,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1479,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1502,
											"end": 1504,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1505,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1522,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1488,
											"end": 1522,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1519,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1516,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1508,
											"end": 1520,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1522,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1488,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1578,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1566,
											"end": 1568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1556,
											"end": 1562,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1554,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1549,
											"end": 1563,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1545,
											"end": 1547,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1564,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1537,
											"end": 1569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1579,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1596,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1531,
											"end": 1596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1593,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1582,
											"end": 1594,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1596,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1531,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1625,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1626,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1626,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1626,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1626,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1651,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1042,
											"end": 1657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1657,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1042,
											"end": 1657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 2098,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1844,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1926,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1975,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1961,
											"end": 1970,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 1959,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 1971,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1944,
											"end": 1976,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 1993,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 1941,
											"end": 1993,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 1990,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 1987,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 1991,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 1993,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 1941,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2031,
											"end": 2040,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2012,
											"end": 2041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2041,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2012,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2090,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2092,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2092,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1844,
											"end": 2098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2340,
											"end": 2526,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2340,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2454,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2440,
											"end": 2449,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2438,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2450,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2455,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2472,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2420,
											"end": 2472,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2468,
											"end": 2469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2472,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2420,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2491,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2510,
											"end": 2519,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2491,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2491,
											"end": 2520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2491,
											"end": 2520,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2491,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2520,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2340,
											"end": 2526,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2340,
											"end": 2526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3009,
											"end": 3417,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3009,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3211,
											"end": 3213,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3252,
											"name": "PUSH",
											"source": 6,
											"value": "2C"
										},
										{
											"begin": 3230,
											"end": 3248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3248,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3253,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3289,
											"end": 3323,
											"name": "PUSH",
											"source": 6,
											"value": "4F6E6C79206D756C746953696720616464726573732063616E2063616C6C2074"
										},
										{
											"begin": 3284,
											"end": 3286,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3269,
											"end": 3287,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3269,
											"end": 3287,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3262,
											"end": 3324,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3434B990333AB731BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3375,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3407,
											"end": 3410,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3392,
											"end": 3411,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3009,
											"end": 3417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4163,
											"end": 4440,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4163,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4236,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4283,
											"end": 4285,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4271,
											"end": 4280,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4269,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4281,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4254,
											"end": 4286,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4251,
											"end": 4303,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4251,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 4251,
											"end": 4303,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4300,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4301,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4251,
											"end": 4303,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 4251,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4331,
											"end": 4340,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4325,
											"end": 4341,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4370,
											"end": 4391,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4363,
											"end": 4368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4392,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 4350,
											"end": 4410,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4406,
											"end": 4407,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4403,
											"end": 4404,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4408,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4916,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 4789,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4860,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 4845,
											"end": 4848,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4841,
											"end": 4861,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4831,
											"end": 4862,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4881,
											"end": 4885,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4878,
											"end": 4879,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4871,
											"end": 4886,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4905,
											"end": 4909,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4902,
											"end": 4903,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4895,
											"end": 4910,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4921,
											"end": 5046,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4921,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 4995,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 4995,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 4995,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5017,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5017,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5017,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5040,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5004,
											"end": 5040,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5020,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5020,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 5020,
											"end": 5038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5431,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 5304,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5365,
											"end": 5375,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 5360,
											"end": 5363,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 5354,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5377,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5396,
											"end": 5400,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 5393,
											"end": 5394,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5386,
											"end": 5401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5420,
											"end": 5424,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5410,
											"end": 5425,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5715,
											"end": 5899,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5715,
											"end": 5899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5785,
											"end": 5791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5838,
											"end": 5840,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5826,
											"end": 5835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5824,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 5836,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5809,
											"end": 5841,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5806,
											"end": 5858,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5806,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 5806,
											"end": 5858,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 5855,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5851,
											"end": 5852,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5844,
											"end": 5856,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5806,
											"end": 5858,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 5806,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5877,
											"end": 5893,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5877,
											"end": 5893,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5715,
											"end": 5899,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5715,
											"end": 5899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6599,
											"end": 6727,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 6599,
											"end": 6727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6675,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6698,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6698,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6698,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6701,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 6701,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 6701,
											"end": 6719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6949,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 6732,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6772,
											"end": 6773,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6798,
											"end": 6799,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6788,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 6788,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6852,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 6837,
											"end": 6840,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6833,
											"end": 6853,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6830,
											"end": 6831,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6823,
											"end": 6854,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6877,
											"end": 6881,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 6874,
											"end": 6875,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6867,
											"end": 6882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6905,
											"end": 6909,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6902,
											"end": 6903,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6895,
											"end": 6910,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6788,
											"end": 6920,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 6788,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6934,
											"end": 6943,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6934,
											"end": 6943,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6954,
											"end": 7122,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6954,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7036,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7036,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7058,
											"end": 7067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7058,
											"end": 7067,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7075,
											"end": 7090,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7075,
											"end": 7090,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7075,
											"end": 7090,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7091,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7055,
											"end": 7092,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7045,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 7045,
											"end": 7116,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7096,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 7096,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 7096,
											"end": 7114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"DegeneratorStaking.sol",
								"IFairLaunchFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addressWithdrewERC20Reward(address,address)": "609c878a",
							"degeneratorStakers()": "a163beea",
							"degeneratorStakingPool()": "ad5a402b",
							"erc20Supplies(address)": "caf10b57",
							"factory()": "c45a0155",
							"getTokenEligibility(address,address)": "acde6597",
							"getTokenReward(address,address)": "a164959d",
							"minimumStakeAmount()": "6b036f45",
							"multiSigAddress()": "1516def7",
							"registerERC20Supply(address,uint256)": "8167ee72",
							"rewardBlackoutPeriod()": "9f8932f4",
							"setMinimumStakeAmount(uint256)": "0d29fcd4",
							"setRewardBlackoutPeriod(uint256)": "9b29d215",
							"stakeDegnerator(uint256)": "41fee557",
							"stakingOpen()": "38760298",
							"tokenAddress()": "9d76ea58",
							"withdrawDegenerator()": "95adb5ad",
							"withdrawRewards(address[])": "62d76d06"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_multiSigAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minimumStakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardBlackoutPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockStaked\",\"type\":\"uint256\"}],\"name\":\"degeneratorStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"degeneratorWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressWithdrewERC20Reward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"degeneratorStakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"degeneratorStakingPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"erc20Supplies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockSupplied\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingPoolSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"degeneratorPoolSizeAtTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"registered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IFairLaunchFactoryV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getTokenEligibility\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getTokenReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multiSigAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolSupply\",\"type\":\"uint256\"}],\"name\":\"registerERC20Supply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardBlackoutPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMinimumStakeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_length\",\"type\":\"uint256\"}],\"name\":\"setRewardBlackoutPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakeDegnerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawDegenerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokenAddresses\",\"type\":\"address[]\"}],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DegeneratorStaking.sol\":\"DegeneratorStaking\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"DegeneratorStaking.sol\":{\"keccak256\":\"0x0c8fed6b84e2c39c1963fc9bffbc31aecf2b596bf75c9ca0f055f13ef50325d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://806d1205e6cb1ab67222c0926d2550cff3313429f56ee5d4d31d0cd5fdc0a5f2\",\"dweb:/ipfs/QmS7vK2kyXiQLCiynAHM7KsfinqyLjzWvzW1NjJkK1KtMY\"]},\"IFairLaunchFactory.sol\":{\"keccak256\":\"0xaa6526fcf7fbe840528469d9c59a4b48db3338f88c0a23310bcd993ef911970c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db0e44973647b74fc0d55f183673dca975407230d7029e7ddb26d1b20111877d\",\"dweb:/ipfs/Qmd44sHN2LibRGUzAmtL4WrnE2bFhpyEge6BJ4SqBptthH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "DegeneratorStaking.sol:DegeneratorStaking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 333,
								"contract": "DegeneratorStaking.sol:DegeneratorStaking",
								"label": "multiSigAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 335,
								"contract": "DegeneratorStaking.sol:DegeneratorStaking",
								"label": "tokenAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 337,
								"contract": "DegeneratorStaking.sol:DegeneratorStaking",
								"label": "minimumStakeAmount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 339,
								"contract": "DegeneratorStaking.sol:DegeneratorStaking",
								"label": "rewardBlackoutPeriod",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 342,
								"contract": "DegeneratorStaking.sol:DegeneratorStaking",
								"label": "factory",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IFairLaunchFactoryV1)1073"
							},
							{
								"astId": 344,
								"contract": "DegeneratorStaking.sol:DegeneratorStaking",
								"label": "degeneratorStakingPool",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 346,
								"contract": "DegeneratorStaking.sol:DegeneratorStaking",
								"label": "degeneratorStakers",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 348,
								"contract": "DegeneratorStaking.sol:DegeneratorStaking",
								"label": "stakingOpen",
								"offset": 0,
								"slot": "8",
								"type": "t_bool"
							},
							{
								"astId": 411,
								"contract": "DegeneratorStaking.sol:DegeneratorStaking",
								"label": "addressStake",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_struct(Stake)395_storage)"
							},
							{
								"astId": 416,
								"contract": "DegeneratorStaking.sol:DegeneratorStaking",
								"label": "erc20Supplies",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_struct(ERC20Supply)406_storage)"
							},
							{
								"astId": 422,
								"contract": "DegeneratorStaking.sol:DegeneratorStaking",
								"label": "addressWithdrewERC20Reward",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IFairLaunchFactoryV1)1073": {
								"encoding": "inplace",
								"label": "contract IFairLaunchFactoryV1",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_struct(ERC20Supply)406_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DegeneratorStaking.ERC20Supply)",
								"numberOfBytes": "32",
								"value": "t_struct(ERC20Supply)406_storage"
							},
							"t_mapping(t_address,t_struct(Stake)395_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DegeneratorStaking.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)395_storage"
							},
							"t_struct(ERC20Supply)406_storage": {
								"encoding": "inplace",
								"label": "struct DegeneratorStaking.ERC20Supply",
								"members": [
									{
										"astId": 397,
										"contract": "DegeneratorStaking.sol:DegeneratorStaking",
										"label": "poolSupply",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 399,
										"contract": "DegeneratorStaking.sol:DegeneratorStaking",
										"label": "blockSupplied",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 401,
										"contract": "DegeneratorStaking.sol:DegeneratorStaking",
										"label": "remainingPoolSupply",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 403,
										"contract": "DegeneratorStaking.sol:DegeneratorStaking",
										"label": "degeneratorPoolSizeAtTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 405,
										"contract": "DegeneratorStaking.sol:DegeneratorStaking",
										"label": "registered",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(Stake)395_storage": {
								"encoding": "inplace",
								"label": "struct DegeneratorStaking.Stake",
								"members": [
									{
										"astId": 388,
										"contract": "DegeneratorStaking.sol:DegeneratorStaking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 390,
										"contract": "DegeneratorStaking.sol:DegeneratorStaking",
										"label": "blockStaked",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 392,
										"contract": "DegeneratorStaking.sol:DegeneratorStaking",
										"label": "withdrawn",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 394,
										"contract": "DegeneratorStaking.sol:DegeneratorStaking",
										"label": "activeDeposit",
										"offset": 1,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IFairLaunchFactory.sol": {
				"IFairLaunchFactoryV1": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBaseFee",
									"type": "uint256"
								}
							],
							"name": "FactoryBaseFeeSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "factoryOpen",
									"type": "bool"
								}
							],
							"name": "FactoryClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newFee",
									"type": "uint256"
								}
							],
							"name": "FactoryFeeSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"name": "FactoryTokenRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "LaunchpaddAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "launchpadNumber",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "hardcap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "softcap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "founderAddres",
									"type": "address"
								}
							],
							"name": "LaunchPadGenerated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newStakingContract",
									"type": "address"
								}
							],
							"name": "StakingContractSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "withdrawSender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "withdrawalAmount",
									"type": "uint256"
								}
							],
							"name": "multiSigWithdrawal",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "addressIsLaunchpad",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_factoryOpen",
									"type": "bool"
								}
							],
							"name": "closeFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_totalSupply",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_presaleLaunchpad",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_presaleHardcap",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_presaleSoftcap",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_presaleLengthBlocks",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_presaleMaxContribution",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_presaleMinContribution",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_founderSupplyAllocation",
									"type": "uint256"
								}
							],
							"name": "createFairLaunchpad",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factoryBaseFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factoryFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factoryOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factoryToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getTokenStakingContractAllocation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isAddressFactoryToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isAddressLaunchpad",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isFactoryToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "launchpadsGenerated",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "multiSigAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_stakingContractAllocation",
									"type": "uint256"
								}
							],
							"name": "registerFactoryToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newFee",
									"type": "uint256"
								}
							],
							"name": "setFactoryBaseFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newFee",
									"type": "uint256"
								}
							],
							"name": "setFactoryFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newStakingContract",
									"type": "address"
								}
							],
							"name": "setStakingContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "stakingContractFactoryTokenAllocations",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawToMultiSig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addressIsLaunchpad(address)": "f06fafb6",
							"closeFactory(bool)": "82b3aa08",
							"createFairLaunchpad(string,string,uint256,bool,uint256,uint256,uint256,uint256,uint256,uint256)": "f1a74b55",
							"factoryBaseFee()": "18b7d5ed",
							"factoryFee()": "6286116a",
							"factoryOpen()": "d2c3bb3c",
							"factoryToken()": "97f6c25d",
							"getTokenStakingContractAllocation(address)": "22022de6",
							"isAddressFactoryToken(address)": "1d16aeae",
							"isAddressLaunchpad(address)": "53cbd07e",
							"isFactoryToken(address)": "a4b7914e",
							"launchpadsGenerated()": "e1ee981a",
							"multiSigAddress()": "1516def7",
							"registerFactoryToken(address,uint256)": "96b37277",
							"setFactoryBaseFee(uint256)": "3ee014a7",
							"setFactoryFee(uint256)": "03545f6a",
							"setStakingContract(address)": "9dd373b9",
							"stakingContract()": "ee99205c",
							"stakingContractFactoryTokenAllocations(address)": "d8eba892",
							"withdrawToMultiSig()": "25cd6921"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBaseFee\",\"type\":\"uint256\"}],\"name\":\"FactoryBaseFeeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"factoryOpen\",\"type\":\"bool\"}],\"name\":\"FactoryClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"FactoryFeeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"FactoryTokenRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"LaunchpaddAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"launchpadNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"hardcap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"softcap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"founderAddres\",\"type\":\"address\"}],\"name\":\"LaunchPadGenerated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newStakingContract\",\"type\":\"address\"}],\"name\":\"StakingContractSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawSender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"}],\"name\":\"multiSigWithdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addressIsLaunchpad\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_factoryOpen\",\"type\":\"bool\"}],\"name\":\"closeFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_presaleLaunchpad\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_presaleHardcap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_presaleSoftcap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_presaleLengthBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_presaleMaxContribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_presaleMinContribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_founderSupplyAllocation\",\"type\":\"uint256\"}],\"name\":\"createFairLaunchpad\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getTokenStakingContractAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAddressFactoryToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAddressLaunchpad\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isFactoryToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchpadsGenerated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multiSigAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stakingContractAllocation\",\"type\":\"uint256\"}],\"name\":\"registerFactoryToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"setFactoryBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"setFactoryFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newStakingContract\",\"type\":\"address\"}],\"name\":\"setStakingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"stakingContractFactoryTokenAllocations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawToMultiSig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IFairLaunchFactory.sol\":\"IFairLaunchFactoryV1\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IFairLaunchFactory.sol\":{\"keccak256\":\"0xaa6526fcf7fbe840528469d9c59a4b48db3338f88c0a23310bcd993ef911970c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db0e44973647b74fc0d55f183673dca975407230d7029e7ddb26d1b20111877d\",\"dweb:/ipfs/Qmd44sHN2LibRGUzAmtL4WrnE2bFhpyEge6BJ4SqBptthH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 321,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 320,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								320
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							290
						]
					},
					"id": 291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 290,
							"linearizedBaseContracts": [
								290
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 224,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 233,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 290,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 290,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 290,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 290,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 290,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 290,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 291,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								224,
								233
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 292,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 293,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 298,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 297,
												"id": 300,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 320,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 307,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 306,
												"id": 309,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 320,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 315,
												"id": 317,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 320,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 321,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"DegeneratorStaking.sol": {
				"ast": {
					"absolutePath": "DegeneratorStaking.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"DegeneratorStaking": [
							902
						],
						"IERC20": [
							290
						],
						"IFairLaunchFactoryV1": [
							1073
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						]
					},
					"id": 903,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 903,
							"sourceUnit": 321,
							"src": "102:51:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 903,
							"sourceUnit": 148,
							"src": "154:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 325,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 903,
							"sourceUnit": 291,
							"src": "226:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 903,
							"sourceUnit": 213,
							"src": "325:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IFairLaunchFactory.sol",
							"file": "./IFairLaunchFactory.sol",
							"id": 327,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 903,
							"sourceUnit": 1074,
							"src": "388:34:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 328,
										"name": "Context",
										"nameLocations": [
											"455:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "455:7:4"
									},
									"id": 329,
									"nodeType": "InheritanceSpecifier",
									"src": "455:7:4"
								},
								{
									"baseName": {
										"id": 330,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"464:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "464:15:4"
									},
									"id": 331,
									"nodeType": "InheritanceSpecifier",
									"src": "464:15:4"
								}
							],
							"canonicalName": "DegeneratorStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 902,
							"linearizedBaseContracts": [
								902,
								212,
								320
							],
							"name": "DegeneratorStaking",
							"nameLocation": "433:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "1516def7",
									"id": 333,
									"mutability": "mutable",
									"name": "multiSigAddress",
									"nameLocation": "501:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 902,
									"src": "486:30:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 332,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "486:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9d76ea58",
									"id": 335,
									"mutability": "mutable",
									"name": "tokenAddress",
									"nameLocation": "537:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 902,
									"src": "522:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 334,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "522:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6b036f45",
									"id": 337,
									"mutability": "mutable",
									"name": "minimumStakeAmount",
									"nameLocation": "570:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 902,
									"src": "555:33:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 336,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "555:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9f8932f4",
									"id": 339,
									"mutability": "mutable",
									"name": "rewardBlackoutPeriod",
									"nameLocation": "609:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 902,
									"src": "594:35:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 338,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "594:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c45a0155",
									"id": 342,
									"mutability": "mutable",
									"name": "factory",
									"nameLocation": "663:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 902,
									"src": "635:35:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IFairLaunchFactoryV1_$1073",
										"typeString": "contract IFairLaunchFactoryV1"
									},
									"typeName": {
										"id": 341,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 340,
											"name": "IFairLaunchFactoryV1",
											"nameLocations": [
												"635:20:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1073,
											"src": "635:20:4"
										},
										"referencedDeclaration": 1073,
										"src": "635:20:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IFairLaunchFactoryV1_$1073",
											"typeString": "contract IFairLaunchFactoryV1"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ad5a402b",
									"id": 344,
									"mutability": "mutable",
									"name": "degeneratorStakingPool",
									"nameLocation": "692:22:4",
									"nodeType": "VariableDeclaration",
									"scope": 902,
									"src": "677:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 343,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "677:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a163beea",
									"id": 346,
									"mutability": "mutable",
									"name": "degeneratorStakers",
									"nameLocation": "735:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 902,
									"src": "720:33:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 345,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "720:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "38760298",
									"id": 348,
									"mutability": "mutable",
									"name": "stakingOpen",
									"nameLocation": "772:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 902,
									"src": "760:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 347,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "760:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "816:75:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 351,
																	"name": "addressStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "834:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$395_storage_$",
																		"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																	}
																},
																"id": 354,
																"indexExpression": {
																	"expression": {
																		"id": 352,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "847:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "851:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "847:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "834:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$395_storage",
																	"typeString": "struct DegeneratorStaking.Stake storage ref"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "859:13:4",
															"memberName": "activeDeposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 394,
															"src": "834:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "826:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "826:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "826:47:4"
											},
											{
												"id": 358,
												"nodeType": "PlaceholderStatement",
												"src": "883:1:4"
											}
										]
									},
									"id": 360,
									"name": "onlyStaker",
									"nameLocation": "803:10:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "813:2:4"
									},
									"src": "794:97:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "922:121:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 365,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "967:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "971:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "967:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 363,
																		"name": "factory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "940:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IFairLaunchFactoryV1_$1073",
																			"typeString": "contract IFairLaunchFactoryV1"
																		}
																	},
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "948:18:4",
																	"memberName": "isAddressLaunchpad",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1058,
																	"src": "940:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view external returns (bool)"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "940:38:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "982:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "940:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 362,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "932:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "932:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "932:55:4"
											},
											{
												"id": 372,
												"nodeType": "PlaceholderStatement",
												"src": "997:1:4"
											}
										]
									},
									"id": 374,
									"name": "launchpadOnly",
									"nameLocation": "906:13:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "919:2:4"
									},
									"src": "897:146:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "1073:152:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 377,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1091:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1095:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1091:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 379,
																"name": "multiSigAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "1105:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1091:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206d756c746953696720616464726573732063616e2063616c6c20746869732066756e6374696f6e",
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1122:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a89e8792d12ab2935107c47df3d6e37408b35c7947605d9909710024cead9a50",
																"typeString": "literal_string \"Only multiSig address can call this function\""
															},
															"value": "Only multiSig address can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a89e8792d12ab2935107c47df3d6e37408b35c7947605d9909710024cead9a50",
																"typeString": "literal_string \"Only multiSig address can call this function\""
															}
														],
														"id": 376,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1083:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1083:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "1083:86:4"
											},
											{
												"id": 384,
												"nodeType": "PlaceholderStatement",
												"src": "1179:1:4"
											}
										]
									},
									"id": 386,
									"name": "multiSigOnly",
									"nameLocation": "1058:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1070:2:4"
									},
									"src": "1049:176:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "DegeneratorStaking.Stake",
									"id": 395,
									"members": [
										{
											"constant": false,
											"id": 388,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1262:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 395,
											"src": "1254:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 387,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1254:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 390,
											"mutability": "mutable",
											"name": "blockStaked",
											"nameLocation": "1286:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 395,
											"src": "1278:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 389,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1278:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 392,
											"mutability": "mutable",
											"name": "withdrawn",
											"nameLocation": "1312:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 395,
											"src": "1307:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 391,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1307:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 394,
											"mutability": "mutable",
											"name": "activeDeposit",
											"nameLocation": "1336:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 395,
											"src": "1331:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 393,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1331:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "1238:5:4",
									"nodeType": "StructDefinition",
									"scope": 902,
									"src": "1231:125:4",
									"visibility": "public"
								},
								{
									"canonicalName": "DegeneratorStaking.ERC20Supply",
									"id": 406,
									"members": [
										{
											"constant": false,
											"id": 397,
											"mutability": "mutable",
											"name": "poolSupply",
											"nameLocation": "1399:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 406,
											"src": "1391:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 396,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1391:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 399,
											"mutability": "mutable",
											"name": "blockSupplied",
											"nameLocation": "1427:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 406,
											"src": "1419:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 398,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1419:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 401,
											"mutability": "mutable",
											"name": "remainingPoolSupply",
											"nameLocation": "1458:19:4",
											"nodeType": "VariableDeclaration",
											"scope": 406,
											"src": "1450:27:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 400,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1450:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 403,
											"mutability": "mutable",
											"name": "degeneratorPoolSizeAtTime",
											"nameLocation": "1495:25:4",
											"nodeType": "VariableDeclaration",
											"scope": 406,
											"src": "1487:33:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 402,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1487:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 405,
											"mutability": "mutable",
											"name": "registered",
											"nameLocation": "1536:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 406,
											"src": "1531:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 404,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1531:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Supply",
									"nameLocation": "1369:11:4",
									"nodeType": "StructDefinition",
									"scope": 902,
									"src": "1362:191:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 411,
									"mutability": "mutable",
									"name": "addressStake",
									"nameLocation": "1593:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 902,
									"src": "1559:46:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$395_storage_$",
										"typeString": "mapping(address => struct DegeneratorStaking.Stake)"
									},
									"typeName": {
										"id": 410,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 407,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1567:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1559:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$395_storage_$",
											"typeString": "mapping(address => struct DegeneratorStaking.Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 409,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 408,
												"name": "Stake",
												"nameLocations": [
													"1578:5:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 395,
												"src": "1578:5:4"
											},
											"referencedDeclaration": 395,
											"src": "1578:5:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$395_storage_ptr",
												"typeString": "struct DegeneratorStaking.Stake"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "caf10b57",
									"id": 416,
									"mutability": "mutable",
									"name": "erc20Supplies",
									"nameLocation": "1650:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 902,
									"src": "1611:52:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$406_storage_$",
										"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply)"
									},
									"typeName": {
										"id": 415,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 412,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1619:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1611:31:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$406_storage_$",
											"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 414,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 413,
												"name": "ERC20Supply",
												"nameLocations": [
													"1630:11:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 406,
												"src": "1630:11:4"
											},
											"referencedDeclaration": 406,
											"src": "1630:11:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ERC20Supply_$406_storage_ptr",
												"typeString": "struct DegeneratorStaking.ERC20Supply"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "609c878a",
									"id": 422,
									"mutability": "mutable",
									"name": "addressWithdrewERC20Reward",
									"nameLocation": "1721:26:4",
									"nodeType": "VariableDeclaration",
									"scope": 902,
									"src": "1669:78:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 421,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 417,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1677:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1669:44:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 420,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 418,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1696:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1688:24:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 419,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1707:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "0ae860169ef88b6e5a084a54675af932ac7be23de4abd34a1d99a5a8402a17cc",
									"id": 430,
									"name": "degeneratorStaked",
									"nameLocation": "1760:17:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1794:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "1778:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1778:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1810:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "1802:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockStaked",
												"nameLocation": "1826:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "1818:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1777:61:4"
									},
									"src": "1754:85:4"
								},
								{
									"anonymous": false,
									"eventSelector": "14eed693e6d30152612ee94c12df593a490178621d3730e516b012e064eeef8f",
									"id": 436,
									"name": "degeneratorWithdrawn",
									"nameLocation": "1850:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1887:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "1871:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1903:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "1895:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1895:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:40:4"
									},
									"src": "1844:67:4"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "2040:261:4",
										"statements": [
											{
												"expression": {
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 447,
														"name": "multiSigAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "2050:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 448,
														"name": "_multiSigAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "2068:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2050:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "2050:34:4"
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 451,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "2094:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 452,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "2109:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2094:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "2094:28:4"
											},
											{
												"expression": {
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 455,
														"name": "rewardBlackoutPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "2132:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 456,
														"name": "_rewardBlackoutPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "2155:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2132:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "2132:44:4"
											},
											{
												"expression": {
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 459,
														"name": "minimumStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2186:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 460,
														"name": "_minimumStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "2207:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2186:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "2186:40:4"
											},
											{
												"expression": {
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 463,
														"name": "degeneratorStakingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "2236:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2261:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2236:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "2236:26:4"
											},
											{
												"expression": {
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 467,
														"name": "degeneratorStakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "2272:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2293:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2272:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "2272:22:4"
											}
										]
									},
									"id": 472,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "_multiSigAddress",
												"nameLocation": "1938:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "1930:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "1965:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "1957:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1957:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "_minimumStakeAmount",
												"nameLocation": "1988:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "1980:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "_rewardBlackoutPeriod",
												"nameLocation": "2017:21:4",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "2009:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1928:111:4"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2040:0:4"
									},
									"scope": 902,
									"src": "1917:384:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "2369:584:4",
										"statements": [
											{
												"assignments": [
													481
												],
												"declarations": [
													{
														"constant": false,
														"id": 481,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "2386:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 553,
														"src": "2379:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 480,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 479,
																"name": "IERC20",
																"nameLocations": [
																	"2379:6:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 290,
																"src": "2379:6:4"
															},
															"referencedDeclaration": 290,
															"src": "2379:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 485,
												"initialValue": {
													"arguments": [
														{
															"id": 483,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "2401:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 482,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2394:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$290_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2394:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2379:35:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 487,
															"name": "stakingOpen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "2432:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 486,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2424:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2424:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "2424:20:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 491,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "2462:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 492,
																"name": "minimumStakeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "2472:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2462:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2492:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 490,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2454:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2454:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "2454:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 500,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "2564:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2564:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 504,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2586:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DegeneratorStaking_$902",
																				"typeString": "contract DegeneratorStaking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DegeneratorStaking_$902",
																				"typeString": "contract DegeneratorStaking"
																			}
																		],
																		"id": 503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2578:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 502,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2578:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2578:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 506,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 474,
																	"src": "2593:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 498,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "2545:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$290",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2551:12:4",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 289,
																"src": "2545:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2545:56:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2603:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2537:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2537:84:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "2537:84:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2639:41:4",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 512,
																		"name": "addressStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "2640:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$395_storage_$",
																			"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																		}
																	},
																	"id": 515,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 513,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "2653:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2653:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2640:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$395_storage",
																		"typeString": "struct DegeneratorStaking.Stake storage ref"
																	}
																},
																"id": 516,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2667:13:4",
																"memberName": "activeDeposit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 394,
																"src": "2640:40:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 511,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2631:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2631:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "2631:50:4"
											},
											{
												"expression": {
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 520,
																"name": "addressStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "2692:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$395_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																}
															},
															"id": 523,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 521,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "2705:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2705:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2692:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$395_storage",
																"typeString": "struct DegeneratorStaking.Stake storage ref"
															}
														},
														"id": 524,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2719:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 388,
														"src": "2692:33:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 525,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "2729:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "2692:44:4"
											},
											{
												"expression": {
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 528,
																"name": "addressStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "2746:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$395_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																}
															},
															"id": 531,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 529,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "2759:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2759:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2746:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$395_storage",
																"typeString": "struct DegeneratorStaking.Stake storage ref"
															}
														},
														"id": 532,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2773:11:4",
														"memberName": "blockStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 390,
														"src": "2746:38:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 533,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2787:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2793:6:4",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "2787:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2746:53:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "2746:53:4"
											},
											{
												"expression": {
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 537,
														"name": "degeneratorStakingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "2809:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 538,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "2835:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "2809:33:4"
											},
											{
												"expression": {
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 541,
														"name": "degeneratorStakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "2852:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2874:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2852:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "2852:23:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 546,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "2909:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2909:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 548,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "2923:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 549,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2932:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2938:6:4",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "2932:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 545,
														"name": "degeneratorStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "2891:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2891:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "EmitStatement",
												"src": "2886:59:4"
											}
										]
									},
									"functionSelector": "41fee557",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 477,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 476,
												"name": "nonReentrant",
												"nameLocations": [
													"2356:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "2356:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2356:12:4"
										}
									],
									"name": "stakeDegnerator",
									"nameLocation": "2316:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2340:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "2332:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:17:4"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2369:0:4"
									},
									"scope": 902,
									"src": "2307:646:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "3010:684:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 560,
																		"name": "addressStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "3028:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$395_storage_$",
																			"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																		}
																	},
																	"id": 563,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 561,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "3041:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3041:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3028:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$395_storage",
																		"typeString": "struct DegeneratorStaking.Stake storage ref"
																	}
																},
																"id": 564,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3055:6:4",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 388,
																"src": "3028:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3064:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3028:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207374616b6520666f756e64",
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3067:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															},
															"value": "No stake found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															}
														],
														"id": 559,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3020:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3020:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "3020:64:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3102:37:4",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 571,
																		"name": "addressStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "3103:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$395_storage_$",
																			"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																		}
																	},
																	"id": 574,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 572,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "3116:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3116:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3103:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$395_storage",
																		"typeString": "struct DegeneratorStaking.Stake storage ref"
																	}
																},
																"id": 575,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3130:9:4",
																"memberName": "withdrawn",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 392,
																"src": "3103:36:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b6520616c72656164792077697468647261776e",
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3141:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_644e8db99e7c305cbaf9ab7cf4dfbbf8e9d24808e86a7c505456e21dd10275ce",
																"typeString": "literal_string \"Stake already withdrawn\""
															},
															"value": "Stake already withdrawn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_644e8db99e7c305cbaf9ab7cf4dfbbf8e9d24808e86a7c505456e21dd10275ce",
																"typeString": "literal_string \"Stake already withdrawn\""
															}
														],
														"id": 570,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3094:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3094:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "3094:73:4"
											},
											{
												"assignments": [
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 582,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "3184:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 651,
														"src": "3177:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 581,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 580,
																"name": "IERC20",
																"nameLocations": [
																	"3177:6:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 290,
																"src": "3177:6:4"
															},
															"referencedDeclaration": 290,
															"src": "3177:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"initialValue": {
													"arguments": [
														{
															"id": 584,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "3199:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 583,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "3192:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$290_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3192:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3177:35:4"
											},
											{
												"assignments": [
													588
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3230:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 651,
														"src": "3222:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 587,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3222:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 594,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 589,
															"name": "addressStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "3239:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$395_storage_$",
																"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
															}
														},
														"id": 592,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 590,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "3252:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3252:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3239:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$395_storage",
															"typeString": "struct DegeneratorStaking.Stake storage ref"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3266:6:4",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 388,
													"src": "3239:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3222:50:4"
											},
											{
												"expression": {
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 595,
																"name": "addressStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "3282:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$395_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																}
															},
															"id": 598,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 596,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "3295:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3295:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3282:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$395_storage",
																"typeString": "struct DegeneratorStaking.Stake storage ref"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3309:9:4",
														"memberName": "withdrawn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 392,
														"src": "3282:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3321:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3282:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "3282:43:4"
											},
											{
												"expression": {
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 603,
																"name": "addressStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "3335:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$395_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																}
															},
															"id": 606,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 604,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "3348:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3348:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3335:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$395_storage",
																"typeString": "struct DegeneratorStaking.Stake storage ref"
															}
														},
														"id": 607,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3362:13:4",
														"memberName": "activeDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 394,
														"src": "3335:40:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3378:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3335:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "3335:48:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 614,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "3417:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3417:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 616,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "3431:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 612,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "3402:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$290",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3408:8:4",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 257,
																"src": "3402:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3402:36:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3440:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 611,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3394:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "3394:64:4"
											},
											{
												"expression": {
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 621,
														"name": "degeneratorStakingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "3468:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 622,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "3494:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3468:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "3468:32:4"
											},
											{
												"expression": {
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 625,
														"name": "degeneratorStakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3510:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3532:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3510:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "3510:23:4"
											},
											{
												"expression": {
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 629,
																"name": "addressStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "3543:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$395_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																}
															},
															"id": 632,
															"indexExpression": {
																"expression": {
																	"id": 630,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3556:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3560:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3556:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3543:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$395_storage",
																"typeString": "struct DegeneratorStaking.Stake storage ref"
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3568:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 388,
														"src": "3543:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3577:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3543:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "3543:35:4"
											},
											{
												"expression": {
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 637,
																"name": "addressStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "3588:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$395_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																}
															},
															"id": 640,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 638,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "3601:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3601:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3588:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$395_storage",
																"typeString": "struct DegeneratorStaking.Stake storage ref"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3615:11:4",
														"memberName": "blockStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 390,
														"src": "3588:38:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3629:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3588:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "3588:42:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 646,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "3666:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3666:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "3680:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 645,
														"name": "degeneratorWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "3645:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3645:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "EmitStatement",
												"src": "3640:47:4"
											}
										]
									},
									"functionSelector": "95adb5ad",
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 557,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 556,
												"name": "nonReentrant",
												"nameLocations": [
													"2997:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "2997:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2997:12:4"
										}
									],
									"name": "withdrawDegenerator",
									"nameLocation": "2968:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2987:2:4"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3010:0:4"
									},
									"scope": 902,
									"src": "2959:735:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "3793:439:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 668,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3851:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_DegeneratorStaking_$902",
																					"typeString": "contract DegeneratorStaking"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_DegeneratorStaking_$902",
																					"typeString": "contract DegeneratorStaking"
																				}
																			],
																			"id": 667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3843:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 666,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3843:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3843:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 663,
																				"name": "_tokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 654,
																				"src": "3818:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 662,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 290,
																			"src": "3811:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$290_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3811:21:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$290",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3833:9:4",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 247,
																	"src": "3811:31:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:46:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 671,
																"name": "_poolSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "3861:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3811:61:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 661,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3803:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "3803:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3891:40:4",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 676,
																		"name": "erc20Supplies",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "3892:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$406_storage_$",
																			"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply storage ref)"
																		}
																	},
																	"id": 678,
																	"indexExpression": {
																		"id": 677,
																		"name": "_tokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 654,
																		"src": "3906:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3892:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Supply_$406_storage",
																		"typeString": "struct DegeneratorStaking.ERC20Supply storage ref"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3921:10:4",
																"memberName": "registered",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 405,
																"src": "3892:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 675,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3883:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3883:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "3883:49:4"
											},
											{
												"expression": {
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 683,
																"name": "erc20Supplies",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3942:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$406_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply storage ref)"
																}
															},
															"id": 685,
															"indexExpression": {
																"id": 684,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "3956:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3942:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Supply_$406_storage",
																"typeString": "struct DegeneratorStaking.ERC20Supply storage ref"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3971:13:4",
														"memberName": "blockSupplied",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 399,
														"src": "3942:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 687,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3987:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3993:6:4",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "3987:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3942:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "3942:57:4"
											},
											{
												"expression": {
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 691,
																"name": "erc20Supplies",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "4009:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$406_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply storage ref)"
																}
															},
															"id": 693,
															"indexExpression": {
																"id": 692,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "4023:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4009:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Supply_$406_storage",
																"typeString": "struct DegeneratorStaking.ERC20Supply storage ref"
															}
														},
														"id": 694,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4038:10:4",
														"memberName": "poolSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 397,
														"src": "4009:39:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 695,
														"name": "_poolSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "4051:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4009:53:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "4009:53:4"
											},
											{
												"expression": {
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 698,
																"name": "erc20Supplies",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "4073:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$406_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply storage ref)"
																}
															},
															"id": 700,
															"indexExpression": {
																"id": 699,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "4087:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4073:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Supply_$406_storage",
																"typeString": "struct DegeneratorStaking.ERC20Supply storage ref"
															}
														},
														"id": 701,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4102:19:4",
														"memberName": "remainingPoolSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 401,
														"src": "4073:48:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 702,
														"name": "_poolSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "4124:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4073:62:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "4073:62:4"
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 705,
																"name": "erc20Supplies",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "4146:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$406_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply storage ref)"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 706,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "4160:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4146:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Supply_$406_storage",
																"typeString": "struct DegeneratorStaking.ERC20Supply storage ref"
															}
														},
														"id": 708,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4175:25:4",
														"memberName": "degeneratorPoolSizeAtTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 403,
														"src": "4146:54:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "degeneratorStakingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "4203:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4146:79:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "4146:79:4"
											}
										]
									},
									"functionSelector": "8167ee72",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 659,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 658,
												"name": "nonReentrant",
												"nameLocations": [
													"3780:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "3780:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3780:12:4"
										}
									],
									"name": "registerERC20Supply",
									"nameLocation": "3709:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "3737:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "3729:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3729:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "_poolSupply",
												"nameLocation": "3760:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "3752:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3728:44:4"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:4"
									},
									"scope": 902,
									"src": "3700:532:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "4335:471:4",
										"statements": [
											{
												"body": {
													"id": 788,
													"nodeType": "Block",
													"src": "4398:402:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 736,
																					"name": "_tokenAddresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 716,
																					"src": "4440:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																						"typeString": "address[] calldata"
																					}
																				},
																				"id": 738,
																				"indexExpression": {
																					"id": 737,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 724,
																					"src": "4456:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4440:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"expression": {
																					"id": 739,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4460:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 740,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4464:6:4",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4460:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 735,
																			"name": "getTokenEligibility",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 821,
																			"src": "4420:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4420:51:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 734,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4412:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4412:60:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 743,
															"nodeType": "ExpressionStatement",
															"src": "4412:60:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "4494:59:4",
																		"subExpression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 745,
																					"name": "addressWithdrewERC20Reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 422,
																					"src": "4495:26:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																						"typeString": "mapping(address => mapping(address => bool))"
																					}
																				},
																				"id": 749,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 746,
																						"name": "_tokenAddresses",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 716,
																						"src": "4522:15:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																							"typeString": "address[] calldata"
																						}
																					},
																					"id": 748,
																					"indexExpression": {
																						"id": 747,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 724,
																						"src": "4538:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4522:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4495:46:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 752,
																			"indexExpression": {
																				"expression": {
																					"id": 750,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4542:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4546:6:4",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4542:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4495:58:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 744,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4486:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4486:68:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 755,
															"nodeType": "ExpressionStatement",
															"src": "4486:68:4"
														},
														{
															"assignments": [
																757
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 757,
																	"mutability": "mutable",
																	"name": "tokenReward",
																	"nameLocation": "4576:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 788,
																	"src": "4568:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 756,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4568:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 765,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 759,
																			"name": "_tokenAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 716,
																			"src": "4605:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 761,
																		"indexExpression": {
																			"id": 760,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 724,
																			"src": "4621:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4605:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 762,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4625:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4629:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4625:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 758,
																	"name": "getTokenReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "4590:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4590:46:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4568:68:4"
														},
														{
															"expression": {
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 766,
																			"name": "addressWithdrewERC20Reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 422,
																			"src": "4650:26:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 772,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 767,
																				"name": "_tokenAddresses",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 716,
																				"src": "4677:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																					"typeString": "address[] calldata"
																				}
																			},
																			"id": 769,
																			"indexExpression": {
																				"id": 768,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 724,
																				"src": "4693:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4677:18:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4650:46:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 773,
																	"indexExpression": {
																		"expression": {
																			"id": 770,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4697:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4701:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4697:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4650:58:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4711:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "4650:65:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 776,
															"nodeType": "ExpressionStatement",
															"src": "4650:65:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 783,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4765:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4769:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4765:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 785,
																		"name": "tokenReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 757,
																		"src": "4777:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 778,
																					"name": "_tokenAddresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 716,
																					"src": "4736:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																						"typeString": "address[] calldata"
																					}
																				},
																				"id": 780,
																				"indexExpression": {
																					"id": 779,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 724,
																					"src": "4752:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4736:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 777,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 290,
																			"src": "4729:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$290_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4729:26:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$290",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4756:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 257,
																	"src": "4729:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4729:60:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 787,
															"nodeType": "ExpressionStatement",
															"src": "4729:60:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 727,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "4365:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 728,
															"name": "_tokenAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "4369:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4385:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4369:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4365:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 789,
												"initializationExpression": {
													"assignments": [
														724
													],
													"declarations": [
														{
															"constant": false,
															"id": 724,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4358:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 789,
															"src": "4350:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 723,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4350:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 726,
													"initialValue": {
														"hexValue": "30",
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4362:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4350:13:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4393:3:4",
														"subExpression": {
															"id": 731,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "4393:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 733,
													"nodeType": "ExpressionStatement",
													"src": "4393:3:4"
												},
												"nodeType": "ForStatement",
												"src": "4345:455:4"
											}
										]
									},
									"functionSelector": "62d76d06",
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 719,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 718,
												"name": "onlyStaker",
												"nameLocations": [
													"4311:10:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 360,
												"src": "4311:10:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4311:10:4"
										},
										{
											"id": 721,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 720,
												"name": "nonReentrant",
												"nameLocations": [
													"4322:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "4322:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4322:12:4"
										}
									],
									"name": "withdrawRewards",
									"nameLocation": "4252:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "_tokenAddresses",
												"nameLocation": "4287:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "4268:34:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 714,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4268:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 715,
													"nodeType": "ArrayTypeName",
													"src": "4268:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4267:36:4"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4335:0:4"
									},
									"scope": 902,
									"src": "4243:563:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "4908:187:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 801,
																	"name": "erc20Supplies",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "4926:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$406_storage_$",
																		"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply storage ref)"
																	}
																},
																"id": 803,
																"indexExpression": {
																	"id": 802,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "4940:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4926:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Supply_$406_storage",
																	"typeString": "struct DegeneratorStaking.ERC20Supply storage ref"
																}
															},
															"id": 804,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4955:10:4",
															"memberName": "registered",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 405,
															"src": "4926:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4918:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4918:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "4918:48:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 807,
																			"name": "addressStake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "4984:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$395_storage_$",
																				"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																			}
																		},
																		"id": 809,
																		"indexExpression": {
																			"id": 808,
																			"name": "_account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 795,
																			"src": "4997:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4984:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$395_storage",
																			"typeString": "struct DegeneratorStaking.Stake storage ref"
																		}
																	},
																	"id": 810,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5007:11:4",
																	"memberName": "blockStaked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 390,
																	"src": "4984:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 811,
																	"name": "rewardBlackoutPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "5021:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4984:57:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 813,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4983:59:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 814,
																"name": "erc20Supplies",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "5046:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$406_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply storage ref)"
																}
															},
															"id": 816,
															"indexExpression": {
																"id": 815,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "5060:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5046:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Supply_$406_storage",
																"typeString": "struct DegeneratorStaking.ERC20Supply storage ref"
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5075:13:4",
														"memberName": "blockSupplied",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 399,
														"src": "5046:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4983:105:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 799,
												"id": 819,
												"nodeType": "Return",
												"src": "4976:112:4"
											}
										]
									},
									"functionSelector": "acde6597",
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenEligibility",
									"nameLocation": "4821:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "4849:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "4841:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4841:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "4872:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "4864:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4840:41:4"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "4902:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 797,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4902:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4901:6:4"
									},
									"scope": 902,
									"src": "4812:283:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "5195:354:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 832,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "5233:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 833,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "5248:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 831,
																"name": "getTokenEligibility",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "5213:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5213:44:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 830,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5205:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5205:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "5205:53:4"
											},
											{
												"assignments": [
													838
												],
												"declarations": [
													{
														"constant": false,
														"id": 838,
														"mutability": "mutable",
														"name": "poolSupply",
														"nameLocation": "5276:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 864,
														"src": "5268:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 837,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5268:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 843,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 839,
															"name": "erc20Supplies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "5289:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$406_storage_$",
																"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply storage ref)"
															}
														},
														"id": 841,
														"indexExpression": {
															"id": 840,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "5303:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5289:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Supply_$406_storage",
															"typeString": "struct DegeneratorStaking.ERC20Supply storage ref"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5318:10:4",
													"memberName": "poolSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 397,
													"src": "5289:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5268:60:4"
											},
											{
												"assignments": [
													845
												],
												"declarations": [
													{
														"constant": false,
														"id": 845,
														"mutability": "mutable",
														"name": "poolPortionAtTime",
														"nameLocation": "5346:17:4",
														"nodeType": "VariableDeclaration",
														"scope": 864,
														"src": "5338:25:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 844,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5338:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 855,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 846,
																"name": "addressStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "5366:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$395_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.Stake storage ref)"
																}
															},
															"id": 848,
															"indexExpression": {
																"id": 847,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 825,
																"src": "5379:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5366:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$395_storage",
																"typeString": "struct DegeneratorStaking.Stake storage ref"
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5389:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 388,
														"src": "5366:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 850,
																"name": "erc20Supplies",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "5398:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ERC20Supply_$406_storage_$",
																	"typeString": "mapping(address => struct DegeneratorStaking.ERC20Supply storage ref)"
																}
															},
															"id": 852,
															"indexExpression": {
																"id": 851,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "5412:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5398:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Supply_$406_storage",
																"typeString": "struct DegeneratorStaking.ERC20Supply storage ref"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5427:25:4",
														"memberName": "degeneratorPoolSizeAtTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 403,
														"src": "5398:54:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5366:86:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5338:114:4"
											},
											{
												"assignments": [
													857
												],
												"declarations": [
													{
														"constant": false,
														"id": 857,
														"mutability": "mutable",
														"name": "tokenReward",
														"nameLocation": "5470:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 864,
														"src": "5462:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 856,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5462:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 858,
														"name": "poolPortionAtTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "5484:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 859,
														"name": "poolSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "5504:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5484:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5462:52:4"
											},
											{
												"expression": {
													"id": 862,
													"name": "tokenReward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 857,
													"src": "5531:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 829,
												"id": 863,
												"nodeType": "Return",
												"src": "5524:18:4"
											}
										]
									},
									"functionSelector": "a164959d",
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenReward",
									"nameLocation": "5110:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "5133:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "5125:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5125:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "5156:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "5148:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5148:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:41:4"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "5186:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5186:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5185:9:4"
									},
									"scope": 902,
									"src": "5101:448:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "5623:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 873,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 867,
																"src": "5641:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5651:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5641:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 872,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5633:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5633:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "5633:20:4"
											},
											{
												"expression": {
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 878,
														"name": "minimumStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5664:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 879,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "5685:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5664:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "5664:28:4"
											}
										]
									},
									"functionSelector": "0d29fcd4",
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 870,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 869,
												"name": "multiSigOnly",
												"nameLocations": [
													"5610:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 386,
												"src": "5610:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5610:12:4"
										}
									],
									"name": "setMinimumStakeAmount",
									"nameLocation": "5564:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5594:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "5586:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5586:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5585:17:4"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5623:0:4"
									},
									"scope": 902,
									"src": "5555:144:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "5775:78:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 891,
																"name": "_length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 885,
																"src": "5793:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5803:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5793:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 890,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5785:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "5785:20:4"
											},
											{
												"expression": {
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 896,
														"name": "rewardBlackoutPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5816:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 897,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "5839:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5816:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "5816:30:4"
											}
										]
									},
									"functionSelector": "9b29d215",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 888,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 887,
												"name": "multiSigOnly",
												"nameLocations": [
													"5762:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 386,
												"src": "5762:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5762:12:4"
										}
									],
									"name": "setRewardBlackoutPeriod",
									"nameLocation": "5714:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "_length",
												"nameLocation": "5746:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "5738:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5737:17:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5775:0:4"
									},
									"scope": 902,
									"src": "5705:148:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 903,
							"src": "424:5432:4",
							"usedErrors": [],
							"usedEvents": [
								430,
								436
							]
						}
					],
					"src": "32:5826:4"
				},
				"id": 4
			},
			"IFairLaunchFactory.sol": {
				"ast": {
					"absolutePath": "IFairLaunchFactory.sol",
					"exportedSymbols": {
						"IFairLaunchFactoryV1": [
							1073
						]
					},
					"id": 1074,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 904,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFairLaunchFactoryV1",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1073,
							"linearizedBaseContracts": [
								1073
							],
							"name": "IFairLaunchFactoryV1",
							"nameLocation": "66:20:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "6286116a",
									"id": 909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factoryFee",
									"nameLocation": "102:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "112:2:5"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "138:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "138:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "137:9:5"
									},
									"scope": 1073,
									"src": "93:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18b7d5ed",
									"id": 914,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factoryBaseFee",
									"nameLocation": "161:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "175:2:5"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "201:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "201:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "200:9:5"
									},
									"scope": 1073,
									"src": "152:58:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ee99205c",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakingContract",
									"nameLocation": "224:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "239:2:5"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "265:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "264:9:5"
									},
									"scope": 1073,
									"src": "215:59:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1516def7",
									"id": 924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multiSigAddress",
									"nameLocation": "288:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:5"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "329:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "328:9:5"
									},
									"scope": 1073,
									"src": "279:59:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "97f6c25d",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factoryToken",
									"nameLocation": "352:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "364:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "390:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:9:5"
									},
									"scope": 1073,
									"src": "343:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e1ee981a",
									"id": 934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "launchpadsGenerated",
									"nameLocation": "413:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:2:5"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "458:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "458:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:9:5"
									},
									"scope": 1073,
									"src": "404:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d2c3bb3c",
									"id": 939,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factoryOpen",
									"nameLocation": "481:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "492:2:5"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "518:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 936,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "518:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:6:5"
									},
									"scope": 1073,
									"src": "472:52:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a4b7914e",
									"id": 946,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isFactoryToken",
									"nameLocation": "538:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "561:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "553:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "553:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "552:18:5"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "594:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 943,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "594:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "593:6:5"
									},
									"scope": 1073,
									"src": "529:71:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d8eba892",
									"id": 953,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakingContractFactoryTokenAllocations",
									"nameLocation": "614:38:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "661:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "653:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "652:18:5"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "694:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:9:5"
									},
									"scope": 1073,
									"src": "605:98:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f06fafb6",
									"id": 960,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addressIsLaunchpad",
									"nameLocation": "717:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "744:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "736:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:18:5"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "777:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 957,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:6:5"
									},
									"scope": 1073,
									"src": "708:75:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "5494683ee1849b1bc19e83430e6ce813a9c3616e0b27e8051c945a87f87693fa",
									"id": 972,
									"name": "LaunchPadGenerated",
									"nameLocation": "795:18:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"indexed": true,
												"mutability": "mutable",
												"name": "LaunchpaddAddress",
												"nameLocation": "830:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "814:33:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "814:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"indexed": true,
												"mutability": "mutable",
												"name": "launchpadNumber",
												"nameLocation": "865:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "849:31:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"indexed": false,
												"mutability": "mutable",
												"name": "hardcap",
												"nameLocation": "890:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "882:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"indexed": false,
												"mutability": "mutable",
												"name": "softcap",
												"nameLocation": "907:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "899:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"indexed": false,
												"mutability": "mutable",
												"name": "founderAddres",
												"nameLocation": "924:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "916:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "813:125:5"
									},
									"src": "789:150:5"
								},
								{
									"anonymous": false,
									"eventSelector": "c7110035cc1757a16f9f9a14835a5c44f2e6003b02b8f17fcaac8c1da032f889",
									"id": 978,
									"name": "multiSigWithdrawal",
									"nameLocation": "950:18:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawSender",
												"nameLocation": "977:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "969:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawalAmount",
												"nameLocation": "1001:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "993:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:50:5"
									},
									"src": "944:75:5"
								},
								{
									"anonymous": false,
									"eventSelector": "393014302eb5aa93ea9465c0762de1444d7f4377a0b192a5e021d92fd8d881d7",
									"id": 982,
									"name": "FactoryTokenRegistered",
									"nameLocation": "1030:22:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "1069:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1053:28:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1052:30:5"
									},
									"src": "1024:59:5"
								},
								{
									"anonymous": false,
									"eventSelector": "da22880c1f65afce17bffacb7ce44c92e858ffe3cafdde2c868d665e177e1c2a",
									"id": 986,
									"name": "FactoryFeeSet",
									"nameLocation": "1094:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFee",
												"nameLocation": "1116:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "1108:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:16:5"
									},
									"src": "1088:36:5"
								},
								{
									"anonymous": false,
									"eventSelector": "fdcd0f66eaa2e719ee1658b24c03a47e554452908214404eeb08645fc5b367af",
									"id": 990,
									"name": "FactoryBaseFeeSet",
									"nameLocation": "1135:17:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBaseFee",
												"nameLocation": "1161:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1153:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1153:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1152:20:5"
									},
									"src": "1129:44:5"
								},
								{
									"anonymous": false,
									"eventSelector": "1253844b0fff3da7dd2829de816c9b4f94c238cf2bf6eb72c02c7d6f2b53beac",
									"id": 994,
									"name": "StakingContractSet",
									"nameLocation": "1184:18:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"indexed": true,
												"mutability": "mutable",
												"name": "newStakingContract",
												"nameLocation": "1219:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "1203:34:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:36:5"
									},
									"src": "1178:61:5"
								},
								{
									"anonymous": false,
									"eventSelector": "bb66a70be412f0767b2216b1c39e5e5c3f1a49fea18ebccfeb565f352805fcc7",
									"id": 998,
									"name": "FactoryClosed",
									"nameLocation": "1250:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"indexed": false,
												"mutability": "mutable",
												"name": "factoryOpen",
												"nameLocation": "1269:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "1264:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 995,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1264:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1263:18:5"
									},
									"src": "1244:38:5"
								},
								{
									"functionSelector": "f1a74b55",
									"id": 1021,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createFairLaunchpad",
									"nameLocation": "1297:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1341:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1327:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 999,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1327:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1370:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1356:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1001,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1356:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "_totalSupply",
												"nameLocation": "1395:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1387:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1387:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "_presaleLaunchpad",
												"nameLocation": "1422:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1417:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1005,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1417:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "_presaleHardcap",
												"nameLocation": "1458:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1450:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1450:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "_presaleSoftcap",
												"nameLocation": "1491:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1483:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1483:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "_presaleLengthBlocks",
												"nameLocation": "1524:20:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1516:28:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1516:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "_presaleMaxContribution",
												"nameLocation": "1562:23:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1554:31:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1554:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "_presaleMinContribution",
												"nameLocation": "1603:23:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1595:31:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1595:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "_founderSupplyAllocation",
												"nameLocation": "1644:24:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1636:32:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1636:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:358:5"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1691:0:5"
									},
									"scope": 1073,
									"src": "1288:404:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "25cd6921",
									"id": 1024,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawToMultiSig",
									"nameLocation": "1707:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1725:2:5"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1736:0:5"
									},
									"scope": 1073,
									"src": "1698:39:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "96b37277",
									"id": 1031,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerFactoryToken",
									"nameLocation": "1752:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1781:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "1773:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "_stakingContractAllocation",
												"nameLocation": "1799:26:5",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "1791:34:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:54:5"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1835:0:5"
									},
									"scope": 1073,
									"src": "1743:93:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "03545f6a",
									"id": 1036,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFactoryFee",
									"nameLocation": "1851:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "_newFee",
												"nameLocation": "1873:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1865:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1865:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1864:17:5"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1890:0:5"
									},
									"scope": 1073,
									"src": "1842:49:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3ee014a7",
									"id": 1041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFactoryBaseFee",
									"nameLocation": "1906:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "_newFee",
												"nameLocation": "1932:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1924:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1923:17:5"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1949:0:5"
									},
									"scope": 1073,
									"src": "1897:53:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dd373b9",
									"id": 1046,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setStakingContract",
									"nameLocation": "1965:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "_newStakingContract",
												"nameLocation": "1992:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "1984:27:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1984:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1983:29:5"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2021:0:5"
									},
									"scope": 1073,
									"src": "1956:66:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "82b3aa08",
									"id": 1051,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "closeFactory",
									"nameLocation": "2037:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "_factoryOpen",
												"nameLocation": "2055:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "2050:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1047,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2050:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2049:19:5"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2077:0:5"
									},
									"scope": 1073,
									"src": "2028:50:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "53cbd07e",
									"id": 1058,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAddressLaunchpad",
									"nameLocation": "2093:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "2120:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "2112:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2112:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:18:5"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "2152:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1055,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2152:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2151:6:5"
									},
									"scope": 1073,
									"src": "2084:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d16aeae",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAddressFactoryToken",
									"nameLocation": "2173:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "2203:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "2195:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:18:5"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "2235:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1062,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2235:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2234:6:5"
									},
									"scope": 1073,
									"src": "2164:77:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "22022de6",
									"id": 1072,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenStakingContractAllocation",
									"nameLocation": "2256:33:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "2298:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "2290:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:18:5"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "2331:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2330:9:5"
									},
									"scope": 1073,
									"src": "2247:93:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1074,
							"src": "56:2286:5",
							"usedErrors": [],
							"usedEvents": [
								972,
								978,
								982,
								986,
								990,
								994,
								998
							]
						}
					],
					"src": "32:2310:5"
				},
				"id": 5
			}
		}
	}
}