{
	"id": "5b9338ddda931d0f1cab16db0b609e77",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"FairERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.25;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract FairERC20 is ERC20 {\n    constructor(uint256 _totalSupply, string memory name, string memory symbol ) ERC20(name, symbol) {\n        _mint(msg.sender, _totalSupply * 10**decimals());\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"FairERC20.sol": {
				"FairERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_totalSupply",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"FairERC20.sol\":116:314  contract FairERC20 is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"FairERC20.sol\":150:312  constructor(uint256 _totalSupply, string memory name, string memory symbol ) ERC20(name, symbol) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"FairERC20.sol\":233:237  name */\n  dup2\n    /* \"FairERC20.sol\":239:245  symbol */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  tag_7\n    /* \"FairERC20.sol\":233:237  name */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_9\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"FairERC20.sol\":257:305  _mint(msg.sender, _totalSupply * 10**decimals()) */\n  tag_11\n    /* \"FairERC20.sol\":263:273  msg.sender */\n  caller\n    /* \"FairERC20.sol\":294:304  decimals() */\n  tag_12\n    /* \"FairERC20.sol\":294:302  decimals */\n  shl(0x20, tag_13)\n    /* \"FairERC20.sol\":294:304  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"FairERC20.sol\":290:304  10**decimals() */\n  tag_14\n  swap1\n    /* \"FairERC20.sol\":290:292  10 */\n  0x0a\n    /* \"FairERC20.sol\":290:304  10**decimals() */\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"FairERC20.sol\":275:304  _totalSupply * 10**decimals() */\n  tag_16\n  swap1\n    /* \"FairERC20.sol\":275:287  _totalSupply */\n  dup7\n    /* \"FairERC20.sol\":275:304  _totalSupply * 10**decimals() */\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"FairERC20.sol\":257:262  _mint */\n  tag_18\n    /* \"FairERC20.sol\":257:305  _mint(msg.sender, _totalSupply * 10**decimals()) */\n  jump\t// in\ntag_11:\n    /* \"FairERC20.sol\":150:312  constructor(uint256 _totalSupply, string memory name, string memory symbol ) ERC20(name, symbol) {... */\n  pop\n  pop\n  pop\n    /* \"FairERC20.sol\":116:314  contract FairERC20 is ERC20 {... */\n  jump(tag_48)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n  0x12\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_22\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5878:5929   */\n  mstore\n    /* \"#utility.yul\":5851:5869   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\ntag_23:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_25\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  tag_26\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_31\n  swap1\n  pop\n  jump\ntag_28:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":6290:6322   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":6272:6323   */\n  mstore\n    /* \"#utility.yul\":6339:6357   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":6332:6366   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":6382:6400   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":6375:6409   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":6245:6263   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_23\n    /* \"#utility.yul\":6070:6415   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_32:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_31:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n    /* \"#utility.yul\":6566:6591   */\n  dup2\n  mstore\n    /* \"#utility.yul\":6554:6556   */\n  0x20\n    /* \"#utility.yul\":6539:6557   */\n  add\n  swap1\n    /* \"#utility.yul\":6420:6597   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_39:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:862   */\ntag_40:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_51:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_53\n  tag_39\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_55\n  tag_39\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":709:712   */\n  dup7\n    /* \"#utility.yul\":702:706   */\n  0x20\n    /* \"#utility.yul\":697:699   */\n  dup6\n    /* \"#utility.yul\":689:695   */\n  dup9\n    /* \"#utility.yul\":685:700   */\n  add\n    /* \"#utility.yul\":681:707   */\n  add\n    /* \"#utility.yul\":678:713   */\n  gt\n    /* \"#utility.yul\":675:730   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":726:727   */\n  0x00\n    /* \"#utility.yul\":723:724   */\n  dup1\n    /* \"#utility.yul\":716:728   */\n  revert\n    /* \"#utility.yul\":675:730   */\ntag_56:\n    /* \"#utility.yul\":783:785   */\n  dup4\n    /* \"#utility.yul\":776:780   */\n  0x20\n    /* \"#utility.yul\":768:774   */\n  dup8\n    /* \"#utility.yul\":764:781   */\n  add\n    /* \"#utility.yul\":757:761   */\n  0x20\n    /* \"#utility.yul\":749:755   */\n  dup4\n    /* \"#utility.yul\":745:762   */\n  add\n    /* \"#utility.yul\":739:786   */\n  mcopy\n    /* \"#utility.yul\":830:831   */\n  0x00\n    /* \"#utility.yul\":823:827   */\n  0x20\n    /* \"#utility.yul\":818:820   */\n  dup6\n    /* \"#utility.yul\":810:816   */\n  dup4\n    /* \"#utility.yul\":806:821   */\n  add\n    /* \"#utility.yul\":802:828   */\n  add\n    /* \"#utility.yul\":795:832   */\n  mstore\n    /* \"#utility.yul\":850:856   */\n  dup1\n    /* \"#utility.yul\":841:856   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:862   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":867:1490   */\ntag_3:\n    /* \"#utility.yul\":975:981   */\n  0x00\n    /* \"#utility.yul\":983:989   */\n  dup1\n    /* \"#utility.yul\":991:997   */\n  0x00\n    /* \"#utility.yul\":1044:1046   */\n  0x60\n    /* \"#utility.yul\":1032:1041   */\n  dup5\n    /* \"#utility.yul\":1023:1030   */\n  dup7\n    /* \"#utility.yul\":1019:1042   */\n  sub\n    /* \"#utility.yul\":1015:1047   */\n  slt\n    /* \"#utility.yul\":1012:1064   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1012:1064   */\ntag_58:\n    /* \"#utility.yul\":1083:1099   */\n  dup4\n  mload\n    /* \"#utility.yul\":1143:1145   */\n  0x20\n    /* \"#utility.yul\":1128:1146   */\n  dup6\n  add\n    /* \"#utility.yul\":1122:1147   */\n  mload\n    /* \"#utility.yul\":1083:1099   */\n  swap1\n  swap4\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1196:1210   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1193:1227   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1223:1224   */\n  0x00\n    /* \"#utility.yul\":1220:1221   */\n  dup1\n    /* \"#utility.yul\":1213:1225   */\n  revert\n    /* \"#utility.yul\":1193:1227   */\ntag_59:\n    /* \"#utility.yul\":1246:1307   */\n  tag_60\n    /* \"#utility.yul\":1299:1306   */\n  dup8\n    /* \"#utility.yul\":1290:1296   */\n  dup4\n    /* \"#utility.yul\":1279:1288   */\n  dup9\n    /* \"#utility.yul\":1275:1297   */\n  add\n    /* \"#utility.yul\":1246:1307   */\n  tag_40\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1236:1307   */\n  swap4\n  pop\n    /* \"#utility.yul\":1353:1355   */\n  0x40\n    /* \"#utility.yul\":1342:1351   */\n  dup7\n    /* \"#utility.yul\":1338:1356   */\n  add\n    /* \"#utility.yul\":1332:1357   */\n  mload\n    /* \"#utility.yul\":1316:1357   */\n  swap2\n  pop\n    /* \"#utility.yul\":1382:1384   */\n  dup1\n    /* \"#utility.yul\":1372:1380   */\n  dup3\n    /* \"#utility.yul\":1369:1385   */\n  gt\n    /* \"#utility.yul\":1366:1402   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1398:1399   */\n  0x00\n    /* \"#utility.yul\":1395:1396   */\n  dup1\n    /* \"#utility.yul\":1388:1400   */\n  revert\n    /* \"#utility.yul\":1366:1402   */\ntag_61:\n  pop\n    /* \"#utility.yul\":1421:1484   */\n  tag_62\n    /* \"#utility.yul\":1476:1483   */\n  dup7\n    /* \"#utility.yul\":1465:1473   */\n  dup3\n    /* \"#utility.yul\":1454:1463   */\n  dup8\n    /* \"#utility.yul\":1450:1474   */\n  add\n    /* \"#utility.yul\":1421:1484   */\n  tag_40\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1411:1484   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":867:1490   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1495:1875   */\ntag_41:\n    /* \"#utility.yul\":1574:1575   */\n  0x01\n    /* \"#utility.yul\":1570:1582   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1617:1629   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1638:1699   */\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1692:1696   */\n  0x7f\n    /* \"#utility.yul\":1684:1690   */\n  dup3\n    /* \"#utility.yul\":1680:1697   */\n  and\n    /* \"#utility.yul\":1670:1697   */\n  swap2\n  pop\n    /* \"#utility.yul\":1638:1699   */\ntag_64:\n    /* \"#utility.yul\":1745:1747   */\n  0x20\n    /* \"#utility.yul\":1737:1743   */\n  dup3\n    /* \"#utility.yul\":1734:1748   */\n  lt\n    /* \"#utility.yul\":1714:1732   */\n  dup2\n    /* \"#utility.yul\":1711:1749   */\n  sub\n    /* \"#utility.yul\":1708:1869   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1791:1801   */\n  0x4e487b71\n    /* \"#utility.yul\":1786:1789   */\n  0xe0\n    /* \"#utility.yul\":1782:1802   */\n  shl\n    /* \"#utility.yul\":1779:1780   */\n  0x00\n    /* \"#utility.yul\":1772:1803   */\n  mstore\n    /* \"#utility.yul\":1826:1830   */\n  0x22\n    /* \"#utility.yul\":1823:1824   */\n  0x04\n    /* \"#utility.yul\":1816:1831   */\n  mstore\n    /* \"#utility.yul\":1854:1858   */\n  0x24\n    /* \"#utility.yul\":1851:1852   */\n  0x00\n    /* \"#utility.yul\":1844:1859   */\n  revert\n    /* \"#utility.yul\":1708:1869   */\ntag_65:\n  pop\n    /* \"#utility.yul\":1495:1875   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2006:2524   */\ntag_43:\n    /* \"#utility.yul\":2108:2110   */\n  0x1f\n    /* \"#utility.yul\":2103:2106   */\n  dup3\n    /* \"#utility.yul\":2100:2111   */\n  gt\n    /* \"#utility.yul\":2097:2518   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2144:2149   */\n  dup1\n    /* \"#utility.yul\":2141:2142   */\n  0x00\n    /* \"#utility.yul\":2134:2150   */\n  mstore\n    /* \"#utility.yul\":2188:2192   */\n  0x20\n    /* \"#utility.yul\":2185:2186   */\n  0x00\n    /* \"#utility.yul\":2175:2193   */\n  keccak256\n    /* \"#utility.yul\":2258:2260   */\n  0x1f\n    /* \"#utility.yul\":2246:2256   */\n  dup5\n    /* \"#utility.yul\":2242:2261   */\n  add\n    /* \"#utility.yul\":2239:2240   */\n  0x05\n    /* \"#utility.yul\":2235:2262   */\n  shr\n    /* \"#utility.yul\":2229:2233   */\n  dup2\n    /* \"#utility.yul\":2225:2263   */\n  add\n    /* \"#utility.yul\":2294:2298   */\n  0x20\n    /* \"#utility.yul\":2282:2292   */\n  dup6\n    /* \"#utility.yul\":2279:2299   */\n  lt\n    /* \"#utility.yul\":2276:2323   */\n  iszero\n  tag_69\n  jumpi\n  pop\n    /* \"#utility.yul\":2317:2321   */\n  dup1\n    /* \"#utility.yul\":2276:2323   */\ntag_69:\n    /* \"#utility.yul\":2372:2374   */\n  0x1f\n    /* \"#utility.yul\":2367:2370   */\n  dup5\n    /* \"#utility.yul\":2363:2375   */\n  add\n    /* \"#utility.yul\":2360:2361   */\n  0x05\n    /* \"#utility.yul\":2356:2376   */\n  shr\n    /* \"#utility.yul\":2350:2354   */\n  dup3\n    /* \"#utility.yul\":2346:2377   */\n  add\n    /* \"#utility.yul\":2336:2377   */\n  swap2\n  pop\n    /* \"#utility.yul\":2427:2508   */\ntag_70:\n    /* \"#utility.yul\":2445:2447   */\n  dup2\n    /* \"#utility.yul\":2438:2443   */\n  dup2\n    /* \"#utility.yul\":2435:2448   */\n  lt\n    /* \"#utility.yul\":2427:2508   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2504:2505   */\n  0x00\n    /* \"#utility.yul\":2490:2506   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2471:2472   */\n  0x01\n    /* \"#utility.yul\":2460:2473   */\n  add\n    /* \"#utility.yul\":2427:2508   */\n  jump(tag_70)\ntag_72:\n    /* \"#utility.yul\":2431:2434   */\n  pop\n  pop\n    /* \"#utility.yul\":2097:2518   */\ntag_68:\n    /* \"#utility.yul\":2006:2524   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2700:4045   */\ntag_8:\n    /* \"#utility.yul\":2820:2830   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2842:2872   */\n  dup2\n  gt\n    /* \"#utility.yul\":2839:2895   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2875:2893   */\n  tag_76\n  tag_39\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2904:3001   */\n  tag_77\n    /* \"#utility.yul\":2994:3000   */\n  dup2\n    /* \"#utility.yul\":2954:2992   */\n  tag_78\n    /* \"#utility.yul\":2986:2990   */\n  dup5\n    /* \"#utility.yul\":2980:2991   */\n  sload\n    /* \"#utility.yul\":2954:2992   */\n  tag_41\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2948:2952   */\n  dup5\n    /* \"#utility.yul\":2904:3001   */\n  tag_43\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3056:3060   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3113:3115   */\n  0x1f\n    /* \"#utility.yul\":3102:3116   */\n  dup4\n  gt\n    /* \"#utility.yul\":3130:3131   */\n  0x01\n    /* \"#utility.yul\":3125:3788   */\n  dup2\n  eq\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3832:3833   */\n  0x00\n    /* \"#utility.yul\":3849:3855   */\n  dup5\n    /* \"#utility.yul\":3846:3935   */\n  iszero\n  tag_81\n  jumpi\n  pop\n    /* \"#utility.yul\":3901:3920   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3895:3921   */\n  mload\n    /* \"#utility.yul\":3846:3935   */\ntag_81:\n  not(0x00)\n    /* \"#utility.yul\":2657:2658   */\n  0x03\n    /* \"#utility.yul\":2653:2664   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2649:2673   */\n  shr\n    /* \"#utility.yul\":2645:2674   */\n  not\n    /* \"#utility.yul\":2635:2675   */\n  and\n    /* \"#utility.yul\":2681:2682   */\n  0x01\n    /* \"#utility.yul\":2677:2688   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2632:2689   */\n  or\n    /* \"#utility.yul\":3948:4029   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3095:4039   */\n  jump(tag_79)\n    /* \"#utility.yul\":3125:3788   */\ntag_80:\n    /* \"#utility.yul\":1953:1954   */\n  0x00\n    /* \"#utility.yul\":1946:1960   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1990:1994   */\n  0x20\n    /* \"#utility.yul\":1977:1995   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3161:3181   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3279:3515   */\ntag_84:\n    /* \"#utility.yul\":3293:3300   */\n  dup3\n    /* \"#utility.yul\":3290:3291   */\n  dup2\n    /* \"#utility.yul\":3287:3301   */\n  lt\n    /* \"#utility.yul\":3279:3515   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":3382:3401   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3376:3402   */\n  mload\n    /* \"#utility.yul\":3361:3403   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3474:3501   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3442:3443   */\n  0x01\n    /* \"#utility.yul\":3430:3444   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3309:3328   */\n  dup5\n  add\n    /* \"#utility.yul\":3279:3515   */\n  jump(tag_84)\ntag_86:\n    /* \"#utility.yul\":3283:3286   */\n  pop\n    /* \"#utility.yul\":3543:3549   */\n  dup6\n    /* \"#utility.yul\":3534:3541   */\n  dup3\n    /* \"#utility.yul\":3531:3550   */\n  lt\n    /* \"#utility.yul\":3528:3729   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3604:3623   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3598:3624   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3687:3688   */\n  0x03\n    /* \"#utility.yul\":3683:3697   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3699:3702   */\n  0xf8\n    /* \"#utility.yul\":3679:3703   */\n  and\n    /* \"#utility.yul\":3675:3712   */\n  shr\n    /* \"#utility.yul\":3671:3713   */\n  not\n    /* \"#utility.yul\":3656:3714   */\n  and\n    /* \"#utility.yul\":3641:3715   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3528:3729   */\ntag_87:\n  pop\n  pop\n    /* \"#utility.yul\":3775:3776   */\n  0x01\n    /* \"#utility.yul\":3766:3772   */\n  dup5\n    /* \"#utility.yul\":3763:3764   */\n  0x01\n    /* \"#utility.yul\":3759:3773   */\n  shl\n    /* \"#utility.yul\":3755:3777   */\n  add\n    /* \"#utility.yul\":3749:3753   */\n  dup6\n    /* \"#utility.yul\":3742:3778   */\n  sstore\n    /* \"#utility.yul\":3095:4039   */\ntag_79:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2700:4045   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4050:4177   */\ntag_45:\n    /* \"#utility.yul\":4111:4121   */\n  0x4e487b71\n    /* \"#utility.yul\":4106:4109   */\n  0xe0\n    /* \"#utility.yul\":4102:4122   */\n  shl\n    /* \"#utility.yul\":4099:4100   */\n  0x00\n    /* \"#utility.yul\":4092:4123   */\n  mstore\n    /* \"#utility.yul\":4142:4146   */\n  0x11\n    /* \"#utility.yul\":4139:4140   */\n  0x04\n    /* \"#utility.yul\":4132:4147   */\n  mstore\n    /* \"#utility.yul\":4166:4170   */\n  0x24\n    /* \"#utility.yul\":4163:4164   */\n  0x00\n    /* \"#utility.yul\":4156:4171   */\n  revert\n    /* \"#utility.yul\":4182:4598   */\ntag_46:\n    /* \"#utility.yul\":4271:4272   */\n  0x01\n    /* \"#utility.yul\":4308:4313   */\n  dup2\n    /* \"#utility.yul\":4271:4272   */\n  dup2\n    /* \"#utility.yul\":4322:4592   */\ntag_90:\n    /* \"#utility.yul\":4343:4350   */\n  dup1\n    /* \"#utility.yul\":4333:4341   */\n  dup6\n    /* \"#utility.yul\":4330:4351   */\n  gt\n    /* \"#utility.yul\":4322:4592   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4402:4406   */\n  dup2\n    /* \"#utility.yul\":4398:4399   */\n  0x00\n    /* \"#utility.yul\":4394:4400   */\n  not\n    /* \"#utility.yul\":4390:4407   */\n  div\n    /* \"#utility.yul\":4384:4388   */\n  dup3\n    /* \"#utility.yul\":4381:4408   */\n  gt\n    /* \"#utility.yul\":4378:4431   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":4411:4429   */\n  tag_94\n  tag_45\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4461:4468   */\n  dup1\n    /* \"#utility.yul\":4451:4459   */\n  dup6\n    /* \"#utility.yul\":4447:4469   */\n  and\n    /* \"#utility.yul\":4444:4499   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":4481:4497   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":4444:4499   */\ntag_95:\n    /* \"#utility.yul\":4560:4582   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":4520:4535   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":4322:4592   */\n  jump(tag_90)\ntag_92:\n    /* \"#utility.yul\":4326:4329   */\n  pop\n    /* \"#utility.yul\":4182:4598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4603:5409   */\ntag_47:\n    /* \"#utility.yul\":4652:4657   */\n  0x00\n    /* \"#utility.yul\":4682:4690   */\n  dup3\n    /* \"#utility.yul\":4672:4752   */\n  tag_97\n  jumpi\n  pop\n    /* \"#utility.yul\":4723:4724   */\n  0x01\n    /* \"#utility.yul\":4737:4742   */\n  jump(tag_96)\n    /* \"#utility.yul\":4672:4752   */\ntag_97:\n    /* \"#utility.yul\":4771:4775   */\n  dup2\n    /* \"#utility.yul\":4761:4837   */\n  tag_98\n  jumpi\n  pop\n    /* \"#utility.yul\":4808:4809   */\n  0x00\n    /* \"#utility.yul\":4822:4827   */\n  jump(tag_96)\n    /* \"#utility.yul\":4761:4837   */\ntag_98:\n    /* \"#utility.yul\":4853:4857   */\n  dup2\n    /* \"#utility.yul\":4871:4872   */\n  0x01\n    /* \"#utility.yul\":4866:4925   */\n  dup2\n  eq\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4939:4940   */\n  0x02\n    /* \"#utility.yul\":4934:5064   */\n  dup2\n  eq\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4846:5064   */\n  jump(tag_99)\n    /* \"#utility.yul\":4866:4925   */\ntag_100:\n    /* \"#utility.yul\":4896:4897   */\n  0x01\n    /* \"#utility.yul\":4887:4897   */\n  swap2\n  pop\n    /* \"#utility.yul\":4910:4915   */\n  pop\n  jump(tag_96)\n    /* \"#utility.yul\":4934:5064   */\ntag_101:\n    /* \"#utility.yul\":4971:4974   */\n  0xff\n    /* \"#utility.yul\":4961:4969   */\n  dup5\n    /* \"#utility.yul\":4958:4975   */\n  gt\n    /* \"#utility.yul\":4955:4998   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4978:4996   */\n  tag_103\n  tag_45\n  jump\t// in\ntag_103:\n  pop\n  pop\n    /* \"#utility.yul\":5034:5035   */\n  0x01\n    /* \"#utility.yul\":5020:5036   */\n  dup3\n  shl\n    /* \"#utility.yul\":5049:5054   */\n  jump(tag_96)\n    /* \"#utility.yul\":4846:5064   */\ntag_99:\n  pop\n    /* \"#utility.yul\":5148:5150   */\n  0x20\n    /* \"#utility.yul\":5138:5146   */\n  dup4\n    /* \"#utility.yul\":5135:5151   */\n  lt\n    /* \"#utility.yul\":5129:5132   */\n  0x0133\n    /* \"#utility.yul\":5123:5127   */\n  dup4\n    /* \"#utility.yul\":5120:5133   */\n  lt\n    /* \"#utility.yul\":5116:5152   */\n  and\n    /* \"#utility.yul\":5110:5112   */\n  0x4e\n    /* \"#utility.yul\":5100:5108   */\n  dup5\n    /* \"#utility.yul\":5097:5113   */\n  lt\n    /* \"#utility.yul\":5092:5094   */\n  0x0b\n    /* \"#utility.yul\":5086:5090   */\n  dup5\n    /* \"#utility.yul\":5083:5095   */\n  lt\n    /* \"#utility.yul\":5079:5114   */\n  and\n    /* \"#utility.yul\":5076:5153   */\n  or\n    /* \"#utility.yul\":5073:5232   */\n  iszero\n  tag_104\n  jumpi\n  pop\n    /* \"#utility.yul\":5185:5204   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":5217:5222   */\n  jump(tag_96)\n    /* \"#utility.yul\":5073:5232   */\ntag_104:\n    /* \"#utility.yul\":5264:5298   */\n  tag_105\n    /* \"#utility.yul\":5289:5297   */\n  dup4\n    /* \"#utility.yul\":5283:5287   */\n  dup4\n    /* \"#utility.yul\":5264:5298   */\n  tag_46\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5334:5340   */\n  dup1\n    /* \"#utility.yul\":5330:5331   */\n  0x00\n    /* \"#utility.yul\":5326:5332   */\n  not\n    /* \"#utility.yul\":5322:5341   */\n  div\n    /* \"#utility.yul\":5313:5320   */\n  dup3\n    /* \"#utility.yul\":5310:5342   */\n  gt\n    /* \"#utility.yul\":5307:5365   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":5345:5363   */\n  tag_107\n  tag_45\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5383:5403   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":4603:5409   */\ntag_96:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5414:5554   */\ntag_15:\n    /* \"#utility.yul\":5472:5477   */\n  0x00\n    /* \"#utility.yul\":5501:5548   */\n  tag_109\n    /* \"#utility.yul\":5542:5546   */\n  0xff\n    /* \"#utility.yul\":5532:5540   */\n  dup5\n    /* \"#utility.yul\":5528:5547   */\n  and\n    /* \"#utility.yul\":5522:5526   */\n  dup4\n    /* \"#utility.yul\":5501:5548   */\n  tag_47\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5492:5548   */\n  swap4\n    /* \"#utility.yul\":5414:5554   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5559:5727   */\ntag_17:\n    /* \"#utility.yul\":5632:5641   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":5663:5672   */\n  dup2\n  iszero\n    /* \"#utility.yul\":5680:5695   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":5674:5696   */\n  dup5\n  eq\n    /* \"#utility.yul\":5660:5697   */\n  or\n    /* \"#utility.yul\":5650:5721   */\n  tag_96\n  jumpi\n    /* \"#utility.yul\":5701:5719   */\n  tag_96\n  tag_45\n  jump\t// in\n    /* \"#utility.yul\":5940:6065   */\ntag_30:\n    /* \"#utility.yul\":6005:6014   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":6026:6036   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":6023:6059   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":6039:6057   */\n  tag_96\n  tag_45\n  jump\t// in\n    /* \"#utility.yul\":6420:6597   */\ntag_48:\n    /* \"FairERC20.sol\":116:314  contract FairERC20 is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"FairERC20.sol\":116:314  contract FairERC20 is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_17\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n        /* \"#utility.yul\":1039:1053   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1032:1054   */\n      iszero\n        /* \"#utility.yul\":1014:1055   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1002:1004   */\n      0x20\n        /* \"#utility.yul\":987:1005   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_15\n        /* \"#utility.yul\":874:1061   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_23:\n      mload(0x40)\n        /* \"#utility.yul\":1212:1237   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1200:1202   */\n      0x20\n        /* \"#utility.yul\":1185:1203   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      tag_15\n        /* \"#utility.yul\":1066:1243   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_17\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"#utility.yul\":1723:1759   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1711:1713   */\n      0x20\n        /* \"#utility.yul\":1696:1714   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      tag_15\n        /* \"#utility.yul\":1581:1765   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      tag_23\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_9:\n      tag_13\n      tag_42\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_10:\n      tag_17\n      tag_45\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_23\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_56\n      swap1\n      tag_55\n      jump\t// in\n    tag_56:\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_58\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_57)\n    tag_58:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_59:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_59\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_63\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_64\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_60:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_70\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_70:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_63\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_94\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_91\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2831:2863   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2813:2864   */\n      mstore\n        /* \"#utility.yul\":2880:2898   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2873:2907   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2923:2941   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":2916:2950   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":2786:2804   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_96\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3107:3158   */\n      mstore\n        /* \"#utility.yul\":3080:3098   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      tag_92\n        /* \"#utility.yul\":2961:3164   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_99\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3107:3158   */\n      mstore\n        /* \"#utility.yul\":3080:3098   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      tag_92\n        /* \"#utility.yul\":2961:3164   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3107:3158   */\n      mstore\n        /* \"#utility.yul\":3080:3098   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      tag_92\n        /* \"#utility.yul\":2961:3164   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_106\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3107:3158   */\n      mstore\n        /* \"#utility.yul\":3080:3098   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      tag_92\n        /* \"#utility.yul\":2961:3164   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_94\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_109\n      swap2\n        /* \"#utility.yul\":1212:1237   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1200:1202   */\n      0x20\n        /* \"#utility.yul\":1185:1203   */\n      add\n      swap1\n        /* \"#utility.yul\":1066:1243   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_114\n      swap1\n      pop\n      jump\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2831:2863   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2813:2864   */\n      mstore\n        /* \"#utility.yul\":2880:2898   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2873:2907   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2923:2941   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":2916:2950   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":2786:2804   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_92\n        /* \"#utility.yul\":2611:2956   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_117\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_118)\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_119\n      swap2\n        /* \"#utility.yul\":1212:1237   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1200:1202   */\n      0x20\n        /* \"#utility.yul\":1185:1203   */\n      add\n      swap1\n        /* \"#utility.yul\":1066:1243   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:432   */\n    tag_16:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_120:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_124\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      dup1\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_124:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:869   */\n    tag_19:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      dup1\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      dup1\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_126:\n        /* \"#utility.yul\":783:812   */\n      tag_127\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_120\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":859:861   */\n      0x20\n        /* \"#utility.yul\":844:862   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":831:863   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:869   */\n      jump\t// out\n        /* \"#utility.yul\":1248:1576   */\n    tag_29:\n        /* \"#utility.yul\":1325:1331   */\n      0x00\n        /* \"#utility.yul\":1333:1339   */\n      dup1\n        /* \"#utility.yul\":1341:1347   */\n      0x00\n        /* \"#utility.yul\":1394:1396   */\n      0x60\n        /* \"#utility.yul\":1382:1391   */\n      dup5\n        /* \"#utility.yul\":1373:1380   */\n      dup7\n        /* \"#utility.yul\":1369:1392   */\n      sub\n        /* \"#utility.yul\":1365:1397   */\n      slt\n        /* \"#utility.yul\":1362:1414   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":1410:1411   */\n      0x00\n        /* \"#utility.yul\":1407:1408   */\n      dup1\n        /* \"#utility.yul\":1400:1412   */\n      revert\n        /* \"#utility.yul\":1362:1414   */\n    tag_131:\n        /* \"#utility.yul\":1433:1462   */\n      tag_132\n        /* \"#utility.yul\":1452:1461   */\n      dup5\n        /* \"#utility.yul\":1433:1462   */\n      tag_120\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1423:1462   */\n      swap3\n      pop\n        /* \"#utility.yul\":1481:1519   */\n      tag_133\n        /* \"#utility.yul\":1515:1517   */\n      0x20\n        /* \"#utility.yul\":1504:1513   */\n      dup6\n        /* \"#utility.yul\":1500:1518   */\n      add\n        /* \"#utility.yul\":1481:1519   */\n      tag_120\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":1471:1519   */\n      swap2\n      pop\n        /* \"#utility.yul\":1566:1568   */\n      0x40\n        /* \"#utility.yul\":1555:1564   */\n      dup5\n        /* \"#utility.yul\":1551:1569   */\n      add\n        /* \"#utility.yul\":1538:1570   */\n      calldataload\n        /* \"#utility.yul\":1528:1570   */\n      swap1\n      pop\n        /* \"#utility.yul\":1248:1576   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1770:1956   */\n    tag_38:\n        /* \"#utility.yul\":1829:1835   */\n      0x00\n        /* \"#utility.yul\":1882:1884   */\n      0x20\n        /* \"#utility.yul\":1870:1879   */\n      dup3\n        /* \"#utility.yul\":1861:1868   */\n      dup5\n        /* \"#utility.yul\":1857:1880   */\n      sub\n        /* \"#utility.yul\":1853:1885   */\n      slt\n        /* \"#utility.yul\":1850:1902   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":1898:1899   */\n      0x00\n        /* \"#utility.yul\":1895:1896   */\n      dup1\n        /* \"#utility.yul\":1888:1900   */\n      revert\n        /* \"#utility.yul\":1850:1902   */\n    tag_136:\n        /* \"#utility.yul\":1921:1950   */\n      tag_137\n        /* \"#utility.yul\":1940:1949   */\n      dup3\n        /* \"#utility.yul\":1921:1950   */\n      tag_120\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1911:1950   */\n      swap4\n        /* \"#utility.yul\":1770:1956   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1961:2221   */\n    tag_50:\n        /* \"#utility.yul\":2029:2035   */\n      0x00\n        /* \"#utility.yul\":2037:2043   */\n      dup1\n        /* \"#utility.yul\":2090:2092   */\n      0x40\n        /* \"#utility.yul\":2078:2087   */\n      dup4\n        /* \"#utility.yul\":2069:2076   */\n      dup6\n        /* \"#utility.yul\":2065:2088   */\n      sub\n        /* \"#utility.yul\":2061:2093   */\n      slt\n        /* \"#utility.yul\":2058:2110   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":2106:2107   */\n      0x00\n        /* \"#utility.yul\":2103:2104   */\n      dup1\n        /* \"#utility.yul\":2096:2108   */\n      revert\n        /* \"#utility.yul\":2058:2110   */\n    tag_139:\n        /* \"#utility.yul\":2129:2158   */\n      tag_140\n        /* \"#utility.yul\":2148:2157   */\n      dup4\n        /* \"#utility.yul\":2129:2158   */\n      tag_120\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":2119:2158   */\n      swap2\n      pop\n        /* \"#utility.yul\":2177:2215   */\n      tag_141\n        /* \"#utility.yul\":2211:2213   */\n      0x20\n        /* \"#utility.yul\":2200:2209   */\n      dup5\n        /* \"#utility.yul\":2196:2214   */\n      add\n        /* \"#utility.yul\":2177:2215   */\n      tag_120\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":2167:2215   */\n      swap1\n      pop\n        /* \"#utility.yul\":1961:2221   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2226:2606   */\n    tag_55:\n        /* \"#utility.yul\":2305:2306   */\n      0x01\n        /* \"#utility.yul\":2301:2313   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2348:2360   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2369:2430   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":2423:2427   */\n      0x7f\n        /* \"#utility.yul\":2415:2421   */\n      dup3\n        /* \"#utility.yul\":2411:2428   */\n      and\n        /* \"#utility.yul\":2401:2428   */\n      swap2\n      pop\n        /* \"#utility.yul\":2369:2430   */\n    tag_143:\n        /* \"#utility.yul\":2476:2478   */\n      0x20\n        /* \"#utility.yul\":2468:2474   */\n      dup3\n        /* \"#utility.yul\":2465:2479   */\n      lt\n        /* \"#utility.yul\":2445:2463   */\n      dup2\n        /* \"#utility.yul\":2442:2480   */\n      sub\n        /* \"#utility.yul\":2439:2600   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":2522:2532   */\n      0x4e487b71\n        /* \"#utility.yul\":2517:2520   */\n      0xe0\n        /* \"#utility.yul\":2513:2533   */\n      shl\n        /* \"#utility.yul\":2510:2511   */\n      0x00\n        /* \"#utility.yul\":2503:2534   */\n      mstore\n        /* \"#utility.yul\":2557:2561   */\n      0x22\n        /* \"#utility.yul\":2554:2555   */\n      0x04\n        /* \"#utility.yul\":2547:2562   */\n      mstore\n        /* \"#utility.yul\":2585:2589   */\n      0x24\n        /* \"#utility.yul\":2582:2583   */\n      0x00\n        /* \"#utility.yul\":2575:2590   */\n      revert\n        /* \"#utility.yul\":2439:2600   */\n    tag_144:\n      pop\n        /* \"#utility.yul\":2226:2606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3169:3391   */\n    tag_113:\n        /* \"#utility.yul\":3234:3243   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3255:3265   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3252:3385   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":3307:3317   */\n      0x4e487b71\n        /* \"#utility.yul\":3302:3305   */\n      0xe0\n        /* \"#utility.yul\":3298:3318   */\n      shl\n        /* \"#utility.yul\":3295:3296   */\n      0x00\n        /* \"#utility.yul\":3288:3319   */\n      mstore\n        /* \"#utility.yul\":3342:3346   */\n      0x11\n        /* \"#utility.yul\":3339:3340   */\n      0x04\n        /* \"#utility.yul\":3332:3347   */\n      mstore\n        /* \"#utility.yul\":3370:3374   */\n      0x24\n        /* \"#utility.yul\":3367:3368   */\n      0x00\n        /* \"#utility.yul\":3360:3375   */\n      revert\n\n    auxdata: 0xa26469706673582212204bd5d20a6ab90558adbcc50d5d8979f92f87ffaa2c524a0d525b2842a5ca60f264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_815": {
									"entryPoint": null,
									"id": 815,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 133,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 194,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_215": {
									"entryPoint": 128,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 804,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1071,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 488,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6599:6",
										"nodeType": "YulBlock",
										"src": "0:6599:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:6",
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:6",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:6",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:6",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nativeSrc": "66:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nativeSrc": "56:31:6",
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nativeSrc": "56:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:6",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:6",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nativeSrc": "96:15:6",
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nativeSrc": "96:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:6",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:6",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nativeSrc": "120:15:6",
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nativeSrc": "120:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nativeSrc": "210:652:6",
													"nodeType": "YulBlock",
													"src": "210:652:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:6",
																"nodeType": "YulBlock",
																"src": "259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:6"
																			},
																			"nativeSrc": "261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:6"
																		},
																		"nativeSrc": "261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:6",
																						"nodeType": "YulLiteral",
																						"src": "246:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:6"
																				},
																				"nativeSrc": "234:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:6"
																		},
																		"nativeSrc": "230:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:6"
																},
																"nativeSrc": "223:35:6",
																"nodeType": "YulFunctionCall",
																"src": "223:35:6"
															},
															"nativeSrc": "220:55:6",
															"nodeType": "YulIf",
															"src": "220:55:6"
														},
														{
															"nativeSrc": "284:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:6"
																},
																"nativeSrc": "294:13:6",
																"nodeType": "YulFunctionCall",
																"src": "294:13:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:6",
																	"nodeType": "YulTypedName",
																	"src": "288:2:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:6",
																				"nodeType": "YulLiteral",
																				"src": "334:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:6",
																				"nodeType": "YulLiteral",
																				"src": "338:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:6"
																		},
																		"nativeSrc": "330:10:6",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:6",
																		"nodeType": "YulLiteral",
																		"src": "342:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:6"
																},
																"nativeSrc": "326:18:6",
																"nodeType": "YulFunctionCall",
																"src": "326:18:6"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:6",
																	"nodeType": "YulTypedName",
																	"src": "320:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:6",
																"nodeType": "YulBlock",
																"src": "367:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:6"
																			},
																			"nativeSrc": "369:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:6"
																		},
																		"nativeSrc": "369:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:6"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:6"
																},
																"nativeSrc": "356:10:6",
																"nodeType": "YulFunctionCall",
																"src": "356:10:6"
															},
															"nativeSrc": "353:36:6",
															"nodeType": "YulIf",
															"src": "353:36:6"
														},
														{
															"nativeSrc": "398:17:6",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:6",
																		"nodeType": "YulLiteral",
																		"src": "412:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:6"
																},
																"nativeSrc": "408:7:6",
																"nodeType": "YulFunctionCall",
																"src": "408:7:6"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:6",
																	"nodeType": "YulTypedName",
																	"src": "402:2:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:6",
																		"nodeType": "YulLiteral",
																		"src": "444:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:6"
																},
																"nativeSrc": "438:9:6",
																"nodeType": "YulFunctionCall",
																"src": "438:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:6",
																	"nodeType": "YulTypedName",
																	"src": "428:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:6",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:6",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:6",
																										"nodeType": "YulLiteral",
																										"src": "506:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:6"
																								},
																								"nativeSrc": "498:13:6",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:6"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:6",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:6"
																						},
																						"nativeSrc": "494:22:6",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:6",
																						"nodeType": "YulLiteral",
																						"src": "518:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:6"
																				},
																				"nativeSrc": "490:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:6"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:6"
																		},
																		"nativeSrc": "486:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:6"
																},
																"nativeSrc": "474:53:6",
																"nodeType": "YulFunctionCall",
																"src": "474:53:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:6",
																	"nodeType": "YulTypedName",
																	"src": "460:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:6",
																"nodeType": "YulBlock",
																"src": "586:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:6"
																			},
																			"nativeSrc": "588:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:6"
																		},
																		"nativeSrc": "588:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:6"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:6"
																		},
																		"nativeSrc": "542:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:6"
																		},
																		"nativeSrc": "562:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:6"
																},
																"nativeSrc": "539:46:6",
																"nodeType": "YulFunctionCall",
																"src": "539:46:6"
															},
															"nativeSrc": "536:72:6",
															"nodeType": "YulIf",
															"src": "536:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:6",
																		"nodeType": "YulLiteral",
																		"src": "624:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:6"
																},
																"nativeSrc": "617:22:6",
																"nodeType": "YulFunctionCall",
																"src": "617:22:6"
															},
															"nativeSrc": "617:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:6"
																},
																"nativeSrc": "648:18:6",
																"nodeType": "YulFunctionCall",
																"src": "648:18:6"
															},
															"nativeSrc": "648:18:6",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:6"
														},
														{
															"body": {
																"nativeSrc": "714:16:6",
																"nodeType": "YulBlock",
																"src": "714:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "723:1:6",
																					"nodeType": "YulLiteral",
																					"src": "723:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "726:1:6",
																					"nodeType": "YulLiteral",
																					"src": "726:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "716:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "716:6:6"
																			},
																			"nativeSrc": "716:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "716:12:6"
																		},
																		"nativeSrc": "716:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "716:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "689:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "689:6:6"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "697:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "697:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "685:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "685:3:6"
																				},
																				"nativeSrc": "685:15:6",
																				"nodeType": "YulFunctionCall",
																				"src": "685:15:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "702:4:6",
																				"nodeType": "YulLiteral",
																				"src": "702:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "681:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "681:3:6"
																		},
																		"nativeSrc": "681:26:6",
																		"nodeType": "YulFunctionCall",
																		"src": "681:26:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "709:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "709:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "678:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "678:2:6"
																},
																"nativeSrc": "678:35:6",
																"nodeType": "YulFunctionCall",
																"src": "678:35:6"
															},
															"nativeSrc": "675:55:6",
															"nodeType": "YulIf",
															"src": "675:55:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "749:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "749:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "757:4:6",
																				"nodeType": "YulLiteral",
																				"src": "757:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "745:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "745:3:6"
																		},
																		"nativeSrc": "745:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "745:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "768:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "768:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "776:4:6",
																				"nodeType": "YulLiteral",
																				"src": "776:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "764:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "764:3:6"
																		},
																		"nativeSrc": "764:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "764:17:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "783:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "783:2:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "739:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "739:5:6"
																},
																"nativeSrc": "739:47:6",
																"nodeType": "YulFunctionCall",
																"src": "739:47:6"
															},
															"nativeSrc": "739:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "739:47:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "810:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "810:6:6"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "818:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "818:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "806:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "806:3:6"
																				},
																				"nativeSrc": "806:15:6",
																				"nodeType": "YulFunctionCall",
																				"src": "806:15:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "823:4:6",
																				"nodeType": "YulLiteral",
																				"src": "823:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "802:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "802:3:6"
																		},
																		"nativeSrc": "802:26:6",
																		"nodeType": "YulFunctionCall",
																		"src": "802:26:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:6",
																		"nodeType": "YulLiteral",
																		"src": "830:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "795:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "795:6:6"
																},
																"nativeSrc": "795:37:6",
																"nodeType": "YulFunctionCall",
																"src": "795:37:6"
															},
															"nativeSrc": "795:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "795:37:6"
														},
														{
															"nativeSrc": "841:15:6",
															"nodeType": "YulAssignment",
															"src": "841:15:6",
															"value": {
																"name": "memPtr",
																"nativeSrc": "850:6:6",
																"nodeType": "YulIdentifier",
																"src": "850:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "841:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "841:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:716:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:6",
														"nodeType": "YulTypedName",
														"src": "184:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:6",
														"nodeType": "YulTypedName",
														"src": "192:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:6",
														"nodeType": "YulTypedName",
														"src": "200:5:6",
														"type": ""
													}
												],
												"src": "146:716:6"
											},
											{
												"body": {
													"nativeSrc": "1002:488:6",
													"nodeType": "YulBlock",
													"src": "1002:488:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1048:16:6",
																"nodeType": "YulBlock",
																"src": "1048:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1057:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1057:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1060:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1060:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1050:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1050:6:6"
																			},
																			"nativeSrc": "1050:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1050:12:6"
																		},
																		"nativeSrc": "1050:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1050:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1023:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1023:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1032:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1032:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1019:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1019:3:6"
																		},
																		"nativeSrc": "1019:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1019:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1044:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1044:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1015:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1015:3:6"
																},
																"nativeSrc": "1015:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1015:32:6"
															},
															"nativeSrc": "1012:52:6",
															"nodeType": "YulIf",
															"src": "1012:52:6"
														},
														{
															"nativeSrc": "1073:26:6",
															"nodeType": "YulAssignment",
															"src": "1073:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1089:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1089:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1083:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1083:5:6"
																},
																"nativeSrc": "1083:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1083:16:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1073:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1073:6:6"
																}
															]
														},
														{
															"nativeSrc": "1108:39:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1108:39:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1132:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1132:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1143:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1143:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1128:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1128:3:6"
																		},
																		"nativeSrc": "1128:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1128:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1122:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1122:5:6"
																},
																"nativeSrc": "1122:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1122:25:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1112:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1112:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1156:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1156:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1174:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1178:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1178:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1170:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1170:3:6"
																		},
																		"nativeSrc": "1170:10:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1170:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1182:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1182:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1166:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:6"
																},
																"nativeSrc": "1166:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1160:2:6",
																	"nodeType": "YulTypedName",
																	"src": "1160:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1211:16:6",
																"nodeType": "YulBlock",
																"src": "1211:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1220:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1220:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1223:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1223:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1213:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1213:6:6"
																			},
																			"nativeSrc": "1213:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1213:12:6"
																		},
																		"nativeSrc": "1213:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1213:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1199:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1199:6:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1207:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1207:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1196:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1196:2:6"
																},
																"nativeSrc": "1196:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1196:14:6"
															},
															"nativeSrc": "1193:34:6",
															"nodeType": "YulIf",
															"src": "1193:34:6"
														},
														{
															"nativeSrc": "1236:71:6",
															"nodeType": "YulAssignment",
															"src": "1236:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1279:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1279:9:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1290:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1290:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1275:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1275:3:6"
																		},
																		"nativeSrc": "1275:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1275:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1299:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1299:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1246:28:6",
																	"nodeType": "YulIdentifier",
																	"src": "1246:28:6"
																},
																"nativeSrc": "1246:61:6",
																"nodeType": "YulFunctionCall",
																"src": "1246:61:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1236:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1236:6:6"
																}
															]
														},
														{
															"nativeSrc": "1316:41:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1316:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1342:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1353:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1353:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1338:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:6"
																		},
																		"nativeSrc": "1338:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1338:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1332:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1332:5:6"
																},
																"nativeSrc": "1332:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1332:25:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1320:8:6",
																	"nodeType": "YulTypedName",
																	"src": "1320:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1386:16:6",
																"nodeType": "YulBlock",
																"src": "1386:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1395:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1395:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1398:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1398:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1388:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1388:6:6"
																			},
																			"nativeSrc": "1388:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1388:12:6"
																		},
																		"nativeSrc": "1388:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1388:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1372:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1372:8:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1382:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1382:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1369:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1369:2:6"
																},
																"nativeSrc": "1369:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1369:16:6"
															},
															"nativeSrc": "1366:36:6",
															"nodeType": "YulIf",
															"src": "1366:36:6"
														},
														{
															"nativeSrc": "1411:73:6",
															"nodeType": "YulAssignment",
															"src": "1411:73:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1454:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1454:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1465:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "1465:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1450:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1450:3:6"
																		},
																		"nativeSrc": "1450:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1450:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1476:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1476:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1421:28:6",
																	"nodeType": "YulIdentifier",
																	"src": "1421:28:6"
																},
																"nativeSrc": "1421:63:6",
																"nodeType": "YulFunctionCall",
																"src": "1421:63:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1411:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "867:623:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "952:9:6",
														"nodeType": "YulTypedName",
														"src": "952:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "963:7:6",
														"nodeType": "YulTypedName",
														"src": "963:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "975:6:6",
														"nodeType": "YulTypedName",
														"src": "975:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "983:6:6",
														"nodeType": "YulTypedName",
														"src": "983:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "991:6:6",
														"nodeType": "YulTypedName",
														"src": "991:6:6",
														"type": ""
													}
												],
												"src": "867:623:6"
											},
											{
												"body": {
													"nativeSrc": "1550:325:6",
													"nodeType": "YulBlock",
													"src": "1550:325:6",
													"statements": [
														{
															"nativeSrc": "1560:22:6",
															"nodeType": "YulAssignment",
															"src": "1560:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1574:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1574:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1577:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1577:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1570:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1570:3:6"
																},
																"nativeSrc": "1570:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1570:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1560:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1560:6:6"
																}
															]
														},
														{
															"nativeSrc": "1591:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1591:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1621:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1621:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1627:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1627:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1617:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1617:3:6"
																},
																"nativeSrc": "1617:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1617:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1595:18:6",
																	"nodeType": "YulTypedName",
																	"src": "1595:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1668:31:6",
																"nodeType": "YulBlock",
																"src": "1668:31:6",
																"statements": [
																	{
																		"nativeSrc": "1670:27:6",
																		"nodeType": "YulAssignment",
																		"src": "1670:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1684:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1684:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1692:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1692:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1680:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1680:3:6"
																			},
																			"nativeSrc": "1680:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1680:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1670:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1648:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "1648:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1641:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1641:6:6"
																},
																"nativeSrc": "1641:26:6",
																"nodeType": "YulFunctionCall",
																"src": "1641:26:6"
															},
															"nativeSrc": "1638:61:6",
															"nodeType": "YulIf",
															"src": "1638:61:6"
														},
														{
															"body": {
																"nativeSrc": "1758:111:6",
																"nodeType": "YulBlock",
																"src": "1758:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1779:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1779:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1786:3:6",
																							"nodeType": "YulLiteral",
																							"src": "1786:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1791:10:6",
																							"nodeType": "YulLiteral",
																							"src": "1791:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1782:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1782:3:6"
																					},
																					"nativeSrc": "1782:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1782:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1772:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1772:6:6"
																			},
																			"nativeSrc": "1772:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1772:31:6"
																		},
																		"nativeSrc": "1772:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1772:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1823:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1823:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1826:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1826:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1816:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1816:6:6"
																			},
																			"nativeSrc": "1816:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1816:15:6"
																		},
																		"nativeSrc": "1816:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1816:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1851:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1851:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1854:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1854:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1844:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1844:6:6"
																			},
																			"nativeSrc": "1844:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1844:15:6"
																		},
																		"nativeSrc": "1844:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1844:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1714:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "1714:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1737:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1737:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1745:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1734:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1734:2:6"
																		},
																		"nativeSrc": "1734:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1734:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1711:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1711:2:6"
																},
																"nativeSrc": "1711:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1711:38:6"
															},
															"nativeSrc": "1708:161:6",
															"nodeType": "YulIf",
															"src": "1708:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1495:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1530:4:6",
														"nodeType": "YulTypedName",
														"src": "1530:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1539:6:6",
														"nodeType": "YulTypedName",
														"src": "1539:6:6",
														"type": ""
													}
												],
												"src": "1495:380:6"
											},
											{
												"body": {
													"nativeSrc": "1936:65:6",
													"nodeType": "YulBlock",
													"src": "1936:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1953:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1953:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1956:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1956:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1946:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1946:6:6"
																},
																"nativeSrc": "1946:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1946:14:6"
															},
															"nativeSrc": "1946:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "1946:14:6"
														},
														{
															"nativeSrc": "1969:26:6",
															"nodeType": "YulAssignment",
															"src": "1969:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1987:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1987:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1990:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1990:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1977:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1977:9:6"
																},
																"nativeSrc": "1977:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1977:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1969:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1969:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1880:121:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1919:3:6",
														"nodeType": "YulTypedName",
														"src": "1919:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1927:4:6",
														"nodeType": "YulTypedName",
														"src": "1927:4:6",
														"type": ""
													}
												],
												"src": "1880:121:6"
											},
											{
												"body": {
													"nativeSrc": "2087:437:6",
													"nodeType": "YulBlock",
													"src": "2087:437:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2120:398:6",
																"nodeType": "YulBlock",
																"src": "2120:398:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2141:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2141:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2144:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2144:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2134:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2134:6:6"
																			},
																			"nativeSrc": "2134:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2134:16:6"
																		},
																		"nativeSrc": "2134:16:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2134:16:6"
																	},
																	{
																		"nativeSrc": "2163:30:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2163:30:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2185:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2185:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2188:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2188:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2175:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2175:9:6"
																			},
																			"nativeSrc": "2175:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2175:18:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2167:4:6",
																				"nodeType": "YulTypedName",
																				"src": "2167:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2206:57:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2206:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2229:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2229:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2239:1:6",
																							"nodeType": "YulLiteral",
																							"src": "2239:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2246:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "2246:10:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2258:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2258:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2242:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2242:3:6"
																							},
																							"nativeSrc": "2242:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2242:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2235:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2235:3:6"
																					},
																					"nativeSrc": "2235:27:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2235:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2225:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2225:3:6"
																			},
																			"nativeSrc": "2225:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2225:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2210:11:6",
																				"nodeType": "YulTypedName",
																				"src": "2210:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2300:23:6",
																			"nodeType": "YulBlock",
																			"src": "2300:23:6",
																			"statements": [
																				{
																					"nativeSrc": "2302:19:6",
																					"nodeType": "YulAssignment",
																					"src": "2302:19:6",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2317:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "2317:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2302:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "2302:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2282:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "2282:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2294:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2294:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2279:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "2279:2:6"
																			},
																			"nativeSrc": "2279:20:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2279:20:6"
																		},
																		"nativeSrc": "2276:47:6",
																		"nodeType": "YulIf",
																		"src": "2276:47:6"
																	},
																	{
																		"nativeSrc": "2336:41:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2336:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2350:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2350:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2360:1:6",
																							"nodeType": "YulLiteral",
																							"src": "2360:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2367:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2367:3:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2372:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2372:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2363:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2363:3:6"
																							},
																							"nativeSrc": "2363:12:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2363:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2356:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2356:3:6"
																					},
																					"nativeSrc": "2356:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2356:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2346:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2346:3:6"
																			},
																			"nativeSrc": "2346:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2346:31:6"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2340:2:6",
																				"nodeType": "YulTypedName",
																				"src": "2340:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2390:24:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2390:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2403:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "2403:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2394:5:6",
																				"nodeType": "YulTypedName",
																				"src": "2394:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2488:20:6",
																			"nodeType": "YulBlock",
																			"src": "2488:20:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2497:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "2497:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2504:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2504:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2490:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2490:6:6"
																						},
																						"nativeSrc": "2490:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2490:16:6"
																					},
																					"nativeSrc": "2490:16:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "2490:16:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2438:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2438:5:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2445:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "2445:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2435:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "2435:2:6"
																			},
																			"nativeSrc": "2435:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2435:13:6"
																		},
																		"nativeSrc": "2427:81:6",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2449:26:6",
																			"nodeType": "YulBlock",
																			"src": "2449:26:6",
																			"statements": [
																				{
																					"nativeSrc": "2451:22:6",
																					"nodeType": "YulAssignment",
																					"src": "2451:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2464:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "2464:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2471:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2471:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2460:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2460:3:6"
																						},
																						"nativeSrc": "2460:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2460:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2451:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "2451:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2431:3:6",
																			"nodeType": "YulBlock",
																			"src": "2431:3:6",
																			"statements": []
																		},
																		"src": "2427:81:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2103:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2103:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2108:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2108:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2100:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2100:2:6"
																},
																"nativeSrc": "2100:11:6",
																"nodeType": "YulFunctionCall",
																"src": "2100:11:6"
															},
															"nativeSrc": "2097:421:6",
															"nodeType": "YulIf",
															"src": "2097:421:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2006:518:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2059:5:6",
														"nodeType": "YulTypedName",
														"src": "2059:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2066:3:6",
														"nodeType": "YulTypedName",
														"src": "2066:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2071:10:6",
														"nodeType": "YulTypedName",
														"src": "2071:10:6",
														"type": ""
													}
												],
												"src": "2006:518:6"
											},
											{
												"body": {
													"nativeSrc": "2614:81:6",
													"nodeType": "YulBlock",
													"src": "2614:81:6",
													"statements": [
														{
															"nativeSrc": "2624:65:6",
															"nodeType": "YulAssignment",
															"src": "2624:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2639:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2639:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2657:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2657:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2660:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "2660:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2653:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2653:3:6"
																								},
																								"nativeSrc": "2653:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2653:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2670:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2670:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2666:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2666:3:6"
																								},
																								"nativeSrc": "2666:6:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2666:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2649:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2649:3:6"
																						},
																						"nativeSrc": "2649:24:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2649:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2645:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2645:3:6"
																				},
																				"nativeSrc": "2645:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2645:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2635:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2635:3:6"
																		},
																		"nativeSrc": "2635:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2635:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2681:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2681:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2684:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2684:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2677:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2677:3:6"
																		},
																		"nativeSrc": "2677:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2677:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2632:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2632:2:6"
																},
																"nativeSrc": "2632:57:6",
																"nodeType": "YulFunctionCall",
																"src": "2632:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2624:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2624:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2529:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2591:4:6",
														"nodeType": "YulTypedName",
														"src": "2591:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2597:3:6",
														"nodeType": "YulTypedName",
														"src": "2597:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2605:4:6",
														"nodeType": "YulTypedName",
														"src": "2605:4:6",
														"type": ""
													}
												],
												"src": "2529:166:6"
											},
											{
												"body": {
													"nativeSrc": "2796:1249:6",
													"nodeType": "YulBlock",
													"src": "2796:1249:6",
													"statements": [
														{
															"nativeSrc": "2806:24:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2806:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2826:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2826:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2820:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2820:5:6"
																},
																"nativeSrc": "2820:10:6",
																"nodeType": "YulFunctionCall",
																"src": "2820:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2810:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2810:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2873:22:6",
																"nodeType": "YulBlock",
																"src": "2873:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2875:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2875:16:6"
																			},
																			"nativeSrc": "2875:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2875:18:6"
																		},
																		"nativeSrc": "2875:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2875:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2845:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2845:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2861:2:6",
																						"nodeType": "YulLiteral",
																						"src": "2861:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2865:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2865:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2857:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:6"
																				},
																				"nativeSrc": "2857:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2869:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2869:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2853:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2853:3:6"
																		},
																		"nativeSrc": "2853:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2853:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2842:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2842:2:6"
																},
																"nativeSrc": "2842:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2842:30:6"
															},
															"nativeSrc": "2839:56:6",
															"nodeType": "YulIf",
															"src": "2839:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2948:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2948:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2986:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "2986:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2980:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2980:5:6"
																				},
																				"nativeSrc": "2980:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2980:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2954:25:6",
																			"nodeType": "YulIdentifier",
																			"src": "2954:25:6"
																		},
																		"nativeSrc": "2954:38:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2954:38:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2994:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2994:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2904:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2904:43:6"
																},
																"nativeSrc": "2904:97:6",
																"nodeType": "YulFunctionCall",
																"src": "2904:97:6"
															},
															"nativeSrc": "2904:97:6",
															"nodeType": "YulExpressionStatement",
															"src": "2904:97:6"
														},
														{
															"nativeSrc": "3010:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3010:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3027:1:6",
																"nodeType": "YulLiteral",
																"src": "3027:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3014:9:6",
																	"nodeType": "YulTypedName",
																	"src": "3014:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3037:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3037:23:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3056:4:6",
																"nodeType": "YulLiteral",
																"src": "3056:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "3041:11:6",
																	"nodeType": "YulTypedName",
																	"src": "3041:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3069:17:6",
															"nodeType": "YulAssignment",
															"src": "3069:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3082:4:6",
																"nodeType": "YulLiteral",
																"src": "3082:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3069:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3069:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3132:656:6",
																		"nodeType": "YulBlock",
																		"src": "3132:656:6",
																		"statements": [
																			{
																				"nativeSrc": "3146:35:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3146:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3165:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "3165:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3177:2:6",
																									"nodeType": "YulLiteral",
																									"src": "3177:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3173:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "3173:3:6"
																							},
																							"nativeSrc": "3173:7:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3173:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3161:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3161:3:6"
																					},
																					"nativeSrc": "3161:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3161:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3150:7:6",
																						"nodeType": "YulTypedName",
																						"src": "3150:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3194:49:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3194:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3238:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3238:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3208:29:6",
																						"nodeType": "YulIdentifier",
																						"src": "3208:29:6"
																					},
																					"nativeSrc": "3208:35:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3208:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3198:6:6",
																						"nodeType": "YulTypedName",
																						"src": "3198:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3256:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3256:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3265:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3265:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3260:1:6",
																						"nodeType": "YulTypedName",
																						"src": "3260:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3343:172:6",
																					"nodeType": "YulBlock",
																					"src": "3343:172:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3368:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3368:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3386:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "3386:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3391:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "3391:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3382:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "3382:3:6"
																												},
																												"nativeSrc": "3382:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "3382:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3376:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "3376:5:6"
																										},
																										"nativeSrc": "3376:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3376:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3361:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3361:6:6"
																								},
																								"nativeSrc": "3361:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3361:42:6"
																							},
																							"nativeSrc": "3361:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "3361:42:6"
																						},
																						{
																							"nativeSrc": "3420:24:6",
																							"nodeType": "YulAssignment",
																							"src": "3420:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3434:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3434:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3442:1:6",
																										"nodeType": "YulLiteral",
																										"src": "3442:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3430:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3430:3:6"
																								},
																								"nativeSrc": "3430:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3430:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3420:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3420:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3461:40:6",
																							"nodeType": "YulAssignment",
																							"src": "3461:40:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3478:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "3478:9:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3489:11:6",
																										"nodeType": "YulIdentifier",
																										"src": "3489:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3474:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3474:3:6"
																								},
																								"nativeSrc": "3474:27:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3474:27:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3461:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "3461:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3290:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "3290:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3293:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "3293:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3287:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "3287:2:6"
																					},
																					"nativeSrc": "3287:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3287:14:6"
																				},
																				"nativeSrc": "3279:236:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3302:28:6",
																					"nodeType": "YulBlock",
																					"src": "3302:28:6",
																					"statements": [
																						{
																							"nativeSrc": "3304:24:6",
																							"nodeType": "YulAssignment",
																							"src": "3304:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3313:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "3313:1:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3316:11:6",
																										"nodeType": "YulIdentifier",
																										"src": "3316:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3309:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3309:3:6"
																								},
																								"nativeSrc": "3309:19:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3309:19:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3304:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "3304:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3283:3:6",
																					"nodeType": "YulBlock",
																					"src": "3283:3:6",
																					"statements": []
																				},
																				"src": "3279:236:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "3563:166:6",
																					"nodeType": "YulBlock",
																					"src": "3563:166:6",
																					"statements": [
																						{
																							"nativeSrc": "3581:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3581:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3608:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "3608:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3613:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3613:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3604:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3604:3:6"
																										},
																										"nativeSrc": "3604:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3604:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3598:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3598:5:6"
																								},
																								"nativeSrc": "3598:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3598:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3585:9:6",
																									"nodeType": "YulTypedName",
																									"src": "3585:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3648:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3648:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3660:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3660:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3687:1:6",
																																				"nodeType": "YulLiteral",
																																				"src": "3687:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3690:6:6",
																																				"nodeType": "YulIdentifier",
																																				"src": "3690:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3683:3:6",
																																			"nodeType": "YulIdentifier",
																																			"src": "3683:3:6"
																																		},
																																		"nativeSrc": "3683:14:6",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3683:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3699:3:6",
																																		"nodeType": "YulLiteral",
																																		"src": "3699:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3679:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "3679:3:6"
																																},
																																"nativeSrc": "3679:24:6",
																																"nodeType": "YulFunctionCall",
																																"src": "3679:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3709:1:6",
																																		"nodeType": "YulLiteral",
																																		"src": "3709:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3705:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "3705:3:6"
																																},
																																"nativeSrc": "3705:6:6",
																																"nodeType": "YulFunctionCall",
																																"src": "3705:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3675:3:6",
																															"nodeType": "YulIdentifier",
																															"src": "3675:3:6"
																														},
																														"nativeSrc": "3675:37:6",
																														"nodeType": "YulFunctionCall",
																														"src": "3675:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3671:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "3671:3:6"
																												},
																												"nativeSrc": "3671:42:6",
																												"nodeType": "YulFunctionCall",
																												"src": "3671:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3656:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3656:3:6"
																										},
																										"nativeSrc": "3656:58:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3656:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3641:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3641:6:6"
																								},
																								"nativeSrc": "3641:74:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3641:74:6"
																							},
																							"nativeSrc": "3641:74:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "3641:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3534:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "3534:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3543:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "3543:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3531:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "3531:2:6"
																					},
																					"nativeSrc": "3531:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3531:19:6"
																				},
																				"nativeSrc": "3528:201:6",
																				"nodeType": "YulIf",
																				"src": "3528:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3749:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3749:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3763:1:6",
																											"nodeType": "YulLiteral",
																											"src": "3763:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3766:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "3766:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3759:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "3759:3:6"
																									},
																									"nativeSrc": "3759:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "3759:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3775:1:6",
																									"nodeType": "YulLiteral",
																									"src": "3775:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3755:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "3755:3:6"
																							},
																							"nativeSrc": "3755:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3755:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3742:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3742:6:6"
																					},
																					"nativeSrc": "3742:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3742:36:6"
																				},
																				"nativeSrc": "3742:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3742:36:6"
																			}
																		]
																	},
																	"nativeSrc": "3125:663:6",
																	"nodeType": "YulCase",
																	"src": "3125:663:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3130:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3130:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3805:234:6",
																		"nodeType": "YulBlock",
																		"src": "3805:234:6",
																		"statements": [
																			{
																				"nativeSrc": "3819:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3819:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3832:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3832:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3823:5:6",
																						"nodeType": "YulTypedName",
																						"src": "3823:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3868:67:6",
																					"nodeType": "YulBlock",
																					"src": "3868:67:6",
																					"statements": [
																						{
																							"nativeSrc": "3886:35:6",
																							"nodeType": "YulAssignment",
																							"src": "3886:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3905:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "3905:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3910:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3910:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3901:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3901:3:6"
																										},
																										"nativeSrc": "3901:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3901:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3895:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3895:5:6"
																								},
																								"nativeSrc": "3895:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3895:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3886:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3886:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3849:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3849:6:6"
																				},
																				"nativeSrc": "3846:89:6",
																				"nodeType": "YulIf",
																				"src": "3846:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3955:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3955:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4014:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "4014:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4021:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4021:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3961:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "3961:52:6"
																							},
																							"nativeSrc": "3961:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3961:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3948:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3948:6:6"
																					},
																					"nativeSrc": "3948:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3948:81:6"
																				},
																				"nativeSrc": "3948:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3948:81:6"
																			}
																		]
																	},
																	"nativeSrc": "3797:242:6",
																	"nodeType": "YulCase",
																	"src": "3797:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3105:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3105:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3113:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3113:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3102:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3102:2:6"
																},
																"nativeSrc": "3102:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3102:14:6"
															},
															"nativeSrc": "3095:944:6",
															"nodeType": "YulSwitch",
															"src": "3095:944:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2700:1345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2781:4:6",
														"nodeType": "YulTypedName",
														"src": "2781:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2787:3:6",
														"nodeType": "YulTypedName",
														"src": "2787:3:6",
														"type": ""
													}
												],
												"src": "2700:1345:6"
											},
											{
												"body": {
													"nativeSrc": "4082:95:6",
													"nodeType": "YulBlock",
													"src": "4082:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4099:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4099:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4106:3:6",
																				"nodeType": "YulLiteral",
																				"src": "4106:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4111:10:6",
																				"nodeType": "YulLiteral",
																				"src": "4111:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4102:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4102:3:6"
																		},
																		"nativeSrc": "4102:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4102:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4092:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4092:6:6"
																},
																"nativeSrc": "4092:31:6",
																"nodeType": "YulFunctionCall",
																"src": "4092:31:6"
															},
															"nativeSrc": "4092:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "4092:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4139:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4139:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4142:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4142:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4132:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4132:6:6"
																},
																"nativeSrc": "4132:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4132:15:6"
															},
															"nativeSrc": "4132:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4132:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4163:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4163:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4166:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4166:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4156:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4156:6:6"
																},
																"nativeSrc": "4156:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4156:15:6"
															},
															"nativeSrc": "4156:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4156:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4050:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4050:127:6"
											},
											{
												"body": {
													"nativeSrc": "4246:352:6",
													"nodeType": "YulBlock",
													"src": "4246:352:6",
													"statements": [
														{
															"nativeSrc": "4256:16:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4256:16:6",
															"value": {
																"kind": "number",
																"nativeSrc": "4271:1:6",
																"nodeType": "YulLiteral",
																"src": "4271:1:6",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "4260:7:6",
																	"nodeType": "YulTypedName",
																	"src": "4260:7:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4281:10:6",
															"nodeType": "YulAssignment",
															"src": "4281:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "4290:1:6",
																"nodeType": "YulLiteral",
																"src": "4290:1:6",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4281:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4281:5:6"
																}
															]
														},
														{
															"nativeSrc": "4300:13:6",
															"nodeType": "YulAssignment",
															"src": "4300:13:6",
															"value": {
																"name": "_base",
																"nativeSrc": "4308:5:6",
																"nodeType": "YulIdentifier",
																"src": "4308:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "4300:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4300:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4364:228:6",
																"nodeType": "YulBlock",
																"src": "4364:228:6",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "4409:22:6",
																			"nodeType": "YulBlock",
																			"src": "4409:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "4411:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "4411:16:6"
																						},
																						"nativeSrc": "4411:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4411:18:6"
																					},
																					"nativeSrc": "4411:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "4411:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4384:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "4384:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4398:1:6",
																									"nodeType": "YulLiteral",
																									"src": "4398:1:6",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4394:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "4394:3:6"
																							},
																							"nativeSrc": "4394:6:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4394:6:6"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "4402:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4402:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "4390:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4390:3:6"
																					},
																					"nativeSrc": "4390:17:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4390:17:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "4381:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "4381:2:6"
																			},
																			"nativeSrc": "4381:27:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4381:27:6"
																		},
																		"nativeSrc": "4378:53:6",
																		"nodeType": "YulIf",
																		"src": "4378:53:6"
																	},
																	{
																		"body": {
																			"nativeSrc": "4470:29:6",
																			"nodeType": "YulBlock",
																			"src": "4470:29:6",
																			"statements": [
																				{
																					"nativeSrc": "4472:25:6",
																					"nodeType": "YulAssignment",
																					"src": "4472:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "4485:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "4485:5:6"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "4492:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "4492:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "4481:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4481:3:6"
																						},
																						"nativeSrc": "4481:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4481:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "4472:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "4472:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "4451:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "4451:8:6"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "4461:7:6",
																					"nodeType": "YulIdentifier",
																					"src": "4461:7:6"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4447:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4447:3:6"
																			},
																			"nativeSrc": "4447:22:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4447:22:6"
																		},
																		"nativeSrc": "4444:55:6",
																		"nodeType": "YulIf",
																		"src": "4444:55:6"
																	},
																	{
																		"nativeSrc": "4512:23:6",
																		"nodeType": "YulAssignment",
																		"src": "4512:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4524:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "4524:4:6"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "4530:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "4530:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "4520:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4520:3:6"
																			},
																			"nativeSrc": "4520:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4520:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "4512:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4512:4:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4548:34:6",
																		"nodeType": "YulAssignment",
																		"src": "4548:34:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "4564:7:6",
																					"nodeType": "YulIdentifier",
																					"src": "4564:7:6"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "4573:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "4573:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "4560:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4560:3:6"
																			},
																			"nativeSrc": "4560:22:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4560:22:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4548:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "4548:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "4333:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "4333:8:6"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "4343:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "4343:7:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4330:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4330:2:6"
																},
																"nativeSrc": "4330:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4330:21:6"
															},
															"nativeSrc": "4322:270:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4352:3:6",
																"nodeType": "YulBlock",
																"src": "4352:3:6",
																"statements": []
															},
															"pre": {
																"nativeSrc": "4326:3:6",
																"nodeType": "YulBlock",
																"src": "4326:3:6",
																"statements": []
															},
															"src": "4322:270:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "4182:416:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "4210:5:6",
														"nodeType": "YulTypedName",
														"src": "4210:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4217:8:6",
														"nodeType": "YulTypedName",
														"src": "4217:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4230:5:6",
														"nodeType": "YulTypedName",
														"src": "4230:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "4237:4:6",
														"nodeType": "YulTypedName",
														"src": "4237:4:6",
														"type": ""
													}
												],
												"src": "4182:416:6"
											},
											{
												"body": {
													"nativeSrc": "4662:747:6",
													"nodeType": "YulBlock",
													"src": "4662:747:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4700:52:6",
																"nodeType": "YulBlock",
																"src": "4700:52:6",
																"statements": [
																	{
																		"nativeSrc": "4714:10:6",
																		"nodeType": "YulAssignment",
																		"src": "4714:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4723:1:6",
																			"nodeType": "YulLiteral",
																			"src": "4723:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4714:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4714:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4737:5:6",
																		"nodeType": "YulLeave",
																		"src": "4737:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "4682:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "4682:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4675:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4675:6:6"
																},
																"nativeSrc": "4675:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4675:16:6"
															},
															"nativeSrc": "4672:80:6",
															"nodeType": "YulIf",
															"src": "4672:80:6"
														},
														{
															"body": {
																"nativeSrc": "4785:52:6",
																"nodeType": "YulBlock",
																"src": "4785:52:6",
																"statements": [
																	{
																		"nativeSrc": "4799:10:6",
																		"nodeType": "YulAssignment",
																		"src": "4799:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4808:1:6",
																			"nodeType": "YulLiteral",
																			"src": "4808:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4799:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4799:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4822:5:6",
																		"nodeType": "YulLeave",
																		"src": "4822:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4771:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4771:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4764:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4764:6:6"
																},
																"nativeSrc": "4764:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4764:12:6"
															},
															"nativeSrc": "4761:76:6",
															"nodeType": "YulIf",
															"src": "4761:76:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4873:52:6",
																		"nodeType": "YulBlock",
																		"src": "4873:52:6",
																		"statements": [
																			{
																				"nativeSrc": "4887:10:6",
																				"nodeType": "YulAssignment",
																				"src": "4887:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4896:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4896:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4887:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4887:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4910:5:6",
																				"nodeType": "YulLeave",
																				"src": "4910:5:6"
																			}
																		]
																	},
																	"nativeSrc": "4866:59:6",
																	"nodeType": "YulCase",
																	"src": "4866:59:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4871:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4871:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4941:123:6",
																		"nodeType": "YulBlock",
																		"src": "4941:123:6",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "4976:22:6",
																					"nodeType": "YulBlock",
																					"src": "4976:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "4978:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "4978:16:6"
																								},
																								"nativeSrc": "4978:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4978:18:6"
																							},
																							"nativeSrc": "4978:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "4978:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4961:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "4961:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4971:3:6",
																							"nodeType": "YulLiteral",
																							"src": "4971:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "4958:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4958:2:6"
																					},
																					"nativeSrc": "4958:17:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4958:17:6"
																				},
																				"nativeSrc": "4955:43:6",
																				"nodeType": "YulIf",
																				"src": "4955:43:6"
																			},
																			{
																				"nativeSrc": "5011:25:6",
																				"nodeType": "YulAssignment",
																				"src": "5011:25:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "5024:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "5024:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5034:1:6",
																							"nodeType": "YulLiteral",
																							"src": "5034:1:6",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5020:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5020:3:6"
																					},
																					"nativeSrc": "5020:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5020:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "5011:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5011:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "5049:5:6",
																				"nodeType": "YulLeave",
																				"src": "5049:5:6"
																			}
																		]
																	},
																	"nativeSrc": "4934:130:6",
																	"nodeType": "YulCase",
																	"src": "4934:130:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4939:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4939:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "4853:4:6",
																"nodeType": "YulIdentifier",
																"src": "4853:4:6"
															},
															"nativeSrc": "4846:218:6",
															"nodeType": "YulSwitch",
															"src": "4846:218:6"
														},
														{
															"body": {
																"nativeSrc": "5162:70:6",
																"nodeType": "YulBlock",
																"src": "5162:70:6",
																"statements": [
																	{
																		"nativeSrc": "5176:28:6",
																		"nodeType": "YulAssignment",
																		"src": "5176:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5189:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "5189:4:6"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "5195:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "5195:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "5185:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5185:3:6"
																			},
																			"nativeSrc": "5185:19:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5185:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "5176:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5176:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5217:5:6",
																		"nodeType": "YulLeave",
																		"src": "5217:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "5086:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "5086:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5092:2:6",
																						"nodeType": "YulLiteral",
																						"src": "5092:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5083:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5083:2:6"
																				},
																				"nativeSrc": "5083:12:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5083:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "5100:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "5100:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5110:2:6",
																						"nodeType": "YulLiteral",
																						"src": "5110:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5097:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5097:2:6"
																				},
																				"nativeSrc": "5097:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5079:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5079:3:6"
																		},
																		"nativeSrc": "5079:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5079:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "5123:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "5123:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5129:3:6",
																						"nodeType": "YulLiteral",
																						"src": "5129:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5120:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5120:2:6"
																				},
																				"nativeSrc": "5120:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5120:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "5138:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "5138:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5148:2:6",
																						"nodeType": "YulLiteral",
																						"src": "5148:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5135:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5135:2:6"
																				},
																				"nativeSrc": "5135:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5135:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5116:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5116:3:6"
																		},
																		"nativeSrc": "5116:36:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5116:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5076:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5076:2:6"
																},
																"nativeSrc": "5076:77:6",
																"nodeType": "YulFunctionCall",
																"src": "5076:77:6"
															},
															"nativeSrc": "5073:159:6",
															"nodeType": "YulIf",
															"src": "5073:159:6"
														},
														{
															"nativeSrc": "5241:57:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5241:57:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "5283:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5283:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "5289:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "5289:8:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "5264:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5264:18:6"
																},
																"nativeSrc": "5264:34:6",
																"nodeType": "YulFunctionCall",
																"src": "5264:34:6"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "5245:7:6",
																	"nodeType": "YulTypedName",
																	"src": "5245:7:6",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "5254:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5254:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5343:22:6",
																"nodeType": "YulBlock",
																"src": "5343:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5345:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5345:16:6"
																			},
																			"nativeSrc": "5345:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5345:18:6"
																		},
																		"nativeSrc": "5345:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5345:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "5313:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "5313:7:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5330:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5330:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5326:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5326:3:6"
																				},
																				"nativeSrc": "5326:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5326:6:6"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "5334:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5334:6:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "5322:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5322:3:6"
																		},
																		"nativeSrc": "5322:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5322:19:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5310:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5310:2:6"
																},
																"nativeSrc": "5310:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5310:32:6"
															},
															"nativeSrc": "5307:58:6",
															"nodeType": "YulIf",
															"src": "5307:58:6"
														},
														{
															"nativeSrc": "5374:29:6",
															"nodeType": "YulAssignment",
															"src": "5374:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "5387:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "5387:7:6"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "5396:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5396:6:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5383:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5383:3:6"
																},
																"nativeSrc": "5383:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5383:20:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5374:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5374:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "4603:806:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4633:4:6",
														"nodeType": "YulTypedName",
														"src": "4633:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4639:8:6",
														"nodeType": "YulTypedName",
														"src": "4639:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4652:5:6",
														"nodeType": "YulTypedName",
														"src": "4652:5:6",
														"type": ""
													}
												],
												"src": "4603:806:6"
											},
											{
												"body": {
													"nativeSrc": "5482:72:6",
													"nodeType": "YulBlock",
													"src": "5482:72:6",
													"statements": [
														{
															"nativeSrc": "5492:56:6",
															"nodeType": "YulAssignment",
															"src": "5492:56:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "5522:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5522:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "5532:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "5532:8:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5542:4:6",
																				"nodeType": "YulLiteral",
																				"src": "5542:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5528:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5528:3:6"
																		},
																		"nativeSrc": "5528:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5528:19:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "5501:20:6",
																	"nodeType": "YulIdentifier",
																	"src": "5501:20:6"
																},
																"nativeSrc": "5501:47:6",
																"nodeType": "YulFunctionCall",
																"src": "5501:47:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5492:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5492:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "5414:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "5453:4:6",
														"nodeType": "YulTypedName",
														"src": "5453:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5459:8:6",
														"nodeType": "YulTypedName",
														"src": "5459:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5472:5:6",
														"nodeType": "YulTypedName",
														"src": "5472:5:6",
														"type": ""
													}
												],
												"src": "5414:140:6"
											},
											{
												"body": {
													"nativeSrc": "5611:116:6",
													"nodeType": "YulBlock",
													"src": "5611:116:6",
													"statements": [
														{
															"nativeSrc": "5621:20:6",
															"nodeType": "YulAssignment",
															"src": "5621:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5636:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5636:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5639:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5639:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5632:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5632:3:6"
																},
																"nativeSrc": "5632:9:6",
																"nodeType": "YulFunctionCall",
																"src": "5632:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5621:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5621:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5699:22:6",
																"nodeType": "YulBlock",
																"src": "5699:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5701:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5701:16:6"
																			},
																			"nativeSrc": "5701:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5701:18:6"
																		},
																		"nativeSrc": "5701:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5701:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5670:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "5670:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5663:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5663:6:6"
																				},
																				"nativeSrc": "5663:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5663:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5677:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "5677:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5684:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "5684:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5693:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "5693:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5680:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "5680:3:6"
																						},
																						"nativeSrc": "5680:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "5680:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5674:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5674:2:6"
																				},
																				"nativeSrc": "5674:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5674:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5660:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5660:2:6"
																		},
																		"nativeSrc": "5660:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5660:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5653:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5653:6:6"
																},
																"nativeSrc": "5653:45:6",
																"nodeType": "YulFunctionCall",
																"src": "5653:45:6"
															},
															"nativeSrc": "5650:71:6",
															"nodeType": "YulIf",
															"src": "5650:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5559:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5590:1:6",
														"nodeType": "YulTypedName",
														"src": "5590:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5593:1:6",
														"nodeType": "YulTypedName",
														"src": "5593:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5599:7:6",
														"nodeType": "YulTypedName",
														"src": "5599:7:6",
														"type": ""
													}
												],
												"src": "5559:168:6"
											},
											{
												"body": {
													"nativeSrc": "5833:102:6",
													"nodeType": "YulBlock",
													"src": "5833:102:6",
													"statements": [
														{
															"nativeSrc": "5843:26:6",
															"nodeType": "YulAssignment",
															"src": "5843:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5855:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5855:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5866:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5866:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5851:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5851:3:6"
																},
																"nativeSrc": "5851:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5851:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5843:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5843:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5885:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5885:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5900:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5900:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5916:3:6",
																								"nodeType": "YulLiteral",
																								"src": "5916:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5921:1:6",
																								"nodeType": "YulLiteral",
																								"src": "5921:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5912:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "5912:3:6"
																						},
																						"nativeSrc": "5912:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "5912:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5925:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5925:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5908:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5908:3:6"
																				},
																				"nativeSrc": "5908:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5908:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5896:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5896:3:6"
																		},
																		"nativeSrc": "5896:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5896:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5878:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5878:6:6"
																},
																"nativeSrc": "5878:51:6",
																"nodeType": "YulFunctionCall",
																"src": "5878:51:6"
															},
															"nativeSrc": "5878:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "5878:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5732:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5802:9:6",
														"nodeType": "YulTypedName",
														"src": "5802:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5813:6:6",
														"nodeType": "YulTypedName",
														"src": "5813:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5824:4:6",
														"nodeType": "YulTypedName",
														"src": "5824:4:6",
														"type": ""
													}
												],
												"src": "5732:203:6"
											},
											{
												"body": {
													"nativeSrc": "5988:77:6",
													"nodeType": "YulBlock",
													"src": "5988:77:6",
													"statements": [
														{
															"nativeSrc": "5998:16:6",
															"nodeType": "YulAssignment",
															"src": "5998:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6009:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6009:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6012:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6012:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6005:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6005:3:6"
																},
																"nativeSrc": "6005:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6005:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5998:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5998:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6037:22:6",
																"nodeType": "YulBlock",
																"src": "6037:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6039:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6039:16:6"
																			},
																			"nativeSrc": "6039:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6039:18:6"
																		},
																		"nativeSrc": "6039:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6039:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6029:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6029:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6032:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6032:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6026:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6026:2:6"
																},
																"nativeSrc": "6026:10:6",
																"nodeType": "YulFunctionCall",
																"src": "6026:10:6"
															},
															"nativeSrc": "6023:36:6",
															"nodeType": "YulIf",
															"src": "6023:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5940:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5971:1:6",
														"nodeType": "YulTypedName",
														"src": "5971:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5974:1:6",
														"nodeType": "YulTypedName",
														"src": "5974:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5980:3:6",
														"nodeType": "YulTypedName",
														"src": "5980:3:6",
														"type": ""
													}
												],
												"src": "5940:125:6"
											},
											{
												"body": {
													"nativeSrc": "6227:188:6",
													"nodeType": "YulBlock",
													"src": "6227:188:6",
													"statements": [
														{
															"nativeSrc": "6237:26:6",
															"nodeType": "YulAssignment",
															"src": "6237:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6249:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6249:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6260:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6260:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6245:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6245:3:6"
																},
																"nativeSrc": "6245:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6245:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6237:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6237:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6279:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6279:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6294:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6294:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6310:3:6",
																								"nodeType": "YulLiteral",
																								"src": "6310:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6315:1:6",
																								"nodeType": "YulLiteral",
																								"src": "6315:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6306:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6306:3:6"
																						},
																						"nativeSrc": "6306:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6306:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6319:1:6",
																						"nodeType": "YulLiteral",
																						"src": "6319:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6302:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6302:3:6"
																				},
																				"nativeSrc": "6302:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6302:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6290:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6290:3:6"
																		},
																		"nativeSrc": "6290:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6290:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6272:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6272:6:6"
																},
																"nativeSrc": "6272:51:6",
																"nodeType": "YulFunctionCall",
																"src": "6272:51:6"
															},
															"nativeSrc": "6272:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "6272:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6343:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6343:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6354:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6339:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6339:3:6"
																		},
																		"nativeSrc": "6339:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6339:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6359:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6359:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6332:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6332:6:6"
																},
																"nativeSrc": "6332:34:6",
																"nodeType": "YulFunctionCall",
																"src": "6332:34:6"
															},
															"nativeSrc": "6332:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "6332:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6386:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6386:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6397:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6397:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6382:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6382:3:6"
																		},
																		"nativeSrc": "6382:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6382:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6402:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6402:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6375:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6375:6:6"
																},
																"nativeSrc": "6375:34:6",
																"nodeType": "YulFunctionCall",
																"src": "6375:34:6"
															},
															"nativeSrc": "6375:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "6375:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6070:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6180:9:6",
														"nodeType": "YulTypedName",
														"src": "6180:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6191:6:6",
														"nodeType": "YulTypedName",
														"src": "6191:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6199:6:6",
														"nodeType": "YulTypedName",
														"src": "6199:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6207:6:6",
														"nodeType": "YulTypedName",
														"src": "6207:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6218:4:6",
														"nodeType": "YulTypedName",
														"src": "6218:4:6",
														"type": ""
													}
												],
												"src": "6070:345:6"
											},
											{
												"body": {
													"nativeSrc": "6521:76:6",
													"nodeType": "YulBlock",
													"src": "6521:76:6",
													"statements": [
														{
															"nativeSrc": "6531:26:6",
															"nodeType": "YulAssignment",
															"src": "6531:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6543:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6543:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6554:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6554:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6539:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6539:3:6"
																},
																"nativeSrc": "6539:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6539:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6531:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6531:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6573:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6573:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6584:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6584:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6566:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6566:6:6"
																},
																"nativeSrc": "6566:25:6",
																"nodeType": "YulFunctionCall",
																"src": "6566:25:6"
															},
															"nativeSrc": "6566:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "6566:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6420:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6490:9:6",
														"nodeType": "YulTypedName",
														"src": "6490:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6501:6:6",
														"nodeType": "YulTypedName",
														"src": "6501:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6512:4:6",
														"nodeType": "YulTypedName",
														"src": "6512:4:6",
														"type": ""
													}
												],
												"src": "6420:177:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := mload(headStart)\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610c53380380610c5383398101604081905261002e91610284565b8181600361003c8382610370565b5060046100498282610370565b5050506100783361005e61008060201b60201c565b61006990600a610525565b610073908661053a565b610085565b505050610564565b601290565b6001600160a01b0382166100b35760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b6100be5f83836100c2565b5050565b6001600160a01b0383166100ec578060025f8282546100e19190610551565b9091555061015c9050565b6001600160a01b0383165f908152602081905260409020548181101561013e5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100aa565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661017857600280548290039055610196565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516101db91815260200190565b60405180910390a3505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261020b575f80fd5b81516001600160401b0380821115610225576102256101e8565b604051601f8301601f19908116603f0116810190828211818310171561024d5761024d6101e8565b81604052838152866020858801011115610265575f80fd5b8360208701602083015e5f602085830101528094505050505092915050565b5f805f60608486031215610296575f80fd5b835160208501519093506001600160401b03808211156102b4575f80fd5b6102c0878388016101fc565b935060408601519150808211156102d5575f80fd5b506102e2868287016101fc565b9150509250925092565b600181811c9082168061030057607f821691505b60208210810361031e57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561036b57805f5260205f20601f840160051c810160208510156103495750805b601f840160051c820191505b81811015610368575f8155600101610355565b50505b505050565b81516001600160401b03811115610389576103896101e8565b61039d8161039784546102ec565b84610324565b602080601f8311600181146103d0575f84156103b95750858301515b5f19600386901b1c1916600185901b178555610427565b5f85815260208120601f198616915b828110156103fe578886015182559484019460019091019084016103df565b508582101561041b57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b634e487b7160e01b5f52601160045260245ffd5b600181815b8085111561047d57815f19048211156104635761046361042f565b8085161561047057918102915b93841c9390800290610448565b509250929050565b5f826104935750600161051f565b8161049f57505f61051f565b81600181146104b557600281146104bf576104db565b600191505061051f565b60ff8411156104d0576104d061042f565b50506001821b61051f565b5060208310610133831016604e8410600b84101617156104fe575081810a61051f565b6105088383610443565b805f190482111561051b5761051b61042f565b0290505b92915050565b5f61053360ff841683610485565b9392505050565b808202811582820484141761051f5761051f61042f565b8082018082111561051f5761051f61042f565b6106e2806105715f395ff3fe608060405234801561000f575f80fd5b5060043610610090575f3560e01c8063313ce56711610063578063313ce567146100fa57806370a082311461010957806395d89b4114610131578063a9059cbb14610139578063dd62ed3e1461014c575f80fd5b806306fdde0314610094578063095ea7b3146100b257806318160ddd146100d557806323b872dd146100e7575b5f80fd5b61009c610184565b6040516100a99190610553565b60405180910390f35b6100c56100c03660046105a3565b610214565b60405190151581526020016100a9565b6002545b6040519081526020016100a9565b6100c56100f53660046105cb565b61022d565b604051601281526020016100a9565b6100d9610117366004610604565b6001600160a01b03165f9081526020819052604090205490565b61009c610250565b6100c56101473660046105a3565b61025f565b6100d961015a366004610624565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b60606003805461019390610655565b80601f01602080910402602001604051908101604052809291908181526020018280546101bf90610655565b801561020a5780601f106101e15761010080835404028352916020019161020a565b820191905f5260205f20905b8154815290600101906020018083116101ed57829003601f168201915b5050505050905090565b5f3361022181858561026c565b60019150505b92915050565b5f3361023a85828561027e565b6102458585856102fe565b506001949350505050565b60606004805461019390610655565b5f336102218185856102fe565b610279838383600161035b565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146102f857818110156102ea57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6102f884848484035f61035b565b50505050565b6001600160a01b03831661032757604051634b637e8f60e11b81525f60048201526024016102e1565b6001600160a01b0382166103505760405163ec442f0560e01b81525f60048201526024016102e1565b61027983838361042d565b6001600160a01b0384166103845760405163e602df0560e01b81525f60048201526024016102e1565b6001600160a01b0383166103ad57604051634a1406b160e11b81525f60048201526024016102e1565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156102f857826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161041f91815260200190565b60405180910390a350505050565b6001600160a01b038316610457578060025f82825461044c919061068d565b909155506104c79050565b6001600160a01b0383165f90815260208190526040902054818110156104a95760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102e1565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166104e357600280548290039055610501565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161054691815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461059e575f80fd5b919050565b5f80604083850312156105b4575f80fd5b6105bd83610588565b946020939093013593505050565b5f805f606084860312156105dd575f80fd5b6105e684610588565b92506105f460208501610588565b9150604084013590509250925092565b5f60208284031215610614575f80fd5b61061d82610588565b9392505050565b5f8060408385031215610635575f80fd5b61063e83610588565b915061064c60208401610588565b90509250929050565b600181811c9082168061066957607f821691505b60208210810361068757634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561022757634e487b7160e01b5f52601160045260245ffdfea26469706673582212204bd5d20a6ab90558adbcc50d5d8979f92f87ffaa2c524a0d525b2842a5ca60f264736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC53 CODESIZE SUB DUP1 PUSH2 0xC53 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x284 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 PUSH2 0x3C DUP4 DUP3 PUSH2 0x370 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x49 DUP3 DUP3 PUSH2 0x370 JUMP JUMPDEST POP POP POP PUSH2 0x78 CALLER PUSH2 0x5E PUSH2 0x80 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x69 SWAP1 PUSH1 0xA PUSH2 0x525 JUMP JUMPDEST PUSH2 0x73 SWAP1 DUP7 PUSH2 0x53A JUMP JUMPDEST PUSH2 0x85 JUMP JUMPDEST POP POP POP PUSH2 0x564 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE PUSH0 DUP4 DUP4 PUSH2 0xC2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x551 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x15C SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x13E JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x178 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x196 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x225 JUMPI PUSH2 0x225 PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x24D JUMPI PUSH2 0x24D PUSH2 0x1E8 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x265 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x296 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2C0 DUP8 DUP4 DUP9 ADD PUSH2 0x1FC JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 DUP7 DUP3 DUP8 ADD PUSH2 0x1FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x300 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x31E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x36B JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x349 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x368 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x355 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x389 JUMPI PUSH2 0x389 PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x39D DUP2 PUSH2 0x397 DUP5 SLOAD PUSH2 0x2EC JUMP JUMPDEST DUP5 PUSH2 0x324 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3D0 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x3B9 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x427 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3FE JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x3DF JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x41B JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x47D JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x463 JUMPI PUSH2 0x463 PUSH2 0x42F JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x470 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x448 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x493 JUMPI POP PUSH1 0x1 PUSH2 0x51F JUMP JUMPDEST DUP2 PUSH2 0x49F JUMPI POP PUSH0 PUSH2 0x51F JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4B5 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4BF JUMPI PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x51F JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x4D0 JUMPI PUSH2 0x4D0 PUSH2 0x42F JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x51F JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x4FE JUMPI POP DUP2 DUP2 EXP PUSH2 0x51F JUMP JUMPDEST PUSH2 0x508 DUP4 DUP4 PUSH2 0x443 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x51B JUMPI PUSH2 0x51B PUSH2 0x42F JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x533 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x485 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x51F JUMPI PUSH2 0x51F PUSH2 0x42F JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x51F JUMPI PUSH2 0x51F PUSH2 0x42F JUMP JUMPDEST PUSH2 0x6E2 DUP1 PUSH2 0x571 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x14C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x604 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9C PUSH2 0x250 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x193 SWAP1 PUSH2 0x655 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BF SWAP1 PUSH2 0x655 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x221 DUP2 DUP6 DUP6 PUSH2 0x26C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x23A DUP6 DUP3 DUP6 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x245 DUP6 DUP6 DUP6 PUSH2 0x2FE JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x193 SWAP1 PUSH2 0x655 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x221 DUP2 DUP6 DUP6 PUSH2 0x2FE JUMP JUMPDEST PUSH2 0x279 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x35B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x2F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2F8 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x35B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x327 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x350 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0x279 DUP4 DUP4 DUP4 PUSH2 0x42D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x384 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x2F8 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x457 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x68D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4C7 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4E3 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x501 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x546 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x59E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5BD DUP4 PUSH2 0x588 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5DD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5E6 DUP5 PUSH2 0x588 JUMP JUMPDEST SWAP3 POP PUSH2 0x5F4 PUSH1 0x20 DUP6 ADD PUSH2 0x588 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x614 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61D DUP3 PUSH2 0x588 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x635 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x63E DUP4 PUSH2 0x588 JUMP JUMPDEST SWAP2 POP PUSH2 0x64C PUSH1 0x20 DUP5 ADD PUSH2 0x588 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x669 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x687 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x227 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xD5 0xD2 EXP PUSH11 0xB90558ADBCC50D5D8979F9 0x2F DUP8 SELFDESTRUCT 0xAA 0x2C MSTORE BLOBBASEFEE 0xD MSTORE JUMPDEST 0x28 TIMESTAMP 0xA5 0xCA PUSH1 0xF2 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "116:198:5:-:0;;;150:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;233:4;239:6;1962:5:1;:13;233:4:5;1962:5:1;:13;:::i;:::-;-1:-1:-1;1985:7:1;:17;1995:7;1985;:17;:::i;:::-;;1896:113;;257:48:5::1;263:10;294;:8;;;:10;;:::i;:::-;290:14;::::0;:2:::1;:14;:::i;:::-;275:29;::::0;:12;:29:::1;:::i;:::-;257:5;:48::i;:::-;150:162:::0;;;116:198;;3002:82:1;3075:2;;3002:82::o;7721:208::-;-1:-1:-1;;;;;7791:21:1;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:1;;7864:1;7835:32;;;5878:51:6;5851:18;;7835:32:1;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:1;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:1;;-1:-1:-1;6356:540:1;;-1:-1:-1;;;;;6570:15:1;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:1;;-1:-1:-1;;;;;6290:32:6;;6649:50:1;;;6272:51:6;6339:18;;;6332:34;;;6382:18;;;6375:34;;;6245:18;;6649:50:1;6070:345:6;6599:115:1;-1:-1:-1;;;;;6834:15:1;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:1;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:1;7355:4;-1:-1:-1;;;;;7346:25:1;;7365:5;7346:25;;;;6566::6;;6554:2;6539:18;;6420:177;7346:25:1;;;;;;;;6271:1107;;;:::o;14:127:6:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:716;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:6;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:6;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;709:3;702:4;697:2;689:6;685:15;681:26;678:35;675:55;;;726:1;723;716:12;675:55;783:2;776:4;768:6;764:17;757:4;749:6;745:17;739:47;830:1;823:4;818:2;810:6;806:15;802:26;795:37;850:6;841:15;;;;;;146:716;;;;:::o;867:623::-;975:6;983;991;1044:2;1032:9;1023:7;1019:23;1015:32;1012:52;;;1060:1;1057;1050:12;1012:52;1083:16;;1143:2;1128:18;;1122:25;1083:16;;-1:-1:-1;;;;;;1196:14:6;;;1193:34;;;1223:1;1220;1213:12;1193:34;1246:61;1299:7;1290:6;1279:9;1275:22;1246:61;:::i;:::-;1236:71;;1353:2;1342:9;1338:18;1332:25;1316:41;;1382:2;1372:8;1369:16;1366:36;;;1398:1;1395;1388:12;1366:36;;1421:63;1476:7;1465:8;1454:9;1450:24;1421:63;:::i;:::-;1411:73;;;867:623;;;;;:::o;1495:380::-;1574:1;1570:12;;;;1617;;;1638:61;;1692:4;1684:6;1680:17;1670:27;;1638:61;1745:2;1737:6;1734:14;1714:18;1711:38;1708:161;;1791:10;1786:3;1782:20;1779:1;1772:31;1826:4;1823:1;1816:15;1854:4;1851:1;1844:15;1708:161;;1495:380;;;:::o;2006:518::-;2108:2;2103:3;2100:11;2097:421;;;2144:5;2141:1;2134:16;2188:4;2185:1;2175:18;2258:2;2246:10;2242:19;2239:1;2235:27;2229:4;2225:38;2294:4;2282:10;2279:20;2276:47;;;-1:-1:-1;2317:4:6;2276:47;2372:2;2367:3;2363:12;2360:1;2356:20;2350:4;2346:31;2336:41;;2427:81;2445:2;2438:5;2435:13;2427:81;;;2504:1;2490:16;;2471:1;2460:13;2427:81;;;2431:3;;2097:421;2006:518;;;:::o;2700:1345::-;2820:10;;-1:-1:-1;;;;;2842:30:6;;2839:56;;;2875:18;;:::i;:::-;2904:97;2994:6;2954:38;2986:4;2980:11;2954:38;:::i;:::-;2948:4;2904:97;:::i;:::-;3056:4;;3113:2;3102:14;;3130:1;3125:663;;;;3832:1;3849:6;3846:89;;;-1:-1:-1;3901:19:6;;;3895:26;3846:89;-1:-1:-1;;2657:1:6;2653:11;;;2649:24;2645:29;2635:40;2681:1;2677:11;;;2632:57;3948:81;;3095:944;;3125:663;1953:1;1946:14;;;1990:4;1977:18;;-1:-1:-1;;3161:20:6;;;3279:236;3293:7;3290:1;3287:14;3279:236;;;3382:19;;;3376:26;3361:42;;3474:27;;;;3442:1;3430:14;;;;3309:19;;3279:236;;;3283:3;3543:6;3534:7;3531:19;3528:201;;;3604:19;;;3598:26;-1:-1:-1;;3687:1:6;3683:14;;;3699:3;3679:24;3675:37;3671:42;3656:58;3641:74;;3528:201;;;3775:1;3766:6;3763:1;3759:14;3755:22;3749:4;3742:36;3095:944;;;;;2700:1345;;:::o;4050:127::-;4111:10;4106:3;4102:20;4099:1;4092:31;4142:4;4139:1;4132:15;4166:4;4163:1;4156:15;4182:416;4271:1;4308:5;4271:1;4322:270;4343:7;4333:8;4330:21;4322:270;;;4402:4;4398:1;4394:6;4390:17;4384:4;4381:27;4378:53;;;4411:18;;:::i;:::-;4461:7;4451:8;4447:22;4444:55;;;4481:16;;;;4444:55;4560:22;;;;4520:15;;;;4322:270;;;4326:3;4182:416;;;;;:::o;4603:806::-;4652:5;4682:8;4672:80;;-1:-1:-1;4723:1:6;4737:5;;4672:80;4771:4;4761:76;;-1:-1:-1;4808:1:6;4822:5;;4761:76;4853:4;4871:1;4866:59;;;;4939:1;4934:130;;;;4846:218;;4866:59;4896:1;4887:10;;4910:5;;;4934:130;4971:3;4961:8;4958:17;4955:43;;;4978:18;;:::i;:::-;-1:-1:-1;;5034:1:6;5020:16;;5049:5;;4846:218;;5148:2;5138:8;5135:16;5129:3;5123:4;5120:13;5116:36;5110:2;5100:8;5097:16;5092:2;5086:4;5083:12;5079:35;5076:77;5073:159;;;-1:-1:-1;5185:19:6;;;5217:5;;5073:159;5264:34;5289:8;5283:4;5264:34;:::i;:::-;5334:6;5330:1;5326:6;5322:19;5313:7;5310:32;5307:58;;;5345:18;;:::i;:::-;5383:20;;-1:-1:-1;4603:806:6;;;;;:::o;5414:140::-;5472:5;5501:47;5542:4;5532:8;5528:19;5522:4;5501:47;:::i;:::-;5492:56;5414:140;-1:-1:-1;;;5414:140:6:o;5559:168::-;5632:9;;;5663;;5680:15;;;5674:22;;5660:37;5650:71;;5701:18;;:::i;5940:125::-;6005:9;;;6026:10;;;6023:36;;;6039:18;;:::i;6420:177::-;116:198:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 620,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 859,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 638,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 766,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 1069,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": null,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 532,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": null,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 388,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 592,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 557,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 607,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3393:6",
										"nodeType": "YulBlock",
										"src": "0:3393:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:6",
													"nodeType": "YulBlock",
													"src": "135:297:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:6",
																		"nodeType": "YulLiteral",
																		"src": "163:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:6"
																},
																"nativeSrc": "145:21:6",
																"nodeType": "YulFunctionCall",
																"src": "145:21:6"
															},
															"nativeSrc": "145:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:6"
														},
														{
															"nativeSrc": "175:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:6"
																},
																"nativeSrc": "189:13:6",
																"nodeType": "YulFunctionCall",
																"src": "189:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:6",
																	"nodeType": "YulTypedName",
																	"src": "179:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:6",
																				"nodeType": "YulLiteral",
																				"src": "233:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:6"
																		},
																		"nativeSrc": "218:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:6"
																},
																"nativeSrc": "211:34:6",
																"nodeType": "YulFunctionCall",
																"src": "211:34:6"
															},
															"nativeSrc": "211:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:6",
																				"nodeType": "YulLiteral",
																				"src": "275:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:6"
																		},
																		"nativeSrc": "260:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:6",
																				"nodeType": "YulLiteral",
																				"src": "292:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:6"
																		},
																		"nativeSrc": "280:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:6"
																},
																"nativeSrc": "254:50:6",
																"nodeType": "YulFunctionCall",
																"src": "254:50:6"
															},
															"nativeSrc": "254:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:6"
																				},
																				"nativeSrc": "324:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:6",
																				"nodeType": "YulLiteral",
																				"src": "348:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:6"
																		},
																		"nativeSrc": "320:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:6",
																		"nodeType": "YulLiteral",
																		"src": "353:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:6"
																},
																"nativeSrc": "313:42:6",
																"nodeType": "YulFunctionCall",
																"src": "313:42:6"
															},
															"nativeSrc": "313:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:6"
														},
														{
															"nativeSrc": "364:62:6",
															"nodeType": "YulAssignment",
															"src": "364:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:6",
																								"nodeType": "YulLiteral",
																								"src": "407:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:6"
																						},
																						"nativeSrc": "395:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:6",
																								"nodeType": "YulLiteral",
																								"src": "416:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:6"
																						},
																						"nativeSrc": "412:7:6",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:6"
																				},
																				"nativeSrc": "391:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:6"
																		},
																		"nativeSrc": "376:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:6",
																		"nodeType": "YulLiteral",
																		"src": "423:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:6"
																},
																"nativeSrc": "372:54:6",
																"nodeType": "YulFunctionCall",
																"src": "372:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:6",
														"nodeType": "YulTypedName",
														"src": "104:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:6",
														"nodeType": "YulTypedName",
														"src": "115:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:6",
														"nodeType": "YulTypedName",
														"src": "126:4:6",
														"type": ""
													}
												],
												"src": "14:418:6"
											},
											{
												"body": {
													"nativeSrc": "486:124:6",
													"nodeType": "YulBlock",
													"src": "486:124:6",
													"statements": [
														{
															"nativeSrc": "496:29:6",
															"nodeType": "YulAssignment",
															"src": "496:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:6"
																},
																"nativeSrc": "505:20:6",
																"nodeType": "YulFunctionCall",
																"src": "505:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:6",
																"nodeType": "YulBlock",
																"src": "588:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:6",
																					"nodeType": "YulLiteral",
																					"src": "597:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:6",
																					"nodeType": "YulLiteral",
																					"src": "600:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:6"
																			},
																			"nativeSrc": "590:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:6"
																		},
																		"nativeSrc": "590:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:6",
																										"nodeType": "YulLiteral",
																										"src": "573:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:6",
																										"nodeType": "YulLiteral",
																										"src": "578:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:6"
																								},
																								"nativeSrc": "569:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:6",
																								"nodeType": "YulLiteral",
																								"src": "582:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:6"
																						},
																						"nativeSrc": "565:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:6"
																				},
																				"nativeSrc": "554:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:6"
																		},
																		"nativeSrc": "544:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:6"
																},
																"nativeSrc": "537:50:6",
																"nodeType": "YulFunctionCall",
																"src": "537:50:6"
															},
															"nativeSrc": "534:70:6",
															"nodeType": "YulIf",
															"src": "534:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:6",
														"nodeType": "YulTypedName",
														"src": "465:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:6",
														"nodeType": "YulTypedName",
														"src": "476:5:6",
														"type": ""
													}
												],
												"src": "437:173:6"
											},
											{
												"body": {
													"nativeSrc": "702:167:6",
													"nodeType": "YulBlock",
													"src": "702:167:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:6",
																"nodeType": "YulBlock",
																"src": "748:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:6",
																					"nodeType": "YulLiteral",
																					"src": "757:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:6",
																					"nodeType": "YulLiteral",
																					"src": "760:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:6"
																			},
																			"nativeSrc": "750:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:6"
																		},
																		"nativeSrc": "750:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:6"
																		},
																		"nativeSrc": "719:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:6",
																		"nodeType": "YulLiteral",
																		"src": "744:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:6"
																},
																"nativeSrc": "715:32:6",
																"nodeType": "YulFunctionCall",
																"src": "715:32:6"
															},
															"nativeSrc": "712:52:6",
															"nodeType": "YulIf",
															"src": "712:52:6"
														},
														{
															"nativeSrc": "773:39:6",
															"nodeType": "YulAssignment",
															"src": "773:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:6"
																},
																"nativeSrc": "783:29:6",
																"nodeType": "YulFunctionCall",
																"src": "783:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:6"
																}
															]
														},
														{
															"nativeSrc": "821:42:6",
															"nodeType": "YulAssignment",
															"src": "821:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "848:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "848:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "859:2:6",
																				"nodeType": "YulLiteral",
																				"src": "859:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "844:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "844:3:6"
																		},
																		"nativeSrc": "844:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "844:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "831:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "831:12:6"
																},
																"nativeSrc": "831:32:6",
																"nodeType": "YulFunctionCall",
																"src": "831:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "821:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "821:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:254:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:6",
														"nodeType": "YulTypedName",
														"src": "660:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:6",
														"nodeType": "YulTypedName",
														"src": "671:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:6",
														"nodeType": "YulTypedName",
														"src": "683:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:6",
														"nodeType": "YulTypedName",
														"src": "691:6:6",
														"type": ""
													}
												],
												"src": "615:254:6"
											},
											{
												"body": {
													"nativeSrc": "969:92:6",
													"nodeType": "YulBlock",
													"src": "969:92:6",
													"statements": [
														{
															"nativeSrc": "979:26:6",
															"nodeType": "YulAssignment",
															"src": "979:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "991:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "991:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1002:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1002:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "987:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "987:3:6"
																},
																"nativeSrc": "987:18:6",
																"nodeType": "YulFunctionCall",
																"src": "987:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "979:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "979:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1021:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1021:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1046:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1046:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1039:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1039:6:6"
																				},
																				"nativeSrc": "1039:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1039:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1032:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1032:6:6"
																		},
																		"nativeSrc": "1032:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1032:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1014:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1014:6:6"
																},
																"nativeSrc": "1014:41:6",
																"nodeType": "YulFunctionCall",
																"src": "1014:41:6"
															},
															"nativeSrc": "1014:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "1014:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "874:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "938:9:6",
														"nodeType": "YulTypedName",
														"src": "938:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "949:6:6",
														"nodeType": "YulTypedName",
														"src": "949:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "960:4:6",
														"nodeType": "YulTypedName",
														"src": "960:4:6",
														"type": ""
													}
												],
												"src": "874:187:6"
											},
											{
												"body": {
													"nativeSrc": "1167:76:6",
													"nodeType": "YulBlock",
													"src": "1167:76:6",
													"statements": [
														{
															"nativeSrc": "1177:26:6",
															"nodeType": "YulAssignment",
															"src": "1177:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1189:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1189:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1200:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1200:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1185:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1185:3:6"
																},
																"nativeSrc": "1185:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1185:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1177:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1177:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1219:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1219:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1212:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																},
																"nativeSrc": "1212:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1212:25:6"
															},
															"nativeSrc": "1212:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "1212:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1066:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1136:9:6",
														"nodeType": "YulTypedName",
														"src": "1136:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1147:6:6",
														"nodeType": "YulTypedName",
														"src": "1147:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1158:4:6",
														"nodeType": "YulTypedName",
														"src": "1158:4:6",
														"type": ""
													}
												],
												"src": "1066:177:6"
											},
											{
												"body": {
													"nativeSrc": "1352:224:6",
													"nodeType": "YulBlock",
													"src": "1352:224:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1398:16:6",
																"nodeType": "YulBlock",
																"src": "1398:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1407:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1407:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1410:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1410:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1400:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1400:6:6"
																			},
																			"nativeSrc": "1400:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1400:12:6"
																		},
																		"nativeSrc": "1400:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1400:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1373:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1373:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1382:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1382:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1369:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1369:3:6"
																		},
																		"nativeSrc": "1369:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1369:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1394:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1394:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1365:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1365:3:6"
																},
																"nativeSrc": "1365:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1365:32:6"
															},
															"nativeSrc": "1362:52:6",
															"nodeType": "YulIf",
															"src": "1362:52:6"
														},
														{
															"nativeSrc": "1423:39:6",
															"nodeType": "YulAssignment",
															"src": "1423:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1452:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1452:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1433:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1433:18:6"
																},
																"nativeSrc": "1433:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1433:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1423:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1423:6:6"
																}
															]
														},
														{
															"nativeSrc": "1471:48:6",
															"nodeType": "YulAssignment",
															"src": "1471:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1504:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1504:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1515:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1515:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1500:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1500:3:6"
																		},
																		"nativeSrc": "1500:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1500:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1481:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1481:18:6"
																},
																"nativeSrc": "1481:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1481:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1471:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1471:6:6"
																}
															]
														},
														{
															"nativeSrc": "1528:42:6",
															"nodeType": "YulAssignment",
															"src": "1528:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1555:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1555:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1566:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1566:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1551:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1551:3:6"
																		},
																		"nativeSrc": "1551:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1551:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1538:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1538:12:6"
																},
																"nativeSrc": "1538:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1538:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1528:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1528:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1248:328:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1302:9:6",
														"nodeType": "YulTypedName",
														"src": "1302:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1313:7:6",
														"nodeType": "YulTypedName",
														"src": "1313:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1325:6:6",
														"nodeType": "YulTypedName",
														"src": "1325:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1333:6:6",
														"nodeType": "YulTypedName",
														"src": "1333:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1341:6:6",
														"nodeType": "YulTypedName",
														"src": "1341:6:6",
														"type": ""
													}
												],
												"src": "1248:328:6"
											},
											{
												"body": {
													"nativeSrc": "1678:87:6",
													"nodeType": "YulBlock",
													"src": "1678:87:6",
													"statements": [
														{
															"nativeSrc": "1688:26:6",
															"nodeType": "YulAssignment",
															"src": "1688:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1700:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1700:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1711:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1711:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1696:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1696:3:6"
																},
																"nativeSrc": "1696:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1696:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1688:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1688:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1730:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1730:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1745:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1745:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1753:4:6",
																				"nodeType": "YulLiteral",
																				"src": "1753:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1741:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1741:3:6"
																		},
																		"nativeSrc": "1741:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1741:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1723:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:6"
																},
																"nativeSrc": "1723:36:6",
																"nodeType": "YulFunctionCall",
																"src": "1723:36:6"
															},
															"nativeSrc": "1723:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "1723:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1581:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1647:9:6",
														"nodeType": "YulTypedName",
														"src": "1647:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1658:6:6",
														"nodeType": "YulTypedName",
														"src": "1658:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1669:4:6",
														"nodeType": "YulTypedName",
														"src": "1669:4:6",
														"type": ""
													}
												],
												"src": "1581:184:6"
											},
											{
												"body": {
													"nativeSrc": "1840:116:6",
													"nodeType": "YulBlock",
													"src": "1840:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1886:16:6",
																"nodeType": "YulBlock",
																"src": "1886:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1895:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1895:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1898:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1898:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1888:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1888:6:6"
																			},
																			"nativeSrc": "1888:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1888:12:6"
																		},
																		"nativeSrc": "1888:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1888:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1861:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1861:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1870:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1870:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1857:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1857:3:6"
																		},
																		"nativeSrc": "1857:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1857:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1882:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1882:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1853:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1853:3:6"
																},
																"nativeSrc": "1853:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1853:32:6"
															},
															"nativeSrc": "1850:52:6",
															"nodeType": "YulIf",
															"src": "1850:52:6"
														},
														{
															"nativeSrc": "1911:39:6",
															"nodeType": "YulAssignment",
															"src": "1911:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1940:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1940:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1921:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1921:18:6"
																},
																"nativeSrc": "1921:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1921:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1911:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1911:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1770:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1806:9:6",
														"nodeType": "YulTypedName",
														"src": "1806:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1817:7:6",
														"nodeType": "YulTypedName",
														"src": "1817:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1829:6:6",
														"nodeType": "YulTypedName",
														"src": "1829:6:6",
														"type": ""
													}
												],
												"src": "1770:186:6"
											},
											{
												"body": {
													"nativeSrc": "2048:173:6",
													"nodeType": "YulBlock",
													"src": "2048:173:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2094:16:6",
																"nodeType": "YulBlock",
																"src": "2094:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2103:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2103:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2106:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2106:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2096:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2096:6:6"
																			},
																			"nativeSrc": "2096:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2096:12:6"
																		},
																		"nativeSrc": "2096:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2096:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2069:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2069:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2078:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2078:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2065:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2065:3:6"
																		},
																		"nativeSrc": "2065:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2065:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2090:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2090:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2061:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2061:3:6"
																},
																"nativeSrc": "2061:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2061:32:6"
															},
															"nativeSrc": "2058:52:6",
															"nodeType": "YulIf",
															"src": "2058:52:6"
														},
														{
															"nativeSrc": "2119:39:6",
															"nodeType": "YulAssignment",
															"src": "2119:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2148:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2148:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2129:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2129:18:6"
																},
																"nativeSrc": "2129:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2129:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2119:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2119:6:6"
																}
															]
														},
														{
															"nativeSrc": "2167:48:6",
															"nodeType": "YulAssignment",
															"src": "2167:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2200:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2200:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2211:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2211:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2196:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2196:3:6"
																		},
																		"nativeSrc": "2196:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2196:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2177:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2177:18:6"
																},
																"nativeSrc": "2177:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2177:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2167:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2167:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "1961:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2006:9:6",
														"nodeType": "YulTypedName",
														"src": "2006:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2017:7:6",
														"nodeType": "YulTypedName",
														"src": "2017:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2029:6:6",
														"nodeType": "YulTypedName",
														"src": "2029:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2037:6:6",
														"nodeType": "YulTypedName",
														"src": "2037:6:6",
														"type": ""
													}
												],
												"src": "1961:260:6"
											},
											{
												"body": {
													"nativeSrc": "2281:325:6",
													"nodeType": "YulBlock",
													"src": "2281:325:6",
													"statements": [
														{
															"nativeSrc": "2291:22:6",
															"nodeType": "YulAssignment",
															"src": "2291:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2305:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2305:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2308:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2308:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2301:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2301:3:6"
																},
																"nativeSrc": "2301:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2301:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2291:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2291:6:6"
																}
															]
														},
														{
															"nativeSrc": "2322:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2322:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2352:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2352:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2358:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2358:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2348:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2348:3:6"
																},
																"nativeSrc": "2348:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2348:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2326:18:6",
																	"nodeType": "YulTypedName",
																	"src": "2326:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2399:31:6",
																"nodeType": "YulBlock",
																"src": "2399:31:6",
																"statements": [
																	{
																		"nativeSrc": "2401:27:6",
																		"nodeType": "YulAssignment",
																		"src": "2401:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2415:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2415:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2423:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2423:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2411:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2411:3:6"
																			},
																			"nativeSrc": "2411:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2411:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2401:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2401:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2379:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2379:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2372:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2372:6:6"
																},
																"nativeSrc": "2372:26:6",
																"nodeType": "YulFunctionCall",
																"src": "2372:26:6"
															},
															"nativeSrc": "2369:61:6",
															"nodeType": "YulIf",
															"src": "2369:61:6"
														},
														{
															"body": {
																"nativeSrc": "2489:111:6",
																"nodeType": "YulBlock",
																"src": "2489:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2510:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2510:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2517:3:6",
																							"nodeType": "YulLiteral",
																							"src": "2517:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2522:10:6",
																							"nodeType": "YulLiteral",
																							"src": "2522:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2513:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2513:3:6"
																					},
																					"nativeSrc": "2513:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2513:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2503:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2503:6:6"
																			},
																			"nativeSrc": "2503:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2503:31:6"
																		},
																		"nativeSrc": "2503:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2503:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2554:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2554:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2557:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2557:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2547:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2547:6:6"
																			},
																			"nativeSrc": "2547:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2547:15:6"
																		},
																		"nativeSrc": "2547:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2547:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2582:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2582:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2585:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2585:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2575:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2575:6:6"
																			},
																			"nativeSrc": "2575:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2575:15:6"
																		},
																		"nativeSrc": "2575:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2575:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2445:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2445:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2468:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2468:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2476:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2476:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2465:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2465:2:6"
																		},
																		"nativeSrc": "2465:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2465:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2442:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2442:2:6"
																},
																"nativeSrc": "2442:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2442:38:6"
															},
															"nativeSrc": "2439:161:6",
															"nodeType": "YulIf",
															"src": "2439:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2226:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2261:4:6",
														"nodeType": "YulTypedName",
														"src": "2261:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2270:6:6",
														"nodeType": "YulTypedName",
														"src": "2270:6:6",
														"type": ""
													}
												],
												"src": "2226:380:6"
											},
											{
												"body": {
													"nativeSrc": "2768:188:6",
													"nodeType": "YulBlock",
													"src": "2768:188:6",
													"statements": [
														{
															"nativeSrc": "2778:26:6",
															"nodeType": "YulAssignment",
															"src": "2778:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2790:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2790:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2801:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2801:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2786:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2786:3:6"
																},
																"nativeSrc": "2786:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2786:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2778:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2778:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2820:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2820:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2835:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2835:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2851:3:6",
																								"nodeType": "YulLiteral",
																								"src": "2851:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2856:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2856:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2847:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2847:3:6"
																						},
																						"nativeSrc": "2847:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2847:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2860:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2860:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2843:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2843:3:6"
																				},
																				"nativeSrc": "2843:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2843:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2831:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2831:3:6"
																		},
																		"nativeSrc": "2831:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2831:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2813:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2813:6:6"
																},
																"nativeSrc": "2813:51:6",
																"nodeType": "YulFunctionCall",
																"src": "2813:51:6"
															},
															"nativeSrc": "2813:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "2813:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2884:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2884:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2895:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2895:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2880:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2880:3:6"
																		},
																		"nativeSrc": "2880:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2880:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2900:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2900:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2873:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2873:6:6"
																},
																"nativeSrc": "2873:34:6",
																"nodeType": "YulFunctionCall",
																"src": "2873:34:6"
															},
															"nativeSrc": "2873:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "2873:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2927:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2927:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2938:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2938:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2923:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2923:3:6"
																		},
																		"nativeSrc": "2923:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2923:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "2943:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2943:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2916:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2916:6:6"
																},
																"nativeSrc": "2916:34:6",
																"nodeType": "YulFunctionCall",
																"src": "2916:34:6"
															},
															"nativeSrc": "2916:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "2916:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2611:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2721:9:6",
														"nodeType": "YulTypedName",
														"src": "2721:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2732:6:6",
														"nodeType": "YulTypedName",
														"src": "2732:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2740:6:6",
														"nodeType": "YulTypedName",
														"src": "2740:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2748:6:6",
														"nodeType": "YulTypedName",
														"src": "2748:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2759:4:6",
														"nodeType": "YulTypedName",
														"src": "2759:4:6",
														"type": ""
													}
												],
												"src": "2611:345:6"
											},
											{
												"body": {
													"nativeSrc": "3062:102:6",
													"nodeType": "YulBlock",
													"src": "3062:102:6",
													"statements": [
														{
															"nativeSrc": "3072:26:6",
															"nodeType": "YulAssignment",
															"src": "3072:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3084:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3084:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3095:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3095:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3080:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3080:3:6"
																},
																"nativeSrc": "3080:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3080:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3072:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3072:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3114:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3114:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3129:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3129:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3145:3:6",
																								"nodeType": "YulLiteral",
																								"src": "3145:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3150:1:6",
																								"nodeType": "YulLiteral",
																								"src": "3150:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3141:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3141:3:6"
																						},
																						"nativeSrc": "3141:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3141:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3154:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3154:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3137:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3137:3:6"
																				},
																				"nativeSrc": "3137:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3137:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3125:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3125:3:6"
																		},
																		"nativeSrc": "3125:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3125:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3107:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3107:6:6"
																},
																"nativeSrc": "3107:51:6",
																"nodeType": "YulFunctionCall",
																"src": "3107:51:6"
															},
															"nativeSrc": "3107:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "3107:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2961:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3031:9:6",
														"nodeType": "YulTypedName",
														"src": "3031:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3042:6:6",
														"nodeType": "YulTypedName",
														"src": "3042:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3053:4:6",
														"nodeType": "YulTypedName",
														"src": "3053:4:6",
														"type": ""
													}
												],
												"src": "2961:203:6"
											},
											{
												"body": {
													"nativeSrc": "3217:174:6",
													"nodeType": "YulBlock",
													"src": "3217:174:6",
													"statements": [
														{
															"nativeSrc": "3227:16:6",
															"nodeType": "YulAssignment",
															"src": "3227:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3238:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3238:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3241:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3241:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3234:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3234:3:6"
																},
																"nativeSrc": "3234:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3234:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3227:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3227:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3274:111:6",
																"nodeType": "YulBlock",
																"src": "3274:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3295:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3295:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3302:3:6",
																							"nodeType": "YulLiteral",
																							"src": "3302:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3307:10:6",
																							"nodeType": "YulLiteral",
																							"src": "3307:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3298:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3298:3:6"
																					},
																					"nativeSrc": "3298:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3298:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3288:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3288:6:6"
																			},
																			"nativeSrc": "3288:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3288:31:6"
																		},
																		"nativeSrc": "3288:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3288:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3339:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3339:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3342:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3342:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3332:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3332:6:6"
																			},
																			"nativeSrc": "3332:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3332:15:6"
																		},
																		"nativeSrc": "3332:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3332:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3367:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3367:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3370:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3370:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3360:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3360:6:6"
																			},
																			"nativeSrc": "3360:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3360:15:6"
																		},
																		"nativeSrc": "3360:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3360:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3258:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3258:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3261:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3261:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3255:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3255:2:6"
																},
																"nativeSrc": "3255:10:6",
																"nodeType": "YulFunctionCall",
																"src": "3255:10:6"
															},
															"nativeSrc": "3252:133:6",
															"nodeType": "YulIf",
															"src": "3252:133:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3169:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3200:1:6",
														"nodeType": "YulTypedName",
														"src": "3200:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3203:1:6",
														"nodeType": "YulTypedName",
														"src": "3203:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3209:3:6",
														"nodeType": "YulTypedName",
														"src": "3209:3:6",
														"type": ""
													}
												],
												"src": "3169:222:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610090575f3560e01c8063313ce56711610063578063313ce567146100fa57806370a082311461010957806395d89b4114610131578063a9059cbb14610139578063dd62ed3e1461014c575f80fd5b806306fdde0314610094578063095ea7b3146100b257806318160ddd146100d557806323b872dd146100e7575b5f80fd5b61009c610184565b6040516100a99190610553565b60405180910390f35b6100c56100c03660046105a3565b610214565b60405190151581526020016100a9565b6002545b6040519081526020016100a9565b6100c56100f53660046105cb565b61022d565b604051601281526020016100a9565b6100d9610117366004610604565b6001600160a01b03165f9081526020819052604090205490565b61009c610250565b6100c56101473660046105a3565b61025f565b6100d961015a366004610624565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b60606003805461019390610655565b80601f01602080910402602001604051908101604052809291908181526020018280546101bf90610655565b801561020a5780601f106101e15761010080835404028352916020019161020a565b820191905f5260205f20905b8154815290600101906020018083116101ed57829003601f168201915b5050505050905090565b5f3361022181858561026c565b60019150505b92915050565b5f3361023a85828561027e565b6102458585856102fe565b506001949350505050565b60606004805461019390610655565b5f336102218185856102fe565b610279838383600161035b565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146102f857818110156102ea57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6102f884848484035f61035b565b50505050565b6001600160a01b03831661032757604051634b637e8f60e11b81525f60048201526024016102e1565b6001600160a01b0382166103505760405163ec442f0560e01b81525f60048201526024016102e1565b61027983838361042d565b6001600160a01b0384166103845760405163e602df0560e01b81525f60048201526024016102e1565b6001600160a01b0383166103ad57604051634a1406b160e11b81525f60048201526024016102e1565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156102f857826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161041f91815260200190565b60405180910390a350505050565b6001600160a01b038316610457578060025f82825461044c919061068d565b909155506104c79050565b6001600160a01b0383165f90815260208190526040902054818110156104a95760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102e1565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166104e357600280548290039055610501565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161054691815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461059e575f80fd5b919050565b5f80604083850312156105b4575f80fd5b6105bd83610588565b946020939093013593505050565b5f805f606084860312156105dd575f80fd5b6105e684610588565b92506105f460208501610588565b9150604084013590509250925092565b5f60208284031215610614575f80fd5b61061d82610588565b9392505050565b5f8060408385031215610635575f80fd5b61063e83610588565b915061064c60208401610588565b90509250929050565b600181811c9082168061066957607f821691505b60208210810361068757634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561022757634e487b7160e01b5f52601160045260245ffdfea26469706673582212204bd5d20a6ab90558adbcc50d5d8979f92f87ffaa2c524a0d525b2842a5ca60f264736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x14C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x604 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9C PUSH2 0x250 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x193 SWAP1 PUSH2 0x655 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BF SWAP1 PUSH2 0x655 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x221 DUP2 DUP6 DUP6 PUSH2 0x26C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x23A DUP6 DUP3 DUP6 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x245 DUP6 DUP6 DUP6 PUSH2 0x2FE JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x193 SWAP1 PUSH2 0x655 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x221 DUP2 DUP6 DUP6 PUSH2 0x2FE JUMP JUMPDEST PUSH2 0x279 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x35B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x2F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2F8 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x35B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x327 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x350 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0x279 DUP4 DUP4 DUP4 PUSH2 0x42D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x384 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x2F8 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x457 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x68D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4C7 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4E3 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x501 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x546 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x59E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5BD DUP4 PUSH2 0x588 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5DD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5E6 DUP5 PUSH2 0x588 JUMP JUMPDEST SWAP3 POP PUSH2 0x5F4 PUSH1 0x20 DUP6 ADD PUSH2 0x588 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x614 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61D DUP3 PUSH2 0x588 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x635 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x63E DUP4 PUSH2 0x588 JUMP JUMPDEST SWAP2 POP PUSH2 0x64C PUSH1 0x20 DUP5 ADD PUSH2 0x588 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x669 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x687 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x227 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xD5 0xD2 EXP PUSH11 0xB90558ADBCC50D5D8979F9 0x2F DUP8 SELFDESTRUCT 0xAA 0x2C MSTORE BLOBBASEFEE 0xD MSTORE JUMPDEST 0x28 TIMESTAMP 0xA5 0xCA PUSH1 0xF2 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "116:198:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1039:14:6;;1032:22;1014:41;;1002:2;987:18;4293:186:1;874:187:6;3144:97:1;3222:12;;3144:97;;;1212:25:6;;;1200:2;1185:18;3144:97:1;1066:177:6;5039:244:1;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;1723:36:6;;1711:2;1696:18;3002:82:1;1581:184:6;3299:116:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:1;3364:7;3390:18;;;;;;;;;;;;3299:116;2276:93;;;:::i;3610:178::-;;;;;;:::i;:::-;;:::i;3846:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:1;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:4;4420:31:1;735:10:4;4436:7:1;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:4;5182:37:1;5198:4;735:10:4;5213:5:1;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:1;;5039:244;-1:-1:-1;;;;5039:244:1:o;2276:93::-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:4;3733:27:1;735:10:4;3750:2:1;3754:5;3733:9;:27::i;8989:128::-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:1;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:1;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:1;;-1:-1:-1;;;;;2831:32:6;;10936:60:1;;;2813:51:6;2880:18;;;2873:34;;;2923:18;;;2916:34;;;2786:18;;10936:60:1;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:1;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:1;;5807:1;5780:30;;;3107:51:6;3080:18;;5780:30:1;2961:203:6;5735:86:1;-1:-1:-1;;;;;5834:16:1;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:1;;5902:1;5873:32;;;3107:51:6;3080:18;;5873:32:1;2961:203:6;5830:86:1;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;9949:432::-;-1:-1:-1;;;;;10061:19:1;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:1;;10132:1;10103:32;;;3107:51:6;3080:18;;10103:32:1;2961:203:6;10057:89:1;-1:-1:-1;;;;;10159:21:1;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:1;;10231:1;10203:31;;;3107:51:6;3080:18;;10203:31:1;2961:203:6;10155:90:1;-1:-1:-1;;;;;10254:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:1;10342:5;-1:-1:-1;;;;;10333:31:1;;10358:5;10333:31;;;;1212:25:6;;1200:2;1185:18;;1066:177;10333:31:1;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:1;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:1;;-1:-1:-1;6356:540:1;;-1:-1:-1;;;;;6570:15:1;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:1;;-1:-1:-1;;;;;2831:32:6;;6649:50:1;;;2813:51:6;2880:18;;;2873:34;;;2923:18;;;2916:34;;;2786:18;;6649:50:1;2611:345:6;6599:115:1;-1:-1:-1;;;;;6834:15:1;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:1;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:1;7355:4;-1:-1:-1;;;;;7346:25:1;;7365:5;7346:25;;;;1212::6;;1200:2;1185:18;;1066:177;7346:25:1;;;;;;;;6271:1107;;;:::o;14:418:6:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:6;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:254::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;859:2;844:18;;;;831:32;;-1:-1:-1;;;615:254:6:o;1248:328::-;1325:6;1333;1341;1394:2;1382:9;1373:7;1369:23;1365:32;1362:52;;;1410:1;1407;1400:12;1362:52;1433:29;1452:9;1433:29;:::i;:::-;1423:39;;1481:38;1515:2;1504:9;1500:18;1481:38;:::i;:::-;1471:48;;1566:2;1555:9;1551:18;1538:32;1528:42;;1248:328;;;;;:::o;1770:186::-;1829:6;1882:2;1870:9;1861:7;1857:23;1853:32;1850:52;;;1898:1;1895;1888:12;1850:52;1921:29;1940:9;1921:29;:::i;:::-;1911:39;1770:186;-1:-1:-1;;;1770:186:6:o;1961:260::-;2029:6;2037;2090:2;2078:9;2069:7;2065:23;2061:32;2058:52;;;2106:1;2103;2096:12;2058:52;2129:29;2148:9;2129:29;:::i;:::-;2119:39;;2177:38;2211:2;2200:9;2196:18;2177:38;:::i;:::-;2167:48;;1961:260;;;;;:::o;2226:380::-;2305:1;2301:12;;;;2348;;;2369:61;;2423:4;2415:6;2411:17;2401:27;;2369:61;2476:2;2468:6;2465:14;2445:18;2442:38;2439:161;;2522:10;2517:3;2513:20;2510:1;2503:31;2557:4;2554:1;2547:15;2585:4;2582:1;2575:15;2439:161;;2226:380;;;:::o;3169:222::-;3234:9;;;3255:10;;;3252:133;;;3307:10;3302:3;3298:20;3295:1;3288:31;3342:4;3339:1;3332:15;3370:4;3367:1;3360:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "352400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24735",
								"balanceOf(address)": "2559",
								"decimals()": "176",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51282",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 314,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 116,
									"end": 314,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 116,
									"end": 314,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 150,
									"end": 312,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 312,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 150,
									"end": 312,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 150,
									"end": 312,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 150,
									"end": 312,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 150,
									"end": 312,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 150,
									"end": 312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 150,
									"end": 312,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 233,
									"end": 237,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 239,
									"end": 245,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 233,
									"end": 237,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 257,
									"end": 305,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 263,
									"end": 273,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 294,
									"end": 304,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 294,
									"end": 302,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 294,
									"end": 302,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 294,
									"end": 302,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 294,
									"end": 304,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 294,
									"end": 304,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 294,
									"end": 304,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 294,
									"end": 304,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 294,
									"end": 304,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 290,
									"end": 304,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 290,
									"end": 304,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 290,
									"end": 292,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 290,
									"end": 304,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 290,
									"end": 304,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 290,
									"end": 304,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 290,
									"end": 304,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 275,
									"end": 304,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 275,
									"end": 304,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 275,
									"end": 287,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 275,
									"end": 304,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 275,
									"end": 304,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 275,
									"end": 304,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 275,
									"end": 304,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 257,
									"end": 262,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 257,
									"end": 305,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 257,
									"end": 305,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 257,
									"end": 305,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 150,
									"end": 312,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 116,
									"end": 314,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 116,
									"end": 314,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3075,
									"end": 3077,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3075,
									"end": 3077,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3002,
									"end": 3084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5878,
									"end": 5929,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5851,
									"end": 5869,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 5851,
									"end": 5869,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6290,
									"end": 6322,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6322,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6272,
									"end": 6323,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6339,
									"end": 6357,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 6339,
									"end": 6357,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6339,
									"end": 6357,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6332,
									"end": 6366,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6332,
									"end": 6366,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6332,
									"end": 6366,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6382,
									"end": 6400,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 6382,
									"end": 6400,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6382,
									"end": 6400,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6375,
									"end": 6409,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6375,
									"end": 6409,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6375,
									"end": 6409,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6245,
									"end": 6263,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 6245,
									"end": 6263,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 6070,
									"end": 6415,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6566,
									"end": 6591,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6566,
									"end": 6591,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6554,
									"end": 6556,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6539,
									"end": 6557,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6539,
									"end": 6557,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6420,
									"end": 6597,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 862,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 146,
									"end": 862,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 6,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 709,
									"end": 712,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 702,
									"end": 706,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 697,
									"end": 699,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 689,
									"end": 695,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 685,
									"end": 700,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 681,
									"end": 707,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 678,
									"end": 713,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 675,
									"end": 730,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 675,
									"end": 730,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 675,
									"end": 730,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 726,
									"end": 727,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 723,
									"end": 724,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 716,
									"end": 728,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 675,
									"end": 730,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 675,
									"end": 730,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 783,
									"end": 785,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 776,
									"end": 780,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 768,
									"end": 774,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 764,
									"end": 781,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 757,
									"end": 761,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 749,
									"end": 755,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 745,
									"end": 762,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 739,
									"end": 786,
									"name": "MCOPY",
									"source": 6
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 823,
									"end": 827,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 818,
									"end": 820,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 810,
									"end": 816,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 806,
									"end": 821,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 802,
									"end": 828,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 795,
									"end": 832,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 850,
									"end": 856,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 841,
									"end": 856,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 862,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 862,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 862,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 862,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 862,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 867,
									"end": 1490,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 867,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 975,
									"end": 981,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 983,
									"end": 989,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 991,
									"end": 997,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1044,
									"end": 1046,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1032,
									"end": 1041,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1030,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1019,
									"end": 1042,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1015,
									"end": 1047,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1012,
									"end": 1064,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1012,
									"end": 1064,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1012,
									"end": 1064,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1012,
									"end": 1064,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1012,
									"end": 1064,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1083,
									"end": 1099,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1083,
									"end": 1099,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1143,
									"end": 1145,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1128,
									"end": 1146,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1128,
									"end": 1146,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1147,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1083,
									"end": 1099,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1083,
									"end": 1099,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1196,
									"end": 1210,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1210,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1210,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1193,
									"end": 1227,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1193,
									"end": 1227,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1193,
									"end": 1227,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1223,
									"end": 1224,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1220,
									"end": 1221,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1213,
									"end": 1225,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1193,
									"end": 1227,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1193,
									"end": 1227,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1246,
									"end": 1307,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1299,
									"end": 1306,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1290,
									"end": 1296,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1279,
									"end": 1288,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1275,
									"end": 1297,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1246,
									"end": 1307,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1246,
									"end": 1307,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1246,
									"end": 1307,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1246,
									"end": 1307,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1236,
									"end": 1307,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1236,
									"end": 1307,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1355,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1338,
									"end": 1356,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1332,
									"end": 1357,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1316,
									"end": 1357,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1316,
									"end": 1357,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1382,
									"end": 1384,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1372,
									"end": 1380,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1369,
									"end": 1385,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1366,
									"end": 1402,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1366,
									"end": 1402,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1366,
									"end": 1402,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1398,
									"end": 1399,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1395,
									"end": 1396,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 1400,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1366,
									"end": 1402,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1366,
									"end": 1402,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1366,
									"end": 1402,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1421,
									"end": 1484,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1476,
									"end": 1483,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1473,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1454,
									"end": 1463,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1474,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1421,
									"end": 1484,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1421,
									"end": 1484,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1421,
									"end": 1484,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1421,
									"end": 1484,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1411,
									"end": 1484,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1411,
									"end": 1484,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1411,
									"end": 1484,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 867,
									"end": 1490,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 867,
									"end": 1490,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 867,
									"end": 1490,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 867,
									"end": 1490,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 867,
									"end": 1490,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 867,
									"end": 1490,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1495,
									"end": 1875,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1495,
									"end": 1875,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1575,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1570,
									"end": 1582,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1570,
									"end": 1582,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1570,
									"end": 1582,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1570,
									"end": 1582,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1617,
									"end": 1629,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1617,
									"end": 1629,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1617,
									"end": 1629,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1638,
									"end": 1699,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1638,
									"end": 1699,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1692,
									"end": 1696,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1684,
									"end": 1690,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1697,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1670,
									"end": 1697,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1670,
									"end": 1697,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1638,
									"end": 1699,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1638,
									"end": 1699,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1747,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1737,
									"end": 1743,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1734,
									"end": 1748,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1714,
									"end": 1732,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1711,
									"end": 1749,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 1708,
									"end": 1869,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1791,
									"end": 1801,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1786,
									"end": 1789,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1782,
									"end": 1802,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1779,
									"end": 1780,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1772,
									"end": 1803,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1826,
									"end": 1830,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1823,
									"end": 1824,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1816,
									"end": 1831,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1858,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1851,
									"end": 1852,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1844,
									"end": 1859,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1869,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 1708,
									"end": 1869,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1869,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1495,
									"end": 1875,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1495,
									"end": 1875,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1495,
									"end": 1875,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1495,
									"end": 1875,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2006,
									"end": 2524,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2006,
									"end": 2524,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2108,
									"end": 2110,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2103,
									"end": 2106,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2100,
									"end": 2111,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2097,
									"end": 2518,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2097,
									"end": 2518,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 2097,
									"end": 2518,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2144,
									"end": 2149,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2142,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2134,
									"end": 2150,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2188,
									"end": 2192,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2185,
									"end": 2186,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2175,
									"end": 2193,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2258,
									"end": 2260,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2246,
									"end": 2256,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2242,
									"end": 2261,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2239,
									"end": 2240,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2235,
									"end": 2262,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2229,
									"end": 2233,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2225,
									"end": 2263,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2294,
									"end": 2298,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2282,
									"end": 2292,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2279,
									"end": 2299,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2276,
									"end": 2323,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2276,
									"end": 2323,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2276,
									"end": 2323,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2317,
									"end": 2321,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2276,
									"end": 2323,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2276,
									"end": 2323,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2372,
									"end": 2374,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2367,
									"end": 2370,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2363,
									"end": 2375,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2360,
									"end": 2361,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2356,
									"end": 2376,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2350,
									"end": 2354,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2346,
									"end": 2377,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2336,
									"end": 2377,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2336,
									"end": 2377,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2427,
									"end": 2508,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2427,
									"end": 2508,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2445,
									"end": 2447,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2438,
									"end": 2443,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2435,
									"end": 2448,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2427,
									"end": 2508,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2427,
									"end": 2508,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 2427,
									"end": 2508,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2504,
									"end": 2505,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2490,
									"end": 2506,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2490,
									"end": 2506,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2471,
									"end": 2472,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2460,
									"end": 2473,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2427,
									"end": 2508,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2427,
									"end": 2508,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2427,
									"end": 2508,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 2427,
									"end": 2508,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2431,
									"end": 2434,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2431,
									"end": 2434,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2097,
									"end": 2518,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 2097,
									"end": 2518,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2006,
									"end": 2524,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2006,
									"end": 2524,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2006,
									"end": 2524,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2006,
									"end": 2524,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2700,
									"end": 4045,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2700,
									"end": 4045,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2820,
									"end": 2830,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2820,
									"end": 2830,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2842,
									"end": 2872,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2842,
									"end": 2872,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2839,
									"end": 2895,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2839,
									"end": 2895,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 2839,
									"end": 2895,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2875,
									"end": 2893,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 2875,
									"end": 2893,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2875,
									"end": 2893,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2875,
									"end": 2893,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 2875,
									"end": 2893,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2904,
									"end": 3001,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 2994,
									"end": 3000,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2954,
									"end": 2992,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2986,
									"end": 2990,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2980,
									"end": 2991,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2954,
									"end": 2992,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2954,
									"end": 2992,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2954,
									"end": 2992,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2954,
									"end": 2992,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2948,
									"end": 2952,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2904,
									"end": 3001,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2904,
									"end": 3001,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2904,
									"end": 3001,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 2904,
									"end": 3001,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3056,
									"end": 3060,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3056,
									"end": 3060,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3113,
									"end": 3115,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3102,
									"end": 3116,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3102,
									"end": 3116,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3130,
									"end": 3131,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3125,
									"end": 3788,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3125,
									"end": 3788,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3125,
									"end": 3788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3125,
									"end": 3788,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3832,
									"end": 3833,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3849,
									"end": 3855,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3846,
									"end": 3935,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3846,
									"end": 3935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3846,
									"end": 3935,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3895,
									"end": 3921,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3846,
									"end": 3935,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3846,
									"end": 3935,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2657,
									"end": 2658,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2653,
									"end": 2664,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2653,
									"end": 2664,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2653,
									"end": 2664,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2649,
									"end": 2673,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2645,
									"end": 2674,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2635,
									"end": 2675,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2681,
									"end": 2682,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2677,
									"end": 2688,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 2688,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 2688,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2632,
									"end": 2689,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3948,
									"end": 4029,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3948,
									"end": 4029,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 4039,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 3095,
									"end": 4039,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3125,
									"end": 3788,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3125,
									"end": 3788,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1953,
									"end": 1954,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1946,
									"end": 1960,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 1960,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 1960,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1990,
									"end": 1994,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1977,
									"end": 1995,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1977,
									"end": 1995,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3161,
									"end": 3181,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3161,
									"end": 3181,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3161,
									"end": 3181,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3279,
									"end": 3515,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 3279,
									"end": 3515,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3293,
									"end": 3300,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3290,
									"end": 3291,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3287,
									"end": 3301,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3279,
									"end": 3515,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3279,
									"end": 3515,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 3279,
									"end": 3515,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3382,
									"end": 3401,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3382,
									"end": 3401,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3382,
									"end": 3401,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3376,
									"end": 3402,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3361,
									"end": 3403,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3361,
									"end": 3403,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3474,
									"end": 3501,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3474,
									"end": 3501,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3474,
									"end": 3501,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3474,
									"end": 3501,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3442,
									"end": 3443,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3430,
									"end": 3444,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3430,
									"end": 3444,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3430,
									"end": 3444,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3430,
									"end": 3444,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3328,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3328,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3279,
									"end": 3515,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 3279,
									"end": 3515,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3279,
									"end": 3515,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 3279,
									"end": 3515,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3283,
									"end": 3286,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3543,
									"end": 3549,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3541,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3531,
									"end": 3550,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3528,
									"end": 3729,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3528,
									"end": 3729,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3528,
									"end": 3729,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3604,
									"end": 3623,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3604,
									"end": 3623,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3604,
									"end": 3623,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3598,
									"end": 3624,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3687,
									"end": 3688,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3683,
									"end": 3697,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3683,
									"end": 3697,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3683,
									"end": 3697,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3699,
									"end": 3702,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 3679,
									"end": 3703,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3675,
									"end": 3712,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3671,
									"end": 3713,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3656,
									"end": 3714,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3641,
									"end": 3715,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3641,
									"end": 3715,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3528,
									"end": 3729,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3528,
									"end": 3729,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3528,
									"end": 3729,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3528,
									"end": 3729,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3775,
									"end": 3776,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3766,
									"end": 3772,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3763,
									"end": 3764,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3759,
									"end": 3773,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3777,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3749,
									"end": 3753,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3742,
									"end": 3778,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 4039,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 3095,
									"end": 4039,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 4039,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 4039,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 4039,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 4039,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2700,
									"end": 4045,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2700,
									"end": 4045,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2700,
									"end": 4045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4050,
									"end": 4177,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 4050,
									"end": 4177,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4111,
									"end": 4121,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 4106,
									"end": 4109,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 4102,
									"end": 4122,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4099,
									"end": 4100,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4092,
									"end": 4123,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4142,
									"end": 4146,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 4139,
									"end": 4140,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 4132,
									"end": 4147,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4166,
									"end": 4170,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4163,
									"end": 4164,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4156,
									"end": 4171,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4182,
									"end": 4598,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 4182,
									"end": 4598,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4271,
									"end": 4272,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4308,
									"end": 4313,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4271,
									"end": 4272,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4322,
									"end": 4592,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4322,
									"end": 4592,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4343,
									"end": 4350,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4333,
									"end": 4341,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4330,
									"end": 4351,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4322,
									"end": 4592,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4322,
									"end": 4592,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 4322,
									"end": 4592,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4402,
									"end": 4406,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4398,
									"end": 4399,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4394,
									"end": 4400,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4390,
									"end": 4407,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4384,
									"end": 4388,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4381,
									"end": 4408,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4378,
									"end": 4431,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4378,
									"end": 4431,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4378,
									"end": 4431,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4411,
									"end": 4429,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4411,
									"end": 4429,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 4411,
									"end": 4429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4411,
									"end": 4429,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4411,
									"end": 4429,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4461,
									"end": 4468,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4459,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4447,
									"end": 4469,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4444,
									"end": 4499,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4444,
									"end": 4499,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4444,
									"end": 4499,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4481,
									"end": 4497,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4481,
									"end": 4497,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4481,
									"end": 4497,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4481,
									"end": 4497,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4444,
									"end": 4499,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4444,
									"end": 4499,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4560,
									"end": 4582,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4560,
									"end": 4582,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4560,
									"end": 4582,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 4560,
									"end": 4582,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4520,
									"end": 4535,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4520,
									"end": 4535,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4520,
									"end": 4535,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4520,
									"end": 4535,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4322,
									"end": 4592,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4322,
									"end": 4592,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4322,
									"end": 4592,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 4322,
									"end": 4592,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4326,
									"end": 4329,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4182,
									"end": 4598,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4182,
									"end": 4598,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4182,
									"end": 4598,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4182,
									"end": 4598,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4182,
									"end": 4598,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4182,
									"end": 4598,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4603,
									"end": 5409,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 4603,
									"end": 5409,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4652,
									"end": 4657,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4682,
									"end": 4690,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4672,
									"end": 4752,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4672,
									"end": 4752,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4723,
									"end": 4724,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4737,
									"end": 4742,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4737,
									"end": 4742,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4672,
									"end": 4752,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4672,
									"end": 4752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4771,
									"end": 4775,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4761,
									"end": 4837,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 4761,
									"end": 4837,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4808,
									"end": 4809,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4822,
									"end": 4827,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4822,
									"end": 4827,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4761,
									"end": 4837,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 4761,
									"end": 4837,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4853,
									"end": 4857,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4871,
									"end": 4872,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4866,
									"end": 4925,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4866,
									"end": 4925,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 4866,
									"end": 4925,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4866,
									"end": 4925,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4939,
									"end": 4940,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4934,
									"end": 5064,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4934,
									"end": 5064,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 4934,
									"end": 5064,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 4934,
									"end": 5064,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4846,
									"end": 5064,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 4846,
									"end": 5064,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4866,
									"end": 4925,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4866,
									"end": 4925,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4896,
									"end": 4897,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4887,
									"end": 4897,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4887,
									"end": 4897,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4910,
									"end": 4915,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4910,
									"end": 4915,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4910,
									"end": 4915,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4934,
									"end": 5064,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 4934,
									"end": 5064,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4971,
									"end": 4974,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 4961,
									"end": 4969,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4958,
									"end": 4975,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4955,
									"end": 4998,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4955,
									"end": 4998,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 4955,
									"end": 4998,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4978,
									"end": 4996,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 4978,
									"end": 4996,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 4978,
									"end": 4996,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4978,
									"end": 4996,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 4978,
									"end": 4996,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5034,
									"end": 5035,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5020,
									"end": 5036,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5020,
									"end": 5036,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 5049,
									"end": 5054,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 5049,
									"end": 5054,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4846,
									"end": 5064,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 4846,
									"end": 5064,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4846,
									"end": 5064,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5148,
									"end": 5150,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5138,
									"end": 5146,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5135,
									"end": 5151,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5129,
									"end": 5132,
									"name": "PUSH",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 5123,
									"end": 5127,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5120,
									"end": 5133,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5116,
									"end": 5152,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5110,
									"end": 5112,
									"name": "PUSH",
									"source": 6,
									"value": "4E"
								},
								{
									"begin": 5100,
									"end": 5108,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5097,
									"end": 5113,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5092,
									"end": 5094,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 5086,
									"end": 5090,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5083,
									"end": 5095,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5079,
									"end": 5114,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5076,
									"end": 5153,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5073,
									"end": 5232,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5073,
									"end": 5232,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 5073,
									"end": 5232,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5185,
									"end": 5204,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5185,
									"end": 5204,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5185,
									"end": 5204,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 5217,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 5217,
									"end": 5222,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5073,
									"end": 5232,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 5073,
									"end": 5232,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5264,
									"end": 5298,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5289,
									"end": 5297,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5283,
									"end": 5287,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5264,
									"end": 5298,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 5264,
									"end": 5298,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5264,
									"end": 5298,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5264,
									"end": 5298,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5334,
									"end": 5340,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5330,
									"end": 5331,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5326,
									"end": 5332,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5322,
									"end": 5341,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 5313,
									"end": 5320,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5310,
									"end": 5342,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5307,
									"end": 5365,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5307,
									"end": 5365,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5307,
									"end": 5365,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5345,
									"end": 5363,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5345,
									"end": 5363,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 5345,
									"end": 5363,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5345,
									"end": 5363,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5345,
									"end": 5363,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5383,
									"end": 5403,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5383,
									"end": 5403,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4603,
									"end": 5409,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4603,
									"end": 5409,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4603,
									"end": 5409,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4603,
									"end": 5409,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4603,
									"end": 5409,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4603,
									"end": 5409,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4603,
									"end": 5409,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5414,
									"end": 5554,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 5414,
									"end": 5554,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5472,
									"end": 5477,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5501,
									"end": 5548,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 5542,
									"end": 5546,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 5532,
									"end": 5540,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5528,
									"end": 5547,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5522,
									"end": 5526,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5501,
									"end": 5548,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 5501,
									"end": 5548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5501,
									"end": 5548,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 5501,
									"end": 5548,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5492,
									"end": 5548,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 5414,
									"end": 5554,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5414,
									"end": 5554,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5559,
									"end": 5727,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 5559,
									"end": 5727,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5632,
									"end": 5641,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5632,
									"end": 5641,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5632,
									"end": 5641,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5663,
									"end": 5672,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5663,
									"end": 5672,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5680,
									"end": 5695,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5680,
									"end": 5695,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5680,
									"end": 5695,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 5674,
									"end": 5696,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5674,
									"end": 5696,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 5660,
									"end": 5697,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5650,
									"end": 5721,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 5650,
									"end": 5721,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5701,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 5701,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 5701,
									"end": 5719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5940,
									"end": 6065,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 5940,
									"end": 6065,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6005,
									"end": 6014,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6005,
									"end": 6014,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6005,
									"end": 6014,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6026,
									"end": 6036,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6026,
									"end": 6036,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6026,
									"end": 6036,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6023,
									"end": 6059,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6023,
									"end": 6059,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 6023,
									"end": 6059,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6039,
									"end": 6057,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 6039,
									"end": 6057,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 6039,
									"end": 6057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6420,
									"end": 6597,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 6420,
									"end": 6597,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 116,
									"end": 314,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 314,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 116,
									"end": 314,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 314,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 314,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 116,
									"end": 314,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 314,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204bd5d20a6ab90558adbcc50d5d8979f92f87ffaa2c524a0d525b2842a5ca60f264736f6c63430008190033",
									".code": [
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 116,
											"end": 314,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1053,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1039,
											"end": 1053,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1054,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1004,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 987,
											"end": 1005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 874,
											"end": 1061,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1202,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1066,
											"end": 1243,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1723,
											"end": 1759,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1723,
											"end": 1759,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1711,
											"end": 1713,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1696,
											"end": 1714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1581,
											"end": 1765,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2831,
											"end": 2863,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2863,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2880,
											"end": 2898,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2880,
											"end": 2898,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2880,
											"end": 2898,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2907,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2907,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2950,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2950,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2804,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2786,
											"end": 2804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3158,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3080,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3080,
											"end": 3098,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2961,
											"end": 3164,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3158,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3080,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3080,
											"end": 3098,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2961,
											"end": 3164,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3158,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3080,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3080,
											"end": 3098,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2961,
											"end": 3164,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3158,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3080,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3080,
											"end": 3098,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2961,
											"end": 3164,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1202,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1066,
											"end": 1243,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2831,
											"end": 2863,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2863,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2880,
											"end": 2898,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2880,
											"end": 2898,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2880,
											"end": 2898,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2907,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2907,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2950,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2950,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2804,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2786,
											"end": 2804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2611,
											"end": 2956,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1202,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1066,
											"end": 1243,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 869,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 615,
											"end": 869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 859,
											"end": 861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 844,
											"end": 862,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 844,
											"end": 862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 844,
											"end": 862,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 844,
											"end": 862,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 831,
											"end": 863,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 831,
											"end": 863,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1339,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1394,
											"end": 1396,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1382,
											"end": 1391,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1369,
											"end": 1392,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1365,
											"end": 1397,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1411,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1408,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1412,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1433,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1433,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1433,
											"end": 1462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1433,
											"end": 1462,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1433,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1515,
											"end": 1517,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1513,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1481,
											"end": 1519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1519,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1481,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1519,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1519,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1566,
											"end": 1568,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1564,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1538,
											"end": 1570,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1570,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1570,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1956,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1770,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1884,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1870,
											"end": 1879,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1868,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1880,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1853,
											"end": 1885,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1902,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1850,
											"end": 1902,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1899,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1896,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1902,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1850,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1940,
											"end": 1949,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1921,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1950,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1956,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1770,
											"end": 1956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2035,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2037,
											"end": 2043,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2092,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2087,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2076,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2088,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2093,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2058,
											"end": 2110,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2058,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2058,
											"end": 2110,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2106,
											"end": 2107,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2104,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2096,
											"end": 2108,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2058,
											"end": 2110,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2058,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2148,
											"end": 2157,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2129,
											"end": 2158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2158,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2129,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2211,
											"end": 2213,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2200,
											"end": 2209,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2214,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2177,
											"end": 2215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2215,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2177,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2215,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1961,
											"end": 2221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2606,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2226,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2306,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2360,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2360,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2360,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2369,
											"end": 2430,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2427,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 2415,
											"end": 2421,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2428,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2428,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2428,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2430,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2369,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2478,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2468,
											"end": 2474,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2479,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2445,
											"end": 2463,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2480,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2439,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2439,
											"end": 2600,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2532,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2517,
											"end": 2520,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2513,
											"end": 2533,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2503,
											"end": 2534,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2561,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2554,
											"end": 2555,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2547,
											"end": 2562,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2589,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2439,
											"end": 2600,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2439,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2439,
											"end": 2600,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2606,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2606,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3391,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3169,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3234,
											"end": 3243,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3234,
											"end": 3243,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3234,
											"end": 3243,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3265,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3265,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3385,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3252,
											"end": 3385,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3317,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3302,
											"end": 3305,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3298,
											"end": 3318,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3295,
											"end": 3296,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3288,
											"end": 3319,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3346,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3339,
											"end": 3340,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3332,
											"end": 3347,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3370,
											"end": 3374,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3367,
											"end": 3368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3360,
											"end": 3375,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"FairERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"FairERC20.sol\":\"FairERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"FairERC20.sol\":{\"keccak256\":\"0x9d7c171e10e4e24b89903efa40ddfbb6d7c822b22974afbd593182c5149d8751\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://815fb105c42b46689d56a980ccf79596bfc8c6cdd9b37d0fe70c8b6165cf845b\",\"dweb:/ipfs/QmUj5W9brKDfR6tdApT6D1oMhWsenhxss4MfrhyeqmRA1t\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "FairERC20.sol:FairERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "FairERC20.sol:FairERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "FairERC20.sol:FairERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "FairERC20.sol:FairERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "FairERC20.sol:FairERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"FairERC20.sol": {
				"ast": {
					"absolutePath": "FairERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"FairERC20": [
							816
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 817,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 817,
							"sourceUnit": 652,
							"src": "59:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 789,
										"name": "ERC20",
										"nameLocations": [
											"138:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "138:5:5"
									},
									"id": 790,
									"nodeType": "InheritanceSpecifier",
									"src": "138:5:5"
								}
							],
							"canonicalName": "FairERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 816,
							"linearizedBaseContracts": [
								816,
								651,
								41,
								755,
								729,
								785
							],
							"name": "FairERC20",
							"nameLocation": "125:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "247:65:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 804,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "263:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "267:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "263:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 806,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "275:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "290:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 808,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "294:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "294:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "290:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "275:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 803,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "257:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "257:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "257:48:5"
											}
										]
									},
									"id": 815,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 799,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 794,
													"src": "233:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 800,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 796,
													"src": "239:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 801,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 798,
												"name": "ERC20",
												"nameLocations": [
													"227:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "227:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "227:19:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "_totalSupply",
												"nameLocation": "170:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "162:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "162:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "198:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "184:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 793,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "184:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "218:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "204:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 795,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "204:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "161:65:5"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "247:0:5"
									},
									"scope": 816,
									"src": "150:162:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 817,
							"src": "116:198:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "33:281:5"
				},
				"id": 5
			}
		}
	}
}